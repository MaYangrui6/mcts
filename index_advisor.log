2024-03-05 20:31:16,223 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:31:16,236 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:31:16,244 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:31:16,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:31:16,284 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:31:16,286 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:31:16,294 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:31:16,294 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:31:16,295 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:31:16,295 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk index_type:  storage: 0)],len==4
2024-03-05 20:31:16,424 - root - MCTS - INFO - mcts 100 >= 73.578125
2024-03-05 20:31:16,424 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:31:16,425 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8403.56
2024-03-05 20:31:16,426 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0]
2024-03-05 20:31:16,426 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:31:16,426 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 376.4300000000003
2024-03-05 20:31:16,427 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_item_sk index_type:  storage: 71.765625，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:31:16,427 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8776.62
2024-03-05 20:31:16,427 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0]
2024-03-05 20:31:16,427 - root - filter_low_benefit_index - INFO - filter low benefit index for table: store_sales columns: ss_item_sk index_type:  storage: 71.765625
2024-03-05 20:31:16,427 - root - filter_low_benefit_index - INFO - table: store_sales columns: ss_item_sk index_type:  storage: 71.765625 has benefit of 3.3699999999989814
2024-03-05 20:31:16,432 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:31:16,464 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_store_sales_ss_item_sk"', '"<13382>btree_date_dim_d_date_sk"']
2024-03-05 20:31:16,464 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:31:16,464 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:31:16,464 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:31:16,464 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_store_sales_ss_item_sk"', '"<13382>btree_date_dim_d_date_sk"']
2024-03-05 20:31:16,464 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:31:16,464 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: store_sales columns: ss_item_sk index_type:  storage: 71.765625
2024-03-05 20:31:16,464 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:31:16,464 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:31:16,464 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: store_sales columns: ss_item_sk index_type:  storage: 71.765625] benefit: 379.8099999999995]
2024-03-05 20:31:16,465 - root - filter_no_benefit_indexes - INFO - index : table: store_sales columns: ss_item_sk index_type:  storage: 71.765625
2024-03-05 20:31:16,465 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: store_sales columns: ss_item_sk index_type:  storage: 71.765625] benefit: 379.8099999999995]
2024-03-05 20:31:16,465 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:31:16,470 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:31:16,471 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:31:16,471 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:39:29,885 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:39:29,897 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:39:29,905 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:39:29,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:39:29,954 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:39:29,956 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:39:29,963 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:39:29,963 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:39:29,963 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:39:29,963 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk index_type:  storage: 0)],len==4
2024-03-05 20:39:30,493 - root - MCTS - INFO - mcts 100 >= 73.578125
2024-03-05 20:39:30,493 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:39:30,493 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8403.56
2024-03-05 20:39:30,495 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0]
2024-03-05 20:39:30,495 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:39:30,495 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 376.4300000000003
2024-03-05 20:39:30,496 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_item_sk index_type:  storage: 71.765625，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:39:30,496 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8776.62
2024-03-05 20:39:30,496 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0]
2024-03-05 20:39:30,496 - root - filter_low_benefit_index - INFO - filter low benefit index for table: store_sales columns: ss_item_sk index_type:  storage: 71.765625
2024-03-05 20:39:30,496 - root - filter_low_benefit_index - INFO - table: store_sales columns: ss_item_sk index_type:  storage: 71.765625 has benefit of 3.3699999999989814
2024-03-05 20:39:30,501 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:39:30,638 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_store_sales_ss_item_sk"', '"<13382>btree_date_dim_d_date_sk"']
2024-03-05 20:39:30,638 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:39:30,639 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:39:30,639 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:39:30,639 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_store_sales_ss_item_sk"', '"<13382>btree_date_dim_d_date_sk"']
2024-03-05 20:39:30,639 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:39:30,639 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: store_sales columns: ss_item_sk index_type:  storage: 71.765625
2024-03-05 20:39:30,639 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:39:30,639 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:39:30,639 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: store_sales columns: ss_item_sk index_type:  storage: 71.765625] benefit: 379.8099999999995]
2024-03-05 20:39:30,639 - root - filter_no_benefit_indexes - INFO - index : table: store_sales columns: ss_item_sk index_type:  storage: 71.765625
2024-03-05 20:39:30,639 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: store_sales columns: ss_item_sk index_type:  storage: 71.765625] benefit: 379.8099999999995]
2024-03-05 20:39:30,639 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:39:30,645 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:39:30,645 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:39:30,645 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:41:25,450 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:41:25,497 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:41:25,542 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:41:25,578 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,583 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,607 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,626 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,640 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,671 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,675 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,678 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,685 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,688 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,701 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,703 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,706 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,717 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,738 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,747 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:41:25,760 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:41:25,761 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:41:25,761 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:41:25,761 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:41:25,761 - root - generate_sorted_atomic_config - INFO - cnt num 3 queries:statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:41:25,761 - root - generate_sorted_atomic_config - INFO - cnt num 4 queries:statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:41:25,761 - root - generate_sorted_atomic_config - INFO - cnt num 5 queries:statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 0, table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:41:25,761 - root - generate_sorted_atomic_config - INFO - cnt num 6 queries:statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:41:25,761 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0,), (table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 0, table: customer columns: c_customer_sk index_type:  storage: 0), (table: date_dim columns: d_month_seq index_type:  storage: 0,), (table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==21
2024-03-05 20:41:27,016 - root - MCTS - INFO - mcts 100 >= 227.0546875
2024-03-05 20:41:27,016 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,123 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,193 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,253 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,299 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,333 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,363 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,390 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,415 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,440 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :242.23239170078793
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8779.99
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8779.99
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8779.99
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8779.99
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8779.99
2024-03-05 20:41:27,464 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8779.99
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：8779.99，self.get_indexes_cost_of_query(query, tuple([index])) :8403.56
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.4
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.4
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：73320.59，self.get_indexes_cost_of_query(query, tuple([index])) :73320.59
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：73320.59，self.get_indexes_cost_of_query(query, tuple([index])) :73270.34
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625，query :statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70045.43，self.get_indexes_cost_of_query(query, tuple([index])) :70045.43
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70045.43，self.get_indexes_cost_of_query(query, tuple([index])) :70045.43
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70045.43，self.get_indexes_cost_of_query(query, tuple([index])) :69927.94
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625，query :statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：48578.69，self.get_indexes_cost_of_query(query, tuple([index])) :10028.9
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144480.97，self.get_indexes_cost_of_query(query, tuple([index])) :144480.97
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144480.97，self.get_indexes_cost_of_query(query, tuple([index])) :144480.97
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144480.97，self.get_indexes_cost_of_query(query, tuple([index])) :144414.12
2024-03-05 20:41:27,466 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 20:41:27,467 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625
2024-03-05 20:41:27,467 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625 has benefit of 38549.78999999998
2024-03-05 20:41:27,467 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,467 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：48578.69，self.get_indexes_cost_of_query(query, tuple([index])) :48392.53
2024-03-05 20:41:27,467 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 20:41:27,467 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 20:41:27,467 - root - filter_low_benefit_index - INFO - table: customer columns: c_customer_sk index_type:  storage: 2.484375 has benefit of 236.4099999999744
2024-03-05 20:41:27,468 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:41:27,468 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:41:27,468 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 184.5899999999674
2024-03-05 20:41:27,468 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,468 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-05 20:41:27,468 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,468 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：73320.59，self.get_indexes_cost_of_query(query, tuple([index])) :73320.59
2024-03-05 20:41:27,468 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,468 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70045.43，self.get_indexes_cost_of_query(query, tuple([index])) :70045.43
2024-03-05 20:41:27,468 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：48578.69，self.get_indexes_cost_of_query(query, tuple([index])) :48578.69
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144480.97，self.get_indexes_cost_of_query(query, tuple([index])) :144480.97
2024-03-05 20:41:27,469 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:41:27,469 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:41:27,469 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999115
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.4
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：73320.59，self.get_indexes_cost_of_query(query, tuple([index])) :71183.99
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70045.43，self.get_indexes_cost_of_query(query, tuple([index])) :68022.36
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：48578.69，self.get_indexes_cost_of_query(query, tuple([index])) :46555.93
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144480.97，self.get_indexes_cost_of_query(query, tuple([index])) :144480.97
2024-03-05 20:41:27,469 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 20:41:27,469 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 20:41:27,469 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 6182.429999999935
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.4
2024-03-05 20:41:27,469 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：73320.59，self.get_indexes_cost_of_query(query, tuple([index])) :73320.59
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70045.43，self.get_indexes_cost_of_query(query, tuple([index])) :70045.43
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：48578.69，self.get_indexes_cost_of_query(query, tuple([index])) :48578.69
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144480.97，self.get_indexes_cost_of_query(query, tuple([index])) :140435.91
2024-03-05 20:41:27,470 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:41:27,470 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-05 20:41:27,470 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.0599999999395
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：73320.59，self.get_indexes_cost_of_query(query, tuple([index])) :73320.59
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70045.43，self.get_indexes_cost_of_query(query, tuple([index])) :70045.43
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：48578.69，self.get_indexes_cost_of_query(query, tuple([index])) :48578.69
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144480.97，self.get_indexes_cost_of_query(query, tuple([index])) :144480.97
2024-03-05 20:41:27,470 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: store_sales columns: ss_item_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:41:27,470 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:41:27,471 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 376.9299999999348
2024-03-05 20:41:27,471 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:41:27,471 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-05 20:41:27,471 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,471 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：48578.69，self.get_indexes_cost_of_query(query, tuple([index])) :48578.69
2024-03-05 20:41:27,471 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:41:27,471 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:41:27,471 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.37999999994645
2024-03-05 20:41:27,471 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,471 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：73320.59，self.get_indexes_cost_of_query(query, tuple([index])) :73162.7
2024-03-05 20:41:27,472 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 20:41:27,472 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：48578.69，self.get_indexes_cost_of_query(query, tuple([index])) :48394.28
2024-03-05 20:41:27,472 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 20:41:27,472 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 20:41:27,472 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 342.29999999993015
2024-03-05 20:41:27,478 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"']
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"']
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"']
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"']
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,553 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"']
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"']
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"']
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"']
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"']
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,554 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,555 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_customer_address_ca_address_sk"', '"<13383>btree_customer_c_customer_sk"']
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_customer_address_ca_address_sk"', '"<13383>btree_customer_c_customer_sk"']
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_customer_address_ca_address_sk"', '"<13383>btree_customer_c_customer_sk"']
2024-03-05 20:41:27,556 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_customer_address_ca_address_sk"', '"<13383>btree_customer_c_customer_sk"']
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_customer_address_ca_address_sk"', '"<13383>btree_customer_c_customer_sk"']
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_customer_address_ca_address_sk"', '"<13383>btree_customer_c_customer_sk"']
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_customer_address_ca_address_sk"', '"<13383>btree_customer_c_customer_sk"']
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_customer_address_ca_address_sk"', '"<13383>btree_customer_c_customer_sk"']
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_customer_address_ca_address_sk"', '"<13383>btree_customer_c_customer_sk"']
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,557 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_catalog_sales_cs_sold_date_sk"', '"<13383>btree_customer_c_customer_sk"', '"<13390>btree_customer_address_ca_address_sk"']
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,558 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_catalog_sales_cs_sold_date_sk"', '"<13383>btree_customer_c_customer_sk"', '"<13390>btree_customer_address_ca_address_sk"']
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_catalog_sales_cs_sold_date_sk"', '"<13383>btree_customer_c_customer_sk"', '"<13390>btree_customer_address_ca_address_sk"']
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_catalog_sales_cs_sold_date_sk"', '"<13383>btree_customer_c_customer_sk"', '"<13390>btree_customer_address_ca_address_sk"']
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_catalog_sales_cs_sold_date_sk"', '"<13383>btree_customer_c_customer_sk"', '"<13390>btree_customer_address_ca_address_sk"']
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_catalog_sales_cs_sold_date_sk"', '"<13383>btree_customer_c_customer_sk"', '"<13390>btree_customer_address_ca_address_sk"']
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_catalog_sales_cs_sold_date_sk"', '"<13383>btree_customer_c_customer_sk"', '"<13390>btree_customer_address_ca_address_sk"']
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_catalog_sales_cs_sold_date_sk"', '"<13383>btree_customer_c_customer_sk"', '"<13390>btree_customer_address_ca_address_sk"']
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_catalog_sales_cs_sold_date_sk"', '"<13383>btree_customer_c_customer_sk"', '"<13390>btree_customer_address_ca_address_sk"']
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 20:41:27,559 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:41:27,560 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 39072.83]
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2344.7399999999907, statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 39072.83]
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66, statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 2140.5699999999924, statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_month_seq index_type:  storage: 1.8125] benefit: 4111.9100000000035]
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2344.7399999999907, statement: select dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1
 	and dt.d_moy=11
 	and dt.d_year=1999
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 2140.5699999999924]
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1195 and 1195+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_month_seq index_type:  storage: 1.8125] benefit: 4111.9100000000035]
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select dt.d_year
 ,item.i_brand_id brand_id
 ,item.i_brand brand
 ,sum(ss_ext_sales_price) sum_agg
 from date_dim dt
 ,store_sales
 ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 and store_sales.ss_item_sk = item.i_item_sk
 and item.i_manufact_id = 498
 and dt.d_moy=12
 group by dt.d_year
 ,item.i_brand
 ,item.i_brand_id
 order by dt.d_year
 ,sum_agg desc
 ,brand_id
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 376.4300000000003, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 20:41:27,561 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,extended_price
 ,extended_tax
 ,list_price
 from (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_ext_sales_price) extended_price
 ,sum(ss_ext_list_price) list_price
 ,sum(ss_ext_tax) extended_tax
 from store_sales
 ,date_dim
 ,store
 ,household_demographics
 ,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and date_dim.d_dom between 1 and 2
 and (household_demographics.hd_dep_count = 3 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_year in (1998,1998+1,1998+2)
 and store.s_city in ('Oak Grove','Midway')
 group by ss_ticket_number
 ,ss_customer_sk
 ,ss_addr_sk,ca_city) dn
 ,customer
 ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2344.7399999999907, statement: select ca_zip
 ,sum(cs_sales_price)
 from catalog_sales
 ,customer
 ,customer_address
 ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
 '85392', '85460', '80348', '81792')
 	 or ca_state in ('CA','WA','GA')
 	 or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_sold_date_sk index_type:  storage: 35.9140625, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 39072.83]
2024-03-05 20:41:27,561 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:41:27,569 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:41:27,569 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:41:27,570 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:45:12,305 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:45:12,331 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:45:12,353 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:45:12,420 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:45:12,445 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:45:12,469 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:45:12,501 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:45:12,501 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:45:12,501 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:45:12,501 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-05 20:45:14,004 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-05 20:45:14,005 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:45:14,030 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:45:14,053 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:45:14,075 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:45:14,096 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:45:14,116 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:45:14,116 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-05 20:45:14,117 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:45:14,117 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:45:14,118 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-05 20:45:14,118 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:45:14,118 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-05 20:45:14,118 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:45:14,118 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:45:14,118 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-05 20:45:14,118 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:45:14,118 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-05 20:45:14,118 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:45:14,118 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:45:14,118 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-05 20:45:14,119 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:45:14,119 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-05 20:45:14,119 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:45:14,119 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:45:14,119 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-05 20:45:14,125 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:45:14,279 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:45:14,280 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:45:14,280 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:45:14,280 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,280 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,280 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,280 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,280 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:45:14,281 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:45:14,281 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:45:14,282 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:45:14,282 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:45:14,282 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:45:14,282 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:45:14,282 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:45:14,282 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:45:14,282 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:45:14,288 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:45:14,289 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:45:14,289 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:46:49,580 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:46:49,615 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:46:49,636 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:46:49,700 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:46:49,732 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:46:49,746 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:46:49,768 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:46:49,769 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:46:49,769 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:46:49,769 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-05 20:46:51,463 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-05 20:46:51,463 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:46:51,499 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:46:51,532 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:46:51,561 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:46:51,590 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:46:51,619 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:46:51,619 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-05 20:46:51,625 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:46:51,625 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:46:51,625 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-05 20:46:51,626 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:46:51,626 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-05 20:46:51,626 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:46:51,626 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:46:51,626 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-05 20:46:51,626 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:46:51,626 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-05 20:46:51,626 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:46:51,626 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:46:51,627 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-05 20:46:51,627 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:46:51,627 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-05 20:46:51,628 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:46:51,628 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:46:51,628 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-05 20:46:51,636 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:46:51,806 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:46:51,807 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:46:51,807 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:46:51,807 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:46:51,808 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,809 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:46:51,809 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:46:51,809 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:46:51,810 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:46:51,810 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:46:51,810 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:46:51,810 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:46:51,810 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:46:51,810 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:46:51,810 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:46:51,817 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:46:51,817 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:46:51,818 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:49:32,908 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:49:32,933 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:49:32,952 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:49:33,016 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:49:33,038 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:49:33,052 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:49:33,071 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:49:33,071 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:49:33,071 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:49:33,072 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-05 20:49:34,477 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-05 20:49:34,477 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:49:34,503 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:49:34,525 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:49:34,545 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:49:34,564 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:49:34,583 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:49:34,583 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-05 20:49:34,584 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:49:34,584 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:49:34,584 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-05 20:49:34,585 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:49:34,585 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-05 20:49:34,585 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:49:34,585 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:49:34,585 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-05 20:49:34,585 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:49:34,585 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-05 20:49:34,585 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:49:34,585 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:49:34,585 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-05 20:49:34,585 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:49:34,586 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-05 20:49:34,586 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:49:34,586 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:49:34,586 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-05 20:49:34,591 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:49:34,735 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,736 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:49:34,737 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:49:34,737 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:49:34,737 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-05 20:49:34,738 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:49:34,738 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-05 20:49:34,738 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:49:34,738 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-05 20:49:34,738 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:49:34,738 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-05 20:49:34,738 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:49:34,743 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:49:34,743 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:49:34,743 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:50:51,797 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:50:51,821 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:50:51,840 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:50:51,908 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:50:51,930 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:50:51,945 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:50:51,966 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:50:51,966 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:50:51,966 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:50:51,967 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-05 20:50:53,565 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-05 20:50:53,566 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:50:53,617 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:50:53,647 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:50:53,668 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:50:53,688 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:50:53,709 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:50:53,709 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-05 20:50:53,713 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:50:53,714 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:50:53,714 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-05 20:50:53,714 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:50:53,714 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-05 20:50:53,714 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:50:53,714 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:50:53,714 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-05 20:50:53,715 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:50:53,715 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-05 20:50:53,715 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:50:53,715 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:50:53,715 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-05 20:50:53,715 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:50:53,715 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-05 20:50:53,715 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:50:53,715 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:50:53,716 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-05 20:50:53,723 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:50:53,895 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:50:53,897 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:50:53,897 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-05 20:50:53,897 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:50:53,897 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-05 20:50:53,897 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:50:53,897 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-05 20:50:53,898 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:50:53,898 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-05 20:50:53,898 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:50:53,905 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:50:53,905 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:50:53,905 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:52:50,445 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:52:50,613 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:52:50,634 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:52:54,290 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:53:08,866 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:53:09,078 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:53:09,099 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:53:09,422 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:53:09,447 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:53:17,529 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:55:12,566 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:12,591 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:12,610 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:12,674 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:55:12,696 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:55:12,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:55:12,737 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:12,737 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:55:12,737 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:55:12,737 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-05 20:55:14,254 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-05 20:55:14,254 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:14,302 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:14,324 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:14,344 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:14,364 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:14,382 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:55:14,382 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-05 20:55:14,386 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:55:14,386 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:55:14,386 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-05 20:55:14,386 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:55:14,386 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-05 20:55:14,386 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:55:14,386 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:55:14,386 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-05 20:55:14,387 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:55:14,387 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-05 20:55:14,387 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:55:14,387 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:55:14,387 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-05 20:55:14,387 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:55:14,387 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-05 20:55:14,387 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:55:14,387 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:55:14,387 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-05 20:55:14,392 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:14,538 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:55:14,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:55:14,538 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,540 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,540 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:55:14,540 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:55:14,540 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,540 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:14,540 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:55:14,540 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-05 20:55:14,540 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:55:14,540 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-05 20:55:14,540 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:55:14,540 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-05 20:55:14,540 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:55:14,540 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-05 20:55:14,540 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:55:14,546 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:14,546 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:55:14,546 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:55:24,343 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:24,362 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:24,381 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:24,433 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:55:24,453 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:55:24,478 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:55:24,500 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:24,500 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:55:24,501 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:55:24,501 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-05 20:55:24,912 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-05 20:55:24,912 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:24,931 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:24,946 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:24,959 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:24,971 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-05 20:55:24,983 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:55:24,983 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-05 20:55:24,984 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:55:24,984 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:55:24,984 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-05 20:55:24,984 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:55:24,984 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-05 20:55:24,985 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:55:24,985 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:55:24,985 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-05 20:55:24,985 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:55:24,985 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-05 20:55:24,985 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:55:24,985 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:55:24,985 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-05 20:55:24,985 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:55:24,985 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-05 20:55:24,985 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:55:24,985 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:55:24,985 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-05 20:55:24,991 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:25,032 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:55:25,033 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,034 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,034 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:55:25,034 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,034 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:55:25,034 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:55:25,034 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,034 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,034 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,034 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:55:25,034 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:55:25,034 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:55:25,034 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:55:25,034 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:55:25,034 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:55:25,034 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:55:25,034 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-05 20:55:25,034 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-05 20:55:25,034 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:55:25,040 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:25,041 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:55:25,041 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:55:55,680 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:55,876 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:55,896 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:55:56,261 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:55:56,284 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:55:56,300 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,626 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:56:11,647 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:56:11,666 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:56:11,717 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,737 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,752 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,768 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,785 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,798 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,810 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,822 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,847 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,859 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,872 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,885 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,897 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,909 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,922 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,934 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,947 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,959 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,972 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,984 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:11,996 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,009 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,022 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,035 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,049 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,061 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,073 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,085 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,110 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,122 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,134 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,146 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,159 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,171 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,184 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,196 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,208 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,220 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,232 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,244 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,257 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,282 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,300 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,319 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,338 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,375 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,391 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,403 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,416 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,428 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,441 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,453 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,465 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,478 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,490 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,503 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,521 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,534 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,547 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,561 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,574 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,587 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,600 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,613 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,626 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,640 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,653 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,667 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,682 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,696 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,731 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,746 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,785 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,810 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,830 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,849 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,891 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,904 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,917 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,933 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,946 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,959 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,972 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,985 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:12,997 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,010 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,022 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,034 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,047 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,060 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,072 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,084 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,097 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,109 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,122 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,134 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,146 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,159 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,172 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,185 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,197 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,210 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,234 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,247 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,259 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,271 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,283 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,296 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,308 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,320 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,344 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,357 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,369 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,381 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,393 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:56:13,410 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:56:13,411 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 20:56:13,411 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 20:56:13,411 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0,)],len==10
2024-03-05 20:56:13,796 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-05 20:56:13,796 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-05 20:56:13,809 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-05 20:56:13,818 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-05 20:56:13,826 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-05 20:56:13,834 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-05 20:56:13,842 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:56:13,842 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-05 20:56:13,842 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:56:13,843 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:56:13,843 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-05 20:56:13,843 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:56:13,843 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-05 20:56:13,843 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:56:13,843 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:56:13,843 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-05 20:56:13,843 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:56:13,843 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-05 20:56:13,844 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:56:13,844 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 20:56:13,844 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-05 20:56:13,844 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 20:56:13,844 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-05 20:56:13,844 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 20:56:13,844 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:56:13,844 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-05 20:56:13,849 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:56:13,890 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 20:56:13,891 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,892 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 20:56:13,892 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 20:56:13,892 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-05 20:56:13,892 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 20:56:13,892 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-05 20:56:13,892 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 20:56:13,892 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-05 20:56:13,892 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 20:56:13,892 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-05 20:56:13,892 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 20:56:13,898 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:56:13,899 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 20:56:13,899 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 20:57:53,740 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:57:53,920 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:57:53,939 - root - __init_conn_handle - INFO - connection successful
2024-03-05 20:57:54,254 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 20:57:54,284 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:00:56,670 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:00:56,836 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:00:56,865 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:00:57,206 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:00:57,229 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:01:04,294 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,308 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:06:15,377 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:06:15,447 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:06:15,530 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,554 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,573 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,595 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,617 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,633 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,646 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,659 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,680 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,698 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,714 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,732 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,745 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,760 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,773 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,803 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,824 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,846 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,879 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,892 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,905 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,921 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,940 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,958 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,971 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,984 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:15,997 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,011 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,025 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,038 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,052 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,065 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,078 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,091 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,103 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,117 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,133 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,157 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,174 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,187 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,201 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,229 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,258 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,271 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,284 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,297 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,311 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,324 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,338 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,350 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,363 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,376 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,388 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,400 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,414 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,428 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,440 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,453 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,465 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,479 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,492 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,505 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,519 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,533 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,545 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,558 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,574 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,589 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,604 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,619 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,633 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,646 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,659 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,672 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,685 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,697 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,710 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,726 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,744 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,757 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,773 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,788 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,815 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,830 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,844 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,859 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,880 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,899 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,919 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,939 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,958 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,974 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:16,989 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,004 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,028 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,052 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,067 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,081 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,094 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,115 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,131 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,148 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,162 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,175 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,187 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,199 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,213 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,228 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,283 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,297 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,311 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,338 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,363 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,389 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,413 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,439 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,482 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,501 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,517 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,550 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,568 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,580 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,593 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,606 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,619 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,632 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,644 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,658 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,672 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,687 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,700 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,715 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,740 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,759 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,779 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,798 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,855 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,874 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,886 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,899 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,912 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,925 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,938 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,950 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,963 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,976 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:17,992 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,013 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,055 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,077 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,089 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,102 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,115 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,132 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,144 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,158 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,178 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,191 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,204 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,228 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,241 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,254 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,267 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,279 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,291 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,303 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,315 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,328 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,340 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,352 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,364 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,376 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,388 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,400 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,413 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,425 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,438 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,453 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,466 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,479 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,495 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,508 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,521 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,538 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,551 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,564 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,577 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,589 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,602 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,614 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,627 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,639 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,652 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,664 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,677 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,689 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,701 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,727 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,740 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,753 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,765 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,777 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,813 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,825 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,837 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,850 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,862 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,874 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,886 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,897 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,909 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,921 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,932 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,944 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,957 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,981 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:18,993 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,005 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,017 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,028 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,040 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,063 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,074 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,086 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,111 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,124 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,137 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,151 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,170 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,184 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,212 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,220 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,225 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,234 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,236 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,238 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,240 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,258 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,284 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,298 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,311 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,325 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,337 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,350 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,363 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,375 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,387 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,412 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,427 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,443 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,456 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,469 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,483 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,495 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,507 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,519 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,531 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,543 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,555 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,567 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,579 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,591 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,603 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,623 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,626 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,628 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,630 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,632 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:06:19,639 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:06:19,639 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 21:06:19,639 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:06:19,639 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:06:19,639 - root - generate_sorted_atomic_config - INFO - cnt num 3 queries:statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:06:19,639 - root - generate_sorted_atomic_config - INFO - cnt num 4 queries:statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:06:19,639 - root - generate_sorted_atomic_config - INFO - cnt num 5 queries:statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0, table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:06:19,640 - root - generate_sorted_atomic_config - INFO - cnt num 6 queries:statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:06:19,640 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0), (table: time_dim columns: t_time_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0), (table: date_dim columns: d_date index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0,)],len==18
2024-03-05 21:06:21,004 - root - MCTS - INFO - mcts 100 >= 186.1328125
2024-03-05 21:06:21,005 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,102 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,175 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,229 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,278 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,315 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,347 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,377 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,405 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,435 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:06:21,465 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-05 21:06:21,465 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-05 21:06:21,465 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,465 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :69016.89
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139809.26
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:06:21,466 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,467 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:06:21,467 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,467 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70011.28
2024-03-05 21:06:21,469 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:06:21,469 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:06:21,469 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 5905.590000000026
2024-03-05 21:06:21,470 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14413.335
2024-03-05 21:06:21,470 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,470 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14413.335
2024-03-05 21:06:21,470 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:06:21,470 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:06:21,470 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875 has benefit of 811.5300000000279
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-05 21:06:21,471 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:06:21,471 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:06:21,471 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 137.23000000003958
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:06:21,471 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,472 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :68088.02
2024-03-05 21:06:21,472 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:06:21,472 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-05 21:06:21,472 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date index_type:  storage: 1.8125 has benefit of 2040.75
2024-03-05 21:06:21,472 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,472 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:06:21,472 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,472 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:06:21,472 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,472 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :135782.09
2024-03-05 21:06:21,472 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,472 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:06:21,472 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:06:21,472 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:06:21,472 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 6076.830000000016
2024-03-05 21:06:21,473 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0]
2024-03-05 21:06:21,473 - root - filter_low_benefit_index - INFO - filter low benefit index for table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-05 21:06:21,473 - root - filter_low_benefit_index - INFO - table: time_dim columns: t_time_sk index_type:  storage: 2.1484375 has benefit of 1226.5
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,473 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:06:21,473 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:06:21,473 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:06:21,474 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 1.5
2024-03-05 21:06:21,474 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,474 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-05 21:06:21,474 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,474 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-05 21:06:21,474 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:06:21,474 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:06:21,474 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 918.9199999999837
2024-03-05 21:06:21,475 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,475 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:06:21,475 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:06:21,475 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:06:21,475 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,475 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:06:21,475 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:06:21,475 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-05 21:06:21,475 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:06:21,475 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 21:06:21,475 - root - filter_low_benefit_index - INFO - table: customer columns: c_customer_sk index_type:  storage: 2.484375 has benefit of 1.5
2024-03-05 21:06:21,482 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:06:21,583 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,584 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,585 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,586 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,587 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,588 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_time_dim_t_time_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_time_dim_t_time_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_time_dim_t_time_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_time_dim_t_time_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_time_dim_t_time_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_time_dim_t_time_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_time_dim_t_time_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_time_dim_t_time_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_time_dim_t_time_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13384>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13389>btree_customer_address_ca_address_sk"']
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_date"', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_date"', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_date"', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_date"', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_date"', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,591 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_date"', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_date"', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_date"', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_date"', '"<13384>btree_item_i_item_sk"']
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3359.699999999997, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3359.699999999997]
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3359.699999999997, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3359.699999999997]
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3359.699999999997, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3359.699999999997, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date index_type:  storage: 1.8125] benefit: 2158.25]
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date index_type:  storage: 1.8125] benefit: 2158.25]
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 1226.5]
2024-03-05 21:06:21,592 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:06:21,593 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3359.699999999997, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3359.699999999997]
2024-03-05 21:06:21,593 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:06:21,593 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-05 21:06:21,593 - root - filter_no_benefit_indexes - INFO - index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 21:06:21,593 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-05 21:06:21,593 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 21:06:21,599 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:06:21,599 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 21:06:21,599 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 21:10:05,202 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:10:05,267 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:10:05,327 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:10:05,384 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,408 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,425 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,442 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,461 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,475 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,489 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,503 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,517 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,531 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,545 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,561 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,578 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,595 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,611 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,625 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,640 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,653 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,671 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,709 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,722 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,740 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,758 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,776 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,791 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,824 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,846 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,861 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,873 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,885 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,910 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,924 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,940 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,957 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,970 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,983 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:05,996 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,009 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,021 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,033 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,046 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,059 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,072 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,085 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,097 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,110 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,122 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,135 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,148 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,160 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,185 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,198 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,210 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,247 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,260 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,272 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,288 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,303 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,317 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,336 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,353 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,367 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,389 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,409 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,425 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,442 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,455 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,473 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,490 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,505 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,519 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,534 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,548 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,564 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,578 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,597 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,616 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,631 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,644 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,657 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,677 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,689 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,702 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,715 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,727 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,739 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,752 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,765 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,777 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,790 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,803 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,831 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,846 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,860 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,872 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,885 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,910 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,922 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,934 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,947 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,960 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,972 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,984 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:06,996 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,009 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,021 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,033 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,045 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,063 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,078 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,091 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,104 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,118 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,132 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,158 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,184 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,238 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,286 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,304 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,317 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,335 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,352 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,378 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,406 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,432 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,456 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,470 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,483 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,497 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,511 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,523 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,536 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,549 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,564 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,596 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,610 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,626 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,641 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,655 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,671 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,684 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,699 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,712 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,725 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,738 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,750 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,763 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,776 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,788 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,813 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,832 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,849 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,870 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,889 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,915 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:07,987 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,013 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,038 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,055 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,074 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,092 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,109 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,136 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,150 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,172 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,190 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,202 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,215 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,228 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,241 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,258 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,276 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,292 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,304 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,316 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,329 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,341 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,353 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,365 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,377 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,390 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,402 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,415 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,427 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,440 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,452 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,464 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,489 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,501 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,513 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,525 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,537 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,549 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,561 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,575 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,588 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,603 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,615 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,632 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,649 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,694 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,707 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,720 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,733 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,750 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,769 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,796 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,822 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,847 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,873 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,925 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,981 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:08,997 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,009 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,021 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,033 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,045 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,057 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,069 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,082 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,094 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,106 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,118 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,130 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,142 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,154 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,166 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,178 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,189 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,202 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,230 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,234 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,236 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,238 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,241 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,249 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,251 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,252 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,254 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,272 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,296 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,309 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,321 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,333 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,346 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,362 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,377 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,392 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,407 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,423 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,442 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,457 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,471 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,485 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,498 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,519 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,533 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,546 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,560 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,574 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,587 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,601 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,617 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,632 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,655 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,672 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,695 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,699 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,703 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,706 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,709 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:10:09,719 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:10:09,719 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 21:10:09,719 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:10:09,719 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:10:09,720 - root - generate_sorted_atomic_config - INFO - cnt num 3 queries:statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:10:09,720 - root - generate_sorted_atomic_config - INFO - cnt num 4 queries:statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:10:09,720 - root - generate_sorted_atomic_config - INFO - cnt num 5 queries:statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0, table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:10:09,720 - root - generate_sorted_atomic_config - INFO - cnt num 6 queries:statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:10:09,720 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0), (table: time_dim columns: t_time_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0), (table: date_dim columns: d_date index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0,)],len==18
2024-03-05 21:10:11,142 - root - MCTS - INFO - mcts 100 >= 186.1328125
2024-03-05 21:10:11,142 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,270 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,349 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,417 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,467 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,507 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,541 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,571 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,599 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,630 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :268.6253934942287
2024-03-05 21:10:11,659 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :69016.89
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:10:11,661 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,661 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :68088.02
2024-03-05 21:10:11,664 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:10:11,664 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:10:11,665 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 5905.590000000026
2024-03-05 21:10:11,665 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,665 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:10:11,665 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,665 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:10:11,665 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:10:11,665 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-05 21:10:11,665 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date index_type:  storage: 1.8125 has benefit of 2040.75
2024-03-05 21:10:11,666 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0]
2024-03-05 21:10:11,666 - root - filter_low_benefit_index - INFO - filter low benefit index for table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-05 21:10:11,666 - root - filter_low_benefit_index - INFO - table: time_dim columns: t_time_sk index_type:  storage: 2.1484375 has benefit of 1226.5
2024-03-05 21:10:11,667 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:10:11,667 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:10:11,667 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 918.9199999999837
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :135782.09
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,668 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:10:11,668 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:10:11,668 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:10:11,668 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 6076.830000000016
2024-03-05 21:10:11,669 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,669 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14413.335
2024-03-05 21:10:11,669 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,669 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14413.335
2024-03-05 21:10:11,670 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:10:11,670 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:10:11,670 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875 has benefit of 811.5300000000279
2024-03-05 21:10:11,670 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,670 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-05 21:10:11,670 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,670 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-05 21:10:11,670 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,670 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:10:11,670 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,670 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:10:11,670 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,671 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:10:11,671 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:10:11,671 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:10:11,671 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 1.5
2024-03-05 21:10:11,671 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,671 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:10:11,671 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,671 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:10:11,671 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,672 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:10:11,672 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,672 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-05 21:10:11,672 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:10:11,672 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 21:10:11,672 - root - filter_low_benefit_index - INFO - table: customer columns: c_customer_sk index_type:  storage: 2.484375 has benefit of 1.5
2024-03-05 21:10:11,672 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,673 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-05 21:10:11,673 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,673 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-05 21:10:11,673 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:10:11,673 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139809.26
2024-03-05 21:10:11,673 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:10:11,673 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70011.28
2024-03-05 21:10:11,673 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:10:11,673 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:10:11,673 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 137.23000000003958
2024-03-05 21:10:11,680 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,773 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,774 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:10:11,775 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', 'store_sales_pkey', '"<13388>btree_date_dim_d_date_sk"', 'store_pkey', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:10:11,778 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_time_dim_t_time_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_time_dim_t_time_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_time_dim_t_time_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_time_dim_t_time_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_time_dim_t_time_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_time_dim_t_time_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_time_dim_t_time_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_time_dim_t_time_sk"']
2024-03-05 21:10:11,779 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_time_dim_t_time_sk"']
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_item_i_item_sk"', 'promotion_pkey', '"<13389>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_item_i_item_sk"', 'promotion_pkey', '"<13389>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_item_i_item_sk"', 'promotion_pkey', '"<13389>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_item_i_item_sk"', 'promotion_pkey', '"<13389>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_item_i_item_sk"', 'promotion_pkey', '"<13389>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:10:11,780 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_item_i_item_sk"', 'promotion_pkey', '"<13389>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_item_i_item_sk"', 'promotion_pkey', '"<13389>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_item_i_item_sk"', 'promotion_pkey', '"<13389>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13390>btree_item_i_item_sk"', 'promotion_pkey', '"<13389>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_date"', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,781 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_date"', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_date"', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_date"', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_date"', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_date"', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_date"', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_date"', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_date"', '"<13390>btree_item_i_item_sk"']
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:10:11,782 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:10:11,782 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:10:11,782 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 3359.699999999997, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 3359.699999999997]
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2158.25]
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 1226.5]
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4068.140000000014]
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4068.140000000014]
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 3359.699999999997, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 3359.699999999997]
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 3359.699999999997, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 3359.699999999997]
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4068.140000000014]
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:10:11,783 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 3359.699999999997, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 3359.699999999997, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4068.140000000014, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2158.25]
2024-03-05 21:10:11,783 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 21:10:11,791 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:10:11,792 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 21:10:11,792 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 21:11:53,776 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:11:53,871 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:11:53,943 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:11:54,006 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,037 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,056 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,074 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,092 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,104 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,116 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,129 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,142 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,154 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,167 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,180 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,192 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,205 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,223 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,237 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,250 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,262 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,274 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,286 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,300 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,313 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,326 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,351 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,363 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,375 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,387 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,411 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,424 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,436 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,448 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,460 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,472 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,489 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,503 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,517 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,536 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,554 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,573 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,594 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,617 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,639 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,659 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,673 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,687 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,705 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,718 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,732 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,745 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,758 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,785 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,798 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,810 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,823 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,837 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,852 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,867 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,882 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,913 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,926 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,940 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,953 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,965 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,977 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:54,990 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,011 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,031 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,071 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,092 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,112 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,130 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,144 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,157 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,170 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,182 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,195 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,208 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,221 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,233 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,246 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,259 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,272 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,284 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,297 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,310 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,323 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,336 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,349 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,362 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,375 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,388 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,401 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,414 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,428 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,443 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,458 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,475 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,491 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,507 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,530 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,553 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,572 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,592 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,611 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,633 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,654 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,673 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,687 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,699 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,726 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,739 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,752 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,765 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,778 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,791 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,805 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,818 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,831 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,888 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,904 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,922 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,956 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,971 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,984 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:55,999 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,019 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,033 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,047 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,060 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,073 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,086 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,111 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,136 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,149 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,161 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,185 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,198 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,210 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,247 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,259 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,272 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,284 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,296 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,309 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,325 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,342 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,371 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,384 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,408 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,427 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,447 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,467 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,482 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,501 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,516 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,530 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,545 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,560 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,574 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,590 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,608 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,627 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,642 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,656 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,681 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,707 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,721 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,733 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,745 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,757 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,769 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,781 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,793 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,818 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,831 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,844 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,857 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,870 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,882 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,911 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,926 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,939 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,963 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,976 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:56,988 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,001 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,014 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,029 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,042 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,054 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,067 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,079 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,091 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,103 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,115 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,128 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,143 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,157 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,170 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,185 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,205 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,225 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,245 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,265 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,283 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,296 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,308 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,321 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,334 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,346 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,360 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,375 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,393 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,407 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,421 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,435 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,448 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,461 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,475 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,488 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,500 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,512 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,524 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,538 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,552 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,566 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,593 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,605 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,618 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,630 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,660 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,664 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,668 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,671 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,673 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,684 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,686 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,692 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,712 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,742 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,756 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,785 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,798 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,811 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,824 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,848 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,859 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,871 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,883 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,895 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,907 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,919 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,930 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,954 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,965 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:57,989 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,015 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,029 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,041 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,055 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,071 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,085 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,107 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,110 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,114 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,116 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,119 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:11:58,131 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:11:58,132 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 21:11:58,132 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:11:58,132 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:11:58,132 - root - generate_sorted_atomic_config - INFO - cnt num 3 queries:statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:11:58,132 - root - generate_sorted_atomic_config - INFO - cnt num 4 queries:statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:11:58,132 - root - generate_sorted_atomic_config - INFO - cnt num 5 queries:statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0, table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:11:58,132 - root - generate_sorted_atomic_config - INFO - cnt num 6 queries:statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:11:58,132 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0), (table: time_dim columns: t_time_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0), (table: date_dim columns: d_date index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 0,)],len==18
2024-03-05 21:11:59,745 - root - MCTS - INFO - mcts 200 >= 186.1328125
2024-03-05 21:11:59,745 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,745 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :69016.89
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :135782.09
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :68088.02
2024-03-05 21:11:59,747 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:11:59,748 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:11:59,748 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 6076.830000000016
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:11:59,748 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:11:59,748 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:11:59,748 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 5905.590000000026
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,748 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:11:59,748 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:11:59,749 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-05 21:11:59,749 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date index_type:  storage: 1.8125 has benefit of 2040.75
2024-03-05 21:11:59,749 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0]
2024-03-05 21:11:59,749 - root - filter_low_benefit_index - INFO - filter low benefit index for table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-05 21:11:59,749 - root - filter_low_benefit_index - INFO - table: time_dim columns: t_time_sk index_type:  storage: 2.1484375 has benefit of 1226.5
2024-03-05 21:11:59,750 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,750 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-05 21:11:59,750 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,750 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-05 21:11:59,750 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:11:59,750 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:11:59,750 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 918.9199999999837
2024-03-05 21:11:59,750 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,750 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14413.335
2024-03-05 21:11:59,751 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,751 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14413.335
2024-03-05 21:11:59,751 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:11:59,751 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:11:59,751 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875 has benefit of 811.5300000000279
2024-03-05 21:11:59,751 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,751 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14612.985
2024-03-05 21:11:59,751 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,751 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14612.985
2024-03-05 21:11:59,751 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,751 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:11:59,752 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:11:59,752 - root - filter_low_benefit_index - INFO - filter low benefit index for table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125
2024-03-05 21:11:59,752 - root - filter_low_benefit_index - INFO - table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125 has benefit of 412.2300000000396
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,752 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139809.26
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70011.28
2024-03-05 21:11:59,753 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:11:59,753 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:11:59,753 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 137.23000000003958
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,753 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-05 21:11:59,754 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:11:59,754 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 21:11:59,754 - root - filter_low_benefit_index - INFO - table: customer columns: c_customer_sk index_type:  storage: 2.484375 has benefit of 1.5
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-05 21:11:59,754 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-05 21:11:59,754 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-05 21:11:59,754 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:11:59,754 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 1.5
2024-03-05 21:11:59,765 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,913 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,914 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,915 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13387>btree_catalog_sales_cs_bill_customer_sk_cs_item_sk"', '"<13388>btree_store_sales_ss_customer_sk_ss_item_sk"', '"<13391>btree_date_dim_d_date_sk"', 'store_pkey', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,916 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_time_dim_t_time_sk"']
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,918 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_year"', '"<13389>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_date"', '"<13389>btree_item_i_item_sk"']
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:11:59,920 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998]
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2158.25]
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 1226.5]
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998]
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index : table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998]
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2158.25]
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-05 21:11:59,921 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk, cs_item_sk index_type:  storage: 57.46875, table: store_sales columns: ss_customer_sk, ss_item_sk index_type:  storage: 114.8203125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3361.274999999998]
2024-03-05 21:11:59,922 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 21:11:59,929 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:11:59,929 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 21:11:59,930 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 21:15:43,452 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:43,487 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:43,492 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-05 21:15:43,493 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-05 21:15:43,494 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-05 21:15:43,494 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-05 21:15:43,500 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:43,569 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:43,575 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:43,579 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:43,582 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:43,587 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:43,599 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:43,599 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 21:15:43,599 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:15:43,599 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0)],len==4
2024-03-05 21:15:44,165 - root - MCTS - INFO - mcts 100 >= 3.0546875
2024-03-05 21:15:44,165 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:15:44,165 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-05 21:15:44,168 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:15:44,168 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:15:44,168 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 2030.6699999999983
2024-03-05 21:15:44,169 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:15:44,169 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-05 21:15:44,169 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:15:44,169 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:15:44,169 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 917.4199999999983
2024-03-05 21:15:44,175 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:44,331 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-05 21:15:44,332 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:15:44,332 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:15:44,332 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:15:44,332 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:15:44,332 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-05 21:15:44,332 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:15:44,332 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:15:44,332 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:15:44,332 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:15:44,332 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:15:44,332 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-05 21:15:44,333 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:15:44,333 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-05 21:15:44,333 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 21:15:44,339 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:44,339 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 21:15:44,340 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 21:15:54,862 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:54,899 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:54,907 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-05 21:15:54,908 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-05 21:15:54,908 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-05 21:15:54,909 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-05 21:15:54,925 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:55,002 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:55,007 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:55,010 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:55,013 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:55,015 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:15:55,031 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:55,031 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 21:15:55,031 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:15:55,031 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0)],len==4
2024-03-05 21:15:55,615 - root - MCTS - INFO - mcts 100 >= 3.0546875
2024-03-05 21:15:55,616 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:15:55,616 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-05 21:15:55,617 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:15:55,618 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:15:55,618 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 2030.6699999999983
2024-03-05 21:15:55,618 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:15:55,618 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-05 21:15:55,618 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:15:55,619 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:15:55,619 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 917.4199999999983
2024-03-05 21:15:55,625 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:55,775 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-05 21:15:55,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:15:55,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:15:55,776 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:15:55,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:15:55,776 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-05 21:15:55,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:15:55,776 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:15:55,777 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:15:55,777 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:15:55,777 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:15:55,777 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-05 21:15:55,777 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:15:55,777 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-05 21:15:55,777 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 21:15:55,783 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:15:55,786 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 21:15:55,787 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-05 21:20:57,085 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:20:57,110 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:20:57,116 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-05 21:20:57,116 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-05 21:20:57,117 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-05 21:20:57,117 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-05 21:20:57,123 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:20:57,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:20:57,178 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:20:57,181 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:20:57,183 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:20:57,185 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-05 21:20:57,194 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:20:57,194 - root - index_advisor_workload - INFO - Mcts started
2024-03-05 21:20:57,194 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-05 21:20:57,194 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0)],len==4
2024-03-05 21:20:57,338 - root - MCTS - INFO - mcts 100 >= 3.0546875
2024-03-05 21:20:57,338 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:20:57,338 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-05 21:20:57,342 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:20:57,342 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:20:57,342 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 2030.6699999999983
2024-03-05 21:20:57,342 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-05 21:20:57,342 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-05 21:20:57,342 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-05 21:20:57,342 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:20:57,342 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 917.4199999999983
2024-03-05 21:20:57,351 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:20:57,389 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-05 21:20:57,390 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:20:57,390 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:20:57,391 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:20:57,391 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:20:57,391 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-05 21:20:57,391 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:20:57,391 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-05 21:20:57,391 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-05 21:20:57,391 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:20:57,391 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-05 21:20:57,391 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-05 21:20:57,391 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-05 21:20:57,391 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-05 21:20:57,391 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-05 21:20:57,400 - root - __init_conn_handle - INFO - connection successful
2024-03-05 21:20:57,400 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-05 21:20:57,400 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 12:46:46,893 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:46:46,926 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:46:46,932 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 12:46:46,933 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 12:46:46,933 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 12:46:46,933 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 12:46:46,939 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:46:47,001 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:46:47,006 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:46:47,009 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:46:47,011 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:46:47,013 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:46:47,020 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:46:47,021 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 12:46:47,021 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-06 12:46:47,021 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0)],len==4
2024-03-06 12:46:47,560 - root - MCTS - INFO - mcts 100 >= 3.0546875
2024-03-06 12:46:47,560 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 12:46:47,561 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-06 12:46:47,564 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 12:46:47,564 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 12:46:47,564 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 2030.6699999999983
2024-03-06 12:46:47,565 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 12:46:47,565 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-06 12:46:47,565 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 12:46:47,565 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 12:46:47,565 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 917.4199999999983
2024-03-06 12:46:47,570 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:46:47,704 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 12:46:47,705 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 12:46:47,705 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 12:46:47,705 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 12:46:47,705 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 12:46:47,705 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 12:46:47,705 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 12:46:47,705 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 12:46:47,705 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 12:46:47,705 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 12:46:47,705 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 12:46:47,705 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 12:46:47,706 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 12:46:47,706 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 12:46:47,706 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 12:46:47,711 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:46:47,711 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 12:46:47,712 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 12:56:13,013 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:56:13,055 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:56:13,059 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 12:56:13,060 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 12:56:13,061 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 12:56:13,061 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 12:56:13,066 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:56:13,163 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:56:30,358 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:56:30,391 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:56:30,397 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 12:56:30,398 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 12:56:30,398 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 12:56:30,398 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 12:56:30,404 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:56:30,473 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:56:30,478 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:56:30,481 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:56:30,484 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:56:30,487 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 12:56:30,494 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:56:30,494 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 12:56:30,494 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-06 12:56:30,494 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0)],len==4
2024-03-06 12:56:31,129 - root - MCTS - INFO - mcts 100 >= 3.0546875
2024-03-06 12:56:31,129 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 12:56:31,130 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-06 12:56:31,133 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 12:56:31,133 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 12:56:31,133 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 2030.6699999999983
2024-03-06 12:56:31,133 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 12:56:31,133 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-06 12:56:31,134 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 12:56:31,134 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 12:56:31,134 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 917.4199999999983
2024-03-06 12:56:31,139 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:56:31,311 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 12:56:31,312 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 12:56:31,312 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 12:56:31,312 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 12:56:31,312 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 12:56:31,312 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 12:56:31,312 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 12:56:31,312 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 12:56:31,312 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 12:56:31,312 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 12:56:31,312 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 12:56:31,313 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 12:56:31,313 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 12:56:31,313 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 12:56:31,313 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 12:56:31,318 - root - __init_conn_handle - INFO - connection successful
2024-03-06 12:56:31,318 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 12:56:31,319 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 13:02:58,102 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:02:58,139 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:02:58,145 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 13:02:58,146 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:02:58,147 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:02:58,148 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 13:02:58,154 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:02:58,234 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 13:02:58,238 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 13:02:58,240 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 13:02:58,243 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 13:02:58,252 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:02:58,252 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 13:02:58,252 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-06 13:02:58,252 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0)],len==4
2024-03-06 13:02:58,850 - root - MCTS - INFO - mcts 100 >= 3.0546875
2024-03-06 13:02:58,850 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 13:02:58,850 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-06 13:02:58,853 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 13:02:58,853 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 13:02:58,853 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 2030.6699999999983
2024-03-06 13:02:58,853 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 13:02:58,853 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-06 13:02:58,853 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 13:02:58,854 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 13:02:58,854 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 917.4199999999983
2024-03-06 13:02:58,858 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:02:58,993 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 13:02:58,994 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 13:02:58,994 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 13:02:58,994 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 13:02:58,994 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 13:02:58,994 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 13:02:58,994 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 13:02:58,994 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 13:02:58,994 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 13:02:58,994 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 13:02:58,994 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 13:02:58,994 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 13:02:58,995 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 13:02:58,995 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 13:02:58,995 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 13:02:58,999 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:02:59,000 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 13:02:59,000 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 13:03:57,206 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:03:57,260 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:03:57,265 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 13:03:57,266 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:03:57,266 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:03:57,266 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 13:03:57,272 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:03:57,355 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 13:03:57,360 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 13:03:57,362 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 13:03:57,365 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 13:03:57,372 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:03:57,372 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 13:03:57,372 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-06 13:03:57,373 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0)],len==4
2024-03-06 13:03:57,976 - root - MCTS - INFO - mcts 100 >= 3.0546875
2024-03-06 13:03:57,976 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 13:03:57,976 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-06 13:03:57,978 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 13:03:57,978 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 13:03:57,978 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 2030.6699999999983
2024-03-06 13:03:57,978 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 13:03:57,978 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-06 13:03:57,979 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 13:03:57,979 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 13:03:57,979 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 917.4199999999983
2024-03-06 13:03:57,983 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:03:58,121 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 13:03:58,122 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 13:03:58,122 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 13:03:58,122 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 13:03:58,123 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 13:03:58,123 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 13:03:58,123 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 13:03:58,123 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 13:03:58,123 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 13:03:58,123 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 13:03:58,123 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 13:03:58,123 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 13:03:58,124 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 13:03:58,124 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 13:03:58,124 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 13:03:58,130 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:03:58,130 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 13:03:58,130 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 13:05:06,134 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:05:06,455 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:05:06,463 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 13:05:06,467 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:05:06,469 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:05:06,469 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 13:05:06,476 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:05:55,796 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:05:56,062 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:05:56,067 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 13:05:56,069 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:05:56,070 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:05:56,071 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 13:05:56,077 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:12:10,550 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:12:10,805 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:12:10,810 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 13:12:10,813 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:12:10,816 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:12:10,816 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 13:12:10,828 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:15:19,706 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:15:19,978 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:15:19,984 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 13:15:19,987 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:15:19,990 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:15:19,990 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 13:15:19,998 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:18:03,815 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:18:04,090 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:18:04,095 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 13:18:04,097 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:18:04,099 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:18:04,100 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 13:18:04,115 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:30:36,225 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:30:36,493 - root - __init_conn_handle - INFO - connection successful
2024-03-06 13:30:36,499 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 13:30:36,500 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:30:36,502 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 13:30:36,502 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 13:30:36,508 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:00:45,783 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:00:45,808 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:00:45,813 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 16:00:45,814 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 16:00:45,814 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 16:00:45,815 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 16:00:45,820 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:00:45,869 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:00:45,873 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:00:45,875 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:00:45,878 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:00:45,886 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:00:45,887 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:00:45,887 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:00:45,887 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0)],len==4
2024-03-06 16:00:46,013 - root - MCTS - INFO - mcts 100 >= 3.0546875
2024-03-06 16:00:46,013 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:00:46,013 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-06 16:00:46,015 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 16:00:46,015 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:00:46,015 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 2030.6699999999983
2024-03-06 16:00:46,015 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:00:46,015 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-06 16:00:46,015 - root - filter_low_benefit_index - INFO - positive_queries for [statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 16:00:46,015 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:00:46,016 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 917.4199999999983
2024-03-06 16:00:46,021 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:00:46,053 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 16:00:46,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:00:46,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:00:46,054 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:00:46,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:00:46,054 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13382>btree_date_dim_d_year"', '"<13383>btree_customer_address_ca_address_sk"']
2024-03-06 16:00:46,055 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:00:46,055 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:00:46,055 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:00:46,055 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:00:46,055 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:00:46,055 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 16:00:46,055 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:00:46,055 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: -- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '1998Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965]
2024-03-06 16:00:46,055 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:00:46,063 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:00:46,063 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:00:46,064 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:01:27,479 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:01:27,521 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:01:27,537 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;

-- select c_last_name
-- ,c_first_name
-- ,ca_city
-- ,bought_city
-- ,ss_ticket_number
-- ,amt,profit
-- from
-- (select ss_ticket_number
-- ,ss_customer_sk
-- ,ca_city bought_city
-- ,sum(ss_coupon_amt) amt
-- ,sum(ss_net_profit) profit
-- from store_sales,date_dim,store,household_demographics,customer_address
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_store_sk = store.s_store_sk
-- and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
-- and store_sales.ss_addr_sk = customer_address.ca_address_sk
-- and (household_demographics.hd_dep_count = 9 or
-- household_demographics.hd_vehicle_count= 3)
-- and date_dim.d_dow in (6,0)
-- and date_dim.d_year in (2000,2000+1,2000+2)
-- and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
-- group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
-- where ss_customer_sk = c_customer_sk
-- and customer.c_current_addr_sk = current_addr.ca_address_sk
-- and current_addr.ca_city <> bought_city
-- order by c_last_name
-- ,c_first_name
-- ,ca_city
-- ,bought_city
-- ,ss_ticket_number
-- limit 100;
--
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 16:01:27,537 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 16:01:27,538 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 16:01:27,538 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 16:01:27,544 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:01:27,622 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,643 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,655 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,667 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,679 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,692 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,705 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,717 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,730 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,742 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,754 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,766 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,779 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,791 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,816 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,829 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,842 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,854 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,878 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,890 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,902 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,914 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,927 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,939 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,962 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,974 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:27,987 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,000 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,024 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,047 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,060 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,074 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,086 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,111 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,135 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,146 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,158 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,171 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,183 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,195 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,207 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,219 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,231 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,244 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,268 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,279 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,291 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,303 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,315 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,326 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,351 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,362 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,374 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,387 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,411 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,423 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,435 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,447 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,459 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,470 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,482 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,494 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,506 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,518 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,530 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,541 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,553 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,565 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,577 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,589 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,601 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,613 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,625 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,637 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,649 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,661 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,673 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,684 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,696 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,708 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,720 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,732 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,744 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,756 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,769 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,781 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,793 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,805 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,829 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,841 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,853 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,865 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,877 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,889 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,901 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,914 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,926 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,938 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,963 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,974 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,986 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:28,998 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,010 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,022 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,034 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,046 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,060 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,073 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,085 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,110 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:01:29,140 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:01:29,140 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:01:29,140 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:01:29,140 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:01:29,548 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 16:01:29,548 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:01:29,567 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:01:29,581 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:01:29,594 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:01:29,606 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:01:29,617 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:01:29,617 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:01:29,618 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:01:29,618 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:01:29,618 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:01:29,618 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:01:29,619 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 16:01:29,619 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:01:29,619 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:01:29,619 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 16:01:29,619 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:01:29,619 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:01:29,619 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:01:29,619 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:01:29,619 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:01:29,619 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:01:29,619 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:01:29,619 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:01:29,619 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:01:29,619 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:01:29,625 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:01:29,667 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:01:29,667 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:01:29,667 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:01:29,667 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,667 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:01:29,668 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:01:29,668 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:01:29,668 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:01:29,669 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:01:29,669 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:01:29,669 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:01:29,669 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:01:29,669 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:01:29,669 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:01:29,669 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:01:29,675 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:01:29,675 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:01:29,675 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:02:20,019 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:02:20,079 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:02:20,142 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:02:20,195 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,230 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,255 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,274 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,293 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,306 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,318 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,331 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,344 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,368 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,380 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,393 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,405 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,417 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,430 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,449 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,462 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,474 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,486 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,498 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,510 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,522 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,534 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,545 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,557 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,569 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,580 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,592 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,604 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,616 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,628 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,639 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,652 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,664 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,676 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,688 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,700 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,712 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,724 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,736 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,748 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,761 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,773 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,785 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,797 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,809 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,821 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,834 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,846 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,858 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,870 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,882 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,894 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,906 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,919 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,931 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,943 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,955 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,968 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,980 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:20,992 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,004 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,017 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,029 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,041 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,065 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,077 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,089 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,102 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,114 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,126 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,138 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,150 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,162 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,174 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,187 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,199 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,211 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,223 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,247 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,259 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,271 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,283 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,295 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,318 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,330 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,342 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,353 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,365 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,377 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,389 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,401 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,413 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,425 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,438 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,450 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,462 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,474 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,486 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,498 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,510 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,522 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,534 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,545 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,557 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,569 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,593 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,605 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,617 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,628 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,640 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,652 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,664 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,677 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,689 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,716 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,733 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,746 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,758 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,783 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,796 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,809 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,821 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,833 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,845 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,857 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,870 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,883 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,896 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,908 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,920 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,933 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,946 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,959 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,971 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,983 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:21,995 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,008 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,020 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,044 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,057 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,070 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,082 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,095 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,108 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,121 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,134 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,147 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,159 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,171 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,183 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,195 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,207 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,220 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,232 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,244 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,268 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,280 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,292 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,304 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,317 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,329 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,342 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,354 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,367 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,380 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,392 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,406 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,418 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,429 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,441 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,453 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,465 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,488 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,500 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,512 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,524 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,536 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,548 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,560 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,571 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,583 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,595 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,607 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,619 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,631 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,642 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,654 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,666 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,678 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,701 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,725 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,737 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,748 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,760 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,772 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,783 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,795 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,808 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,820 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,831 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,843 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,855 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,867 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,879 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,890 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,902 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,914 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,926 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,937 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,949 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,961 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,973 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,985 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:22,996 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,008 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,020 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,043 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,055 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,067 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,079 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,091 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,103 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,115 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,127 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,139 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,151 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,162 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,174 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,186 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,213 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,217 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,220 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,231 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,234 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,236 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,255 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,293 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,306 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,319 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,345 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,359 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,372 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,385 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,400 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,415 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,428 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,441 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,454 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,467 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,480 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,493 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,505 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,518 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,531 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,543 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,555 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,568 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,594 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,613 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,616 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,618 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,620 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:02:23,627 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:02:23,627 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:02:23,627 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:02:23,628 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:02:23,628 - root - generate_sorted_atomic_config - INFO - cnt num 3 queries:statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:02:23,628 - root - generate_sorted_atomic_config - INFO - cnt num 4 queries:statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:02:23,628 - root - generate_sorted_atomic_config - INFO - cnt num 5 queries:statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0, table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:02:23,628 - root - generate_sorted_atomic_config - INFO - cnt num 6 queries:statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:02:23,628 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0), (table: time_dim columns: t_time_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0), (table: date_dim columns: d_date index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==18
2024-03-06 16:02:24,840 - root - MCTS - INFO - mcts 100 >= 121.5234375
2024-03-06 16:02:24,840 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:24,982 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:25,084 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:25,164 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:25,224 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:25,276 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:25,325 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:25,371 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:25,415 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:25,457 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:02:25,498 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :69016.89
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139809.26
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,499 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70011.28
2024-03-06 16:02:25,500 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:02:25,500 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:02:25,500 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 137.23000000003958
2024-03-06 16:02:25,501 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0]
2024-03-06 16:02:25,501 - root - filter_low_benefit_index - INFO - filter low benefit index for table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-06 16:02:25,501 - root - filter_low_benefit_index - INFO - table: time_dim columns: t_time_sk index_type:  storage: 2.1484375 has benefit of 1226.5
2024-03-06 16:02:25,501 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,501 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:02:25,501 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :135782.09
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-06 16:02:25,502 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 16:02:25,502 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:02:25,502 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 6076.830000000016
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-06 16:02:25,502 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,503 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-06 16:02:25,503 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:02:25,503 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:02:25,503 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 5905.590000000026
2024-03-06 16:02:25,503 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,503 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-06 16:02:25,503 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,503 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-06 16:02:25,503 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 16:02:25,503 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:02:25,504 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 918.9199999999837
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :68088.02
2024-03-06 16:02:25,504 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:02:25,504 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-06 16:02:25,504 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date index_type:  storage: 1.8125 has benefit of 2040.75
2024-03-06 16:02:25,504 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,505 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:02:25,505 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,505 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:02:25,505 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,505 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:02:25,505 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,505 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-06 16:02:25,505 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 16:02:25,505 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-06 16:02:25,505 - root - filter_low_benefit_index - INFO - table: customer columns: c_customer_sk index_type:  storage: 2.484375 has benefit of 1.5
2024-03-06 16:02:25,505 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,505 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14686.53
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14686.53
2024-03-06 16:02:25,506 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:02:25,506 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:02:25,506 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 265.14000000001397
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:02:25,506 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-06 16:02:25,506 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:02:25,507 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:02:25,507 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 1.5
2024-03-06 16:02:25,512 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:02:25,595 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,596 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,597 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,598 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,599 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13385>btree_date_dim_d_quarter_name"', '"<13389>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13390>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13384>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13384>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13384>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,600 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13384>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13384>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13384>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13384>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13384>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13384>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-06 16:02:25,601 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_year"', '"<13382>btree_item_i_item_sk"', 'promotion_pkey', '"<13388>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_year"', '"<13382>btree_item_i_item_sk"', 'promotion_pkey', '"<13388>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_year"', '"<13382>btree_item_i_item_sk"', 'promotion_pkey', '"<13388>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,602 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_year"', '"<13382>btree_item_i_item_sk"', 'promotion_pkey', '"<13388>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_year"', '"<13382>btree_item_i_item_sk"', 'promotion_pkey', '"<13388>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_year"', '"<13382>btree_item_i_item_sk"', 'promotion_pkey', '"<13388>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_year"', '"<13382>btree_item_i_item_sk"', 'promotion_pkey', '"<13388>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_year"', '"<13382>btree_item_i_item_sk"', 'promotion_pkey', '"<13388>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,603 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_year"', '"<13382>btree_item_i_item_sk"', 'promotion_pkey', '"<13388>btree_customer_c_customer_sk"', '"<13386>btree_customer_address_ca_address_sk"']
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,604 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:02:25,605 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,605 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date index_type:  storage: 1.8125] benefit: 2158.25]
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 1226.5]
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998]
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date index_type:  storage: 1.8125] benefit: 2158.25]
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998]
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:02:25,605 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998]
2024-03-06 16:02:25,606 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:02:25,612 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:02:25,612 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:02:25,612 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:04:03,015 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:03,060 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:03,073 - root - __execute - INFO - error sql :prepare prepare_1 as --
-- select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;select i_item_id
-- ,i_item_desc
-- ,s_state
-- ,count(ss_quantity) as store_sales_quantitycount
-- ,avg(ss_quantity) as store_sales_quantityave
-- ,stddev_samp(ss_quantity) as store_sales_quantitystdev
-- ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
-- ,count(sr_return_quantity) as store_returns_quantitycount
-- ,avg(sr_return_quantity) as store_returns_quantityave
-- ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
-- ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
-- ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
-- ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
-- ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
-- from store_sales
-- ,store_returns
-- ,catalog_sales
-- ,date_dim d1
-- ,date_dim d2
-- ,date_dim d3
-- ,store
-- ,item
-- where d1.d_quarter_name = '2002Q1'
-- and d1.d_date_sk = ss_sold_date_sk
-- and i_item_sk = ss_item_sk
-- and s_store_sk = ss_store_sk
-- and ss_customer_sk = sr_customer_sk
-- and ss_item_sk = sr_item_sk
-- and ss_ticket_number = sr_ticket_number
-- and sr_returned_date_sk = d2.d_date_sk
-- and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- and sr_customer_sk = cs_bill_customer_sk
-- and sr_item_sk = cs_item_sk
-- and cs_sold_date_sk = d3.d_date_sk
-- and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
-- group by i_item_id
-- ,i_item_desc
-- ,s_state
-- order by i_item_id
-- ,i_item_desc
-- ,s_state
-- limit 100;
--
-- select c_last_name
-- ,c_first_name
-- ,ca_city
-- ,bought_city
-- ,ss_ticket_number
-- ,amt,profit
-- from
-- (select ss_ticket_number
-- ,ss_customer_sk
-- ,ca_city bought_city
-- ,sum(ss_coupon_amt) amt
-- ,sum(ss_net_profit) profit
-- from store_sales,date_dim,store,household_demographics,customer_address
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_store_sk = store.s_store_sk
-- and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
-- and store_sales.ss_addr_sk = customer_address.ca_address_sk
-- and (household_demographics.hd_dep_count = 9 or
-- household_demographics.hd_vehicle_count= 3)
-- and date_dim.d_dow in (6,0)
-- and date_dim.d_year in (2000,2000+1,2000+2)
-- and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
-- group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
-- where ss_customer_sk = c_customer_sk
-- and customer.c_current_addr_sk = current_addr.ca_address_sk
-- and current_addr.ca_city <> bought_city
-- order by c_last_name
-- ,c_first_name
-- ,ca_city
-- ,bought_city
-- ,ss_ticket_number
-- limit 100;
--
-- select count(*)
-- from store_sales
-- ,household_demographics
-- ,time_dim, store
-- where ss_sold_time_sk = time_dim.t_time_sk
-- and ss_hdemo_sk = household_demographics.hd_demo_sk
-- and ss_store_sk = s_store_sk
-- and time_dim.t_hour = 20
-- and time_dim.t_minute >= 30
-- and household_demographics.hd_dep_count = 8
-- and store.s_store_name = 'ese'
-- order by count(*)
-- limit 100;
--
-- select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
-- from
-- (select sum(ss_ext_sales_price) promotions
-- from store_sales
-- ,store
-- ,promotion
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_promo_sk = p_promo_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) promotional_sales,
-- (select sum(ss_ext_sales_price) total
-- from store_sales
-- ,store
-- ,date_dim
-- ,customer
-- ,customer_address
-- ,item
-- where ss_sold_date_sk = d_date_sk
-- and ss_store_sk = s_store_sk
-- and ss_customer_sk= c_customer_sk
-- and ca_address_sk = c_current_addr_sk
-- and ss_item_sk = i_item_sk
-- and ca_gmt_offset = -6
-- and i_category = 'Home'
-- and s_gmt_offset = -6
-- and d_year = 1999
-- and d_moy = 11) all_sales
-- order by promotions, total
-- limit 100;
--
-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(ss_ext_sales_price) as itemrevenue
-- ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from
-- 	store_sales
-- 	,item
-- 	,date_dim
-- where
-- 	ss_item_sk = i_item_sk
-- 	and i_category in ('Books', 'Jewelry', 'Home')
-- 	and ss_sold_date_sk = d_date_sk
-- 	and d_date between cast('1998-05-06' as date)
-- 				and (cast('1998-05-06' as date) + interval '30' day)
-- group by
-- 	i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by
-- 	i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio;
2024-03-06 16:04:03,074 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 16:04:03,074 - root - __execute - WARNING - Found prepared statement "prepare_1" does not exist
 while executing SQL statement.
2024-03-06 16:04:03,074 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 16:04:03,080 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:03,136 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,157 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,169 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,182 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,193 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,205 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,217 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,229 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,254 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,266 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,279 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,291 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,303 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,315 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,327 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,351 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,364 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,377 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,389 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,401 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,414 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,426 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,439 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,451 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,464 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,488 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,500 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,513 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,525 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,538 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,550 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,563 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,575 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,588 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,600 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,613 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,625 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,638 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,650 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,663 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,675 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,688 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,701 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,714 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,726 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,738 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,750 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,763 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,775 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,788 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,800 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,812 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,824 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,847 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,859 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,871 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,882 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,894 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,906 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,918 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,930 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,955 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,978 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:03,990 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,002 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,014 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,025 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,038 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,050 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,063 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,074 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,086 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,110 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,122 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,134 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,146 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,158 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,170 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,182 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,194 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,206 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,218 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,230 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,254 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,266 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,278 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,290 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,302 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,314 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,325 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,337 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,349 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,361 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,373 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,385 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,396 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,409 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,421 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,433 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,445 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,457 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,469 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,482 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,495 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,508 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,521 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,534 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,547 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,559 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,571 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,584 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,596 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,608 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,620 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:04,637 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:04,637 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:04:04,637 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:04:04,637 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:04:05,022 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 16:04:05,022 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:04:05,041 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:04:05,055 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:04:05,068 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:04:05,080 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:04:05,091 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:05,091 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:04:05,092 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:04:05,092 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:04:05,092 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:04:05,092 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:05,092 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:04:05,092 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:04:05,092 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:04:05,093 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:04:05,093 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:05,093 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:04:05,093 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:04:05,093 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:04:05,093 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:04:05,093 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:05,093 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 16:04:05,093 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:04:05,093 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:04:05,094 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 16:04:05,099 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:05,141 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,142 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,143 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:05,143 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:04:05,143 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 16:04:05,143 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:04:05,143 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 16:04:05,143 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:04:05,143 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 16:04:05,143 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:04:05,143 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 16:04:05,143 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:04:05,149 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:05,150 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:04:05,150 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:04:44,504 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:44,568 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:44,625 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:44,678 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,699 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,711 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,723 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,735 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,747 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,759 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,772 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,784 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,800 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,813 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,825 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,838 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,850 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,863 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,876 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,889 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,901 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,913 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,926 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,938 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,963 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,975 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,987 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:44,999 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,012 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,025 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,038 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,063 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,075 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,087 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,099 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,111 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,135 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,147 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,159 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,171 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,183 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,195 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,207 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,219 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,231 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,243 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,255 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,267 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,279 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,291 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,303 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,315 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,327 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,350 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,362 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,375 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,387 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,411 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,435 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,460 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,472 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,488 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,502 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,514 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,526 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,539 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,551 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,563 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,575 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,587 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,599 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,611 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,623 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,635 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,647 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,659 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,671 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,683 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,695 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,707 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,719 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,731 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,744 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,756 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,768 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,780 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,792 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,816 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,828 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,840 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,853 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,865 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,877 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,889 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,901 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,915 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,928 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,941 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,954 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,967 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,979 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:45,992 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,005 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,018 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,031 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,043 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,057 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,070 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,083 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,095 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,109 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,122 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,135 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,147 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,159 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,171 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,184 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,196 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,210 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,224 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,252 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,282 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,296 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,310 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,323 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,336 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,349 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,362 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,374 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,387 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,413 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,426 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,438 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,451 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,464 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,477 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,489 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,501 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,518 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,533 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,547 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,559 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,571 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,584 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,596 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,610 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,623 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,636 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,648 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,660 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,672 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,684 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,696 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,709 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,722 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,734 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,746 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,758 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,783 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,795 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,807 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,819 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,831 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,843 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,855 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,867 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,879 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,892 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,904 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,916 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,929 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,954 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,978 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:46,990 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,002 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,014 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,027 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,039 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,052 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,064 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,076 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,088 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,100 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,113 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,127 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,140 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,152 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,166 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,178 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,191 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,203 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,215 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,228 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,240 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,252 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,264 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,276 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,288 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,300 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,312 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,324 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,336 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,348 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,360 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,372 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,384 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,395 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,407 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,419 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,431 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,443 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,455 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,466 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,478 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,490 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,502 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,514 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,525 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,537 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,549 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,561 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,572 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,584 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,596 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,607 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,619 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,631 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,643 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,655 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,666 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,678 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,702 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,725 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,737 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,748 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,774 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,778 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,780 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,782 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,791 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,793 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,794 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,813 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,839 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,851 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,864 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,877 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,890 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,903 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,915 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,928 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,955 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,983 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:47,996 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,011 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,024 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,038 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,052 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,067 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,088 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,103 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,116 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,129 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,142 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,156 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,169 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,189 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,191 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,193 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,195 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:04:48,202 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:48,203 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:04:48,203 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:04:48,203 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:04:48,203 - root - generate_sorted_atomic_config - INFO - cnt num 3 queries:statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:04:48,203 - root - generate_sorted_atomic_config - INFO - cnt num 4 queries:statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:04:48,203 - root - generate_sorted_atomic_config - INFO - cnt num 5 queries:statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0, table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:04:48,203 - root - generate_sorted_atomic_config - INFO - cnt num 6 queries:statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:04:48,203 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: date_dim columns: d_year index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0), (table: time_dim columns: t_time_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0,), (table: customer columns: c_customer_sk index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0), (table: date_dim columns: d_date index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==18
2024-03-06 16:04:49,441 - root - MCTS - INFO - mcts 100 >= 121.5234375
2024-03-06 16:04:49,441 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:49,581 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:49,679 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:49,758 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:49,824 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:49,878 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:49,926 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:49,972 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:50,015 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:50,057 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :411.44326583092254
2024-03-06 16:04:50,097 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :11866.305
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :76880.81
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :70243.39
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70243.39，self.get_indexes_cost_of_query(query, tuple([index])) :69016.89
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-06 16:04:50,098 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - index ：table: time_dim columns: t_time_sk index_type:  storage: 2.1484375，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :68088.02
2024-03-06 16:04:50,100 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:04:50,100 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:04:50,100 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 5905.590000000026
2024-03-06 16:04:50,101 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 0]
2024-03-06 16:04:50,101 - root - filter_low_benefit_index - INFO - filter low benefit index for table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-06 16:04:50,101 - root - filter_low_benefit_index - INFO - table: time_dim columns: t_time_sk index_type:  storage: 2.1484375 has benefit of 1226.5
2024-03-06 16:04:50,101 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,101 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14686.53
2024-03-06 16:04:50,101 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,101 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14686.53
2024-03-06 16:04:50,101 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:04:50,102 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:04:50,102 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 265.14000000001397
2024-03-06 16:04:50,102 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 16:04:50,102 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:04:50,102 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 918.9199999999837
2024-03-06 16:04:50,102 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,102 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:04:50,102 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,102 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :75767.56
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :135782.09
2024-03-06 16:04:50,103 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 16:04:50,103 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:04:50,103 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 6076.830000000016
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,103 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-06 16:04:50,103 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:04:50,103 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-06 16:04:50,103 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date index_type:  storage: 1.8125 has benefit of 2040.75
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.724999999999
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139809.26
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70011.28
2024-03-06 16:04:50,104 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:04:50,104 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:04:50,104 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 137.23000000003958
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,104 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14818.349999999999
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139828.25
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：70128.77，self.get_indexes_cost_of_query(query, tuple([index])) :70128.77
2024-03-06 16:04:50,105 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:04:50,105 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:04:50,105 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 1.5
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:04:50,105 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：14819.099999999999，self.get_indexes_cost_of_query(query, tuple([index])) :14819.099999999999
2024-03-06 16:04:50,106 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,106 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：77798.23，self.get_indexes_cost_of_query(query, tuple([index])) :77798.23
2024-03-06 16:04:50,106 - root - is_positive_query - INFO - index ：table: customer columns: c_customer_sk index_type:  storage: 2.484375，query :statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0
2024-03-06 16:04:50,106 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：139828.25，self.get_indexes_cost_of_query(query, tuple([index])) :139826.75
2024-03-06 16:04:50,106 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 0]
2024-03-06 16:04:50,106 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-06 16:04:50,106 - root - filter_low_benefit_index - INFO - table: customer columns: c_customer_sk index_type:  storage: 2.484375 has benefit of 1.5
2024-03-06 16:04:50,112 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:50,197 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,197 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,197 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:04:50,197 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,198 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,199 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,200 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13389>btree_date_dim_d_date_sk"', 'store_pkey', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,201 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,202 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['customer_pkey', '"<13386>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,203 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_time_dim_t_time_sk"']
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13388>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13388>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13388>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13388>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,204 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13388>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13388>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13388>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13388>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13386>btree_date_dim_d_year"', '"<13388>btree_item_i_item_sk"', 'promotion_pkey', '"<13390>btree_customer_c_customer_sk"', '"<13385>btree_customer_address_ca_address_sk"']
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,205 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13387>btree_date_dim_d_date"', '"<13388>btree_item_i_item_sk"']
2024-03-06 16:04:50,206 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,207 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998]
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index : table: time_dim columns: t_time_sk index_type:  storage: 2.1484375
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select count(*)
from store_sales
 ,household_demographics
 ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk
 and ss_hdemo_sk = household_demographics.hd_demo_sk
 and ss_store_sk = s_store_sk
 and time_dim.t_hour = 20
 and time_dim.t_minute >= 30
 and household_demographics.hd_dep_count = 8
 and store.s_store_name = 'ese'
order by count(*)
limit 100; frequency: 1.0 index_list: [table: time_dim columns: t_time_sk index_type:  storage: 2.1484375] benefit: 1226.5]
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998]
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 ,amt,profit
 from
 (select ss_ticket_number
 ,ss_customer_sk
 ,ca_city bought_city
 ,sum(ss_coupon_amt) amt
 ,sum(ss_net_profit) profit
 from store_sales,date_dim,store,household_demographics,customer_address
 where store_sales.ss_sold_date_sk = date_dim.d_date_sk
 and store_sales.ss_store_sk = store.s_store_sk
 and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
 and store_sales.ss_addr_sk = customer_address.ca_address_sk
 and (household_demographics.hd_dep_count = 9 or
 household_demographics.hd_vehicle_count= 3)
 and date_dim.d_dow in (6,0)
 and date_dim.d_year in (2000,2000+1,2000+2)
 and store.s_city in ('Pleasant Hill','Oak Grove','Five Points','Fairview','Midway')
 group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
 where ss_customer_sk = c_customer_sk
 and customer.c_current_addr_sk = current_addr.ca_address_sk
 and current_addr.ca_city <> bought_city
 order by c_last_name
 ,c_first_name
 ,ca_city
 ,bought_city
 ,ss_ticket_number
 limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 2948.0899999999965, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date index_type:  storage: 1.8125
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2158.25]
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014, statement: select i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
 ,sum(ss_ext_sales_price) as itemrevenue
 ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
 (partition by i_class) as revenueratio
from
	store_sales
 	,item
 	,date_dim
where
	ss_item_sk = i_item_sk
 	and i_category in ('Books', 'Jewelry', 'Home')
 	and ss_sold_date_sk = d_date_sk
	and d_date between cast('1998-05-06' as date)
				and (cast('1998-05-06' as date) + interval '30' day)
group by
	i_item_id
 ,i_item_desc
 ,i_category
 ,i_class
 ,i_current_price
order by
	i_category
 ,i_class
 ,i_item_id
 ,i_item_desc
 ,revenueratio; frequency: 1.0 index_list: [table: date_dim columns: d_date index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2158.25]
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998, statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '2002Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.5 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 3086.489999999998]
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index : table: customer columns: c_customer_sk index_type:  storage: 2.484375
2024-03-06 16:04:50,207 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
 (select sum(ss_ext_sales_price) promotions
 from store_sales
 ,store
 ,promotion
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_promo_sk = p_promo_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) promotional_sales,
 (select sum(ss_ext_sales_price) total
 from store_sales
 ,store
 ,date_dim
 ,customer
 ,customer_address
 ,item
 where ss_sold_date_sk = d_date_sk
 and ss_store_sk = s_store_sk
 and ss_customer_sk= c_customer_sk
 and ca_address_sk = c_current_addr_sk
 and ss_item_sk = i_item_sk
 and ca_gmt_offset = -6
 and i_category = 'Home'
 and s_gmt_offset = -6
 and d_year = 1999
 and d_moy = 11) all_sales
order by promotions, total
limit 100; frequency: 1.0 index_list: [table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: customer columns: c_customer_sk index_type:  storage: 2.484375] benefit: 4068.140000000014]
2024-03-06 16:04:50,207 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:04:50,214 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:04:50,214 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:04:50,214 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:07:02,378 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:02,393 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:02,420 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:02,461 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:02,481 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:02,489 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:02,496 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:02,509 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:02,509 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:07:02,509 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:07:02,509 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_month_seq index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0)],len==4
2024-03-06 16:07:02,661 - root - MCTS - INFO - mcts 100 >= 2.2578125
2024-03-06 16:07:02,662 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:07:02,662 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-03-06 16:07:02,664 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:07:02,664 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-06 16:07:02,664 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-03-06 16:07:02,664 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:07:02,665 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-03-06 16:07:02,665 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:07:02,665 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:07:02,665 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 65.35000000000582
2024-03-06 16:07:02,670 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:02,720 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', '"<13383>btree_item_i_item_sk"']
2024-03-06 16:07:02,721 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:07:02,721 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-06 16:07:02,721 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:02,721 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', '"<13383>btree_item_i_item_sk"']
2024-03-06 16:07:02,721 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:02,722 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:07:02,722 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:07:02,722 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-06 16:07:02,722 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-03-06 16:07:02,722 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:07:02,722 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-03-06 16:07:02,722 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:07:02,728 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:02,728 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:07:02,728 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:07:26,945 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:26,980 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:27,011 - root - __execute - INFO - error sql :prepare prepare_2 as -- select count(*) from (
-- select distinct c_last_name, c_first_name, d_date
-- from store_sales, date_dim, customer
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from catalog_sales, date_dim, customer
-- where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
-- and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from web_sales, date_dim, customer
-- where web_sales.ws_sold_date_sk = date_dim.d_date_sk
-- and web_sales.ws_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- ) hot_cust
-- limit 100;

-- select i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- ,sum(cs_ext_sales_price) as itemrevenue
-- ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from	catalog_sales
-- ,item
-- ,date_dim
-- where cs_item_sk = i_item_sk
-- and i_category in ('Children', 'Jewelry', 'Home')
-- and cs_sold_date_sk = d_date_sk
-- and d_date between cast('1998-04-22' as date)
-- 				and (cast('1998-04-22' as date) + interval '30' day)
-- group by i_item_id
-- ,i_item_desc
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio
-- limit 100;

-- select
-- c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
-- from
-- (select ss_ticket_number
-- ,ss_customer_sk
-- ,store.s_city
-- ,sum(ss_coupon_amt) amt
-- ,sum(ss_net_profit) profit
-- from store_sales,date_dim,store,household_demographics
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_store_sk = store.s_store_sk
-- and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
-- and (household_demographics.hd_dep_count = 8 or household_demographics.hd_vehicle_count > 0)
-- and date_dim.d_dow = 1
-- and date_dim.d_year in (1998,1998+1,1998+2)
-- and store.s_number_employees between 200 and 295
-- group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
-- where ss_customer_sk = c_customer_sk
-- order by c_last_name,c_first_name,substr(s_city,1,30), profit
-- limit 100;

-- select i_item_id,
-- avg(ss_quantity) agg1,
-- avg(ss_list_price) agg2,
-- avg(ss_coupon_amt) agg3,
-- avg(ss_sales_price) agg4
-- from store_sales, customer_demographics, date_dim, item, promotion
-- where ss_sold_date_sk = d_date_sk and
-- ss_item_sk = i_item_sk and
-- ss_cdemo_sk = cd_demo_sk and
-- ss_promo_sk = p_promo_sk and
-- cd_gender = 'F' and
-- cd_marital_status = 'M' and
-- cd_education_status = '4 yr Degree' and
-- (p_channel_email = 'N' or p_channel_event = 'N') and
-- d_year = 2002
-- group by i_item_id
-- order by i_item_id
-- limit 100;

-- select ca_zip, ca_state, sum(ws_sales_price)
-- from web_sales, customer, customer_address, date_dim, item
-- where ws_bill_customer_sk = c_customer_sk
-- 	and c_current_addr_sk = ca_address_sk
-- 	and ws_item_sk = i_item_sk
-- 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
-- 	 or
-- 	 i_item_id in (select i_item_id
-- from item
-- where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
-- )
-- 	 )
-- 	and ws_sold_date_sk = d_date_sk
-- 	and d_qoy = 1 and d_year = 2000
-- group by ca_zip, ca_state
-- order by ca_zip, ca_state
-- limit 100;
2024-03-06 16:07:27,012 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-03-06 16:07:27,012 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-03-06 16:07:27,012 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-03-06 16:07:27,018 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:27,061 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,083 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,095 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,103 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,130 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,135 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,139 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,142 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,145 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,148 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,151 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,154 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,158 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,161 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,164 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,167 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,170 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,176 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,179 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,182 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,185 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,188 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,191 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,194 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,197 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,200 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,203 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,206 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,209 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:07:27,218 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:27,218 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:07:27,218 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:07:27,218 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:07:27,218 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_month_seq index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: customer_demographics columns: cd_demo_sk index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0), (table: date_dim columns: d_year index_type:  storage: 0,), (table: store_sales columns: ss_net_profit index_type:  storage: 0,)],len==9
2024-03-06 16:07:27,628 - root - MCTS - INFO - mcts 100 >= 132.109375
2024-03-06 16:07:27,628 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :227.08456534594913
2024-03-06 16:07:27,650 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :227.08456534594913
2024-03-06 16:07:27,668 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :227.08456534594913
2024-03-06 16:07:27,684 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :227.08456534594913
2024-03-06 16:07:27,699 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :227.08456534594913
2024-03-06 16:07:27,714 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :227.08456534594913
2024-03-06 16:07:27,727 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_net_profit index_type:  storage: 78.9375，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:07:27,728 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144376.22
2024-03-06 16:07:27,728 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:07:27,728 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-03-06 16:07:27,728 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_net_profit index_type:  storage: 78.9375，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-03-06 16:07:27,728 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :69970.02
2024-03-06 16:07:27,729 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-03-06 16:07:27,729 - root - filter_low_benefit_index - INFO - filter low benefit index for table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-03-06 16:07:27,729 - root - filter_low_benefit_index - INFO - table: store_sales columns: ss_net_profit index_type:  storage: 78.9375 has benefit of 32865.90000000002
2024-03-06 16:07:27,729 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-03-06 16:07:27,729 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :102835.92
2024-03-06 16:07:27,729 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:07:27,729 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-06 16:07:27,729 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-03-06 16:07:27,729 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:07:27,729 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144376.22
2024-03-06 16:07:27,729 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-03-06 16:07:27,729 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :100921.08
2024-03-06 16:07:27,730 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-03-06 16:07:27,730 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:07:27,730 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 1914.8400000000256
2024-03-06 16:07:27,730 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-03-06 16:07:27,730 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :102794.7
2024-03-06 16:07:27,730 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-03-06 16:07:27,730 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:07:27,730 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 41.22000000003027
2024-03-06 16:07:27,731 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:07:27,731 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-03-06 16:07:27,731 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:07:27,731 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:07:27,731 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 65.35000000003492
2024-03-06 16:07:27,736 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:27,788 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,789 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13384>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13384>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13384>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,790 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13384>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13384>btree_date_dim_d_year"', '"<13385>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index : table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 34822.11]
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 34822.11]
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00
 and hd_dep_count = 1
 ) or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00
 and hd_dep_count = 1
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 34822.11]
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:07:27,791 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-03-06 16:07:27,791 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:07:27,797 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:07:27,798 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:07:27,798 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:08:31,745 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:08:31,760 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:08:31,787 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:08:31,829 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:08:31,851 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:08:31,858 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:08:31,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:08:31,879 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:08:31,879 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:08:31,879 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:08:31,879 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_month_seq index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0)],len==4
2024-03-06 16:08:32,045 - root - MCTS - INFO - mcts 100 >= 2.2578125
2024-03-06 16:08:32,046 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:08:32,046 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-03-06 16:08:32,047 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:08:32,047 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-06 16:08:32,047 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-03-06 16:08:32,047 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:08:32,047 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-03-06 16:08:32,047 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:08:32,047 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:08:32,047 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 65.35000000000582
2024-03-06 16:08:32,053 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:08:32,103 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', '"<13383>btree_item_i_item_sk"']
2024-03-06 16:08:32,104 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:08:32,104 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-06 16:08:32,104 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:08:32,104 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', '"<13383>btree_item_i_item_sk"']
2024-03-06 16:08:32,104 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:08:32,104 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:08:32,104 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:08:32,104 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-03-06 16:08:32,104 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-03-06 16:08:32,104 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:08:32,104 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk,
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-03-06 16:08:32,104 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:08:32,110 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:08:32,111 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:08:32,111 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:10:11,936 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:10:11,957 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:10:11,977 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:10:12,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,065 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,077 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,089 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,102 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,114 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,126 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,138 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,150 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,162 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,174 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,186 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,198 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,210 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,234 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,245 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,257 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,269 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,292 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,304 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,317 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,330 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,342 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,354 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,366 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,378 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,391 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,403 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,415 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,427 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,439 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,451 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,464 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,488 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,500 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,513 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,525 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,537 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,549 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,561 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,574 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,586 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,599 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,610 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,622 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,634 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,646 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,658 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,670 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,681 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,693 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,706 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,719 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,731 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,743 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,755 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,767 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,779 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,791 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,803 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,815 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,827 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,839 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,851 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,863 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,875 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,887 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,899 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,912 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,924 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,936 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,948 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,959 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,971 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,983 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:12,995 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,006 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,018 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,030 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,041 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,065 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,076 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,088 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,099 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,111 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,134 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,146 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,158 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,169 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,181 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,192 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,204 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,227 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,239 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,250 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,262 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,274 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,285 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,297 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,308 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,320 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,331 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,343 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,354 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,366 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,378 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,389 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,401 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,412 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,424 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,435 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,447 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,459 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,470 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,482 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:10:13,499 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:10:13,499 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:10:13,499 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:10:13,499 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:10:13,891 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 16:10:13,891 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:10:13,910 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:10:13,924 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:10:13,937 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:10:13,950 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:10:13,962 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:10:13,962 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:10:13,964 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:10:13,964 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:10:13,964 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:10:13,964 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:10:13,964 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 16:10:13,964 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:10:13,964 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:10:13,964 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 16:10:13,965 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:10:13,965 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:10:13,965 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:10:13,965 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:10:13,965 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:10:13,965 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:10:13,965 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:10:13,965 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:10:13,965 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:10:13,965 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:10:13,971 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:10:14,012 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:10:14,013 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:10:14,013 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 16:10:14,013 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:10:14,013 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 16:10:14,013 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:10:14,013 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 16:10:14,013 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:10:14,013 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 16:10:14,013 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:10:14,022 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:10:14,023 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:10:14,023 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:12:28,864 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:12:29,030 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:12:29,050 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:12:46,242 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:12:46,458 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:12:46,479 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:12:46,814 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:46,839 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:46,855 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:46,876 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:46,896 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:46,917 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:46,933 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:46,947 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:46,978 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:46,994 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,008 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,023 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,040 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,058 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,075 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,088 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,101 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,116 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,131 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,145 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,159 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,180 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,194 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,208 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,236 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,250 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,264 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,278 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,293 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,320 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,345 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,358 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,371 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,385 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,398 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,412 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,426 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,440 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,452 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,468 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,483 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,495 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,514 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,528 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,542 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,555 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,568 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,595 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,608 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,621 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,633 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,646 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,658 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,672 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,697 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,711 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,724 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,737 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,750 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,763 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,778 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,791 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,830 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,843 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,855 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,868 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,881 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,894 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,908 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,920 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,934 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,948 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,962 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,976 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:47,989 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,003 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,015 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,028 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,040 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,066 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,079 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,092 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,105 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,119 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,132 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,145 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,158 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,171 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,183 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,196 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,208 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,221 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,234 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,246 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,259 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,271 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,283 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,297 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,309 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,322 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,335 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,348 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,361 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,373 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,386 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,398 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,411 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,424 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,437 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,450 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,463 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,489 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,502 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,516 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:12:48,536 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:12:48,537 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:12:48,537 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:12:48,537 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:12:50,744 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 16:13:10,299 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:10,471 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:10,492 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:10,822 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:10,848 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:10,863 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:10,878 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:10,893 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:10,908 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:10,925 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:10,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:10,980 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:10,993 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,006 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,020 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,034 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,052 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,069 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,087 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,105 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,120 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,136 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,159 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,175 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,190 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,204 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,219 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,250 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,263 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,277 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,292 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,322 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,335 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,350 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,364 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,378 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,392 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,406 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,420 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,434 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,448 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,462 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,475 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,488 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,506 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,519 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,533 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,546 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,558 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,571 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,584 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,598 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,611 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,624 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,637 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,650 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,662 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,675 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,687 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,700 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,712 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,726 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,739 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,752 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,765 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,779 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,792 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,830 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,843 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,855 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,868 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,881 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,893 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,906 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,919 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,933 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,948 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,963 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,977 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:11,989 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,001 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,015 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,028 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,041 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,066 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,078 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,090 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,103 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,115 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,127 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,140 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,154 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,167 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,179 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,192 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,205 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,218 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,230 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,243 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,268 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,294 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,319 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,345 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,358 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,371 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,385 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,398 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,411 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,423 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,436 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,448 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,461 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,475 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,488 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,500 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,513 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:12,532 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:12,532 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:13:12,532 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:13:12,532 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:13:14,682 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 16:13:14,682 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:14,839 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:14,971 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:15,096 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:15,215 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:15,331 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:13:15,331 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:13:15,334 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:13:15,334 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:13:15,334 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:13:15,334 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:13:15,334 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:13:15,335 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:13:15,335 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:13:15,335 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:13:15,336 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:13:15,337 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 16:13:15,337 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:13:15,337 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:13:15,337 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 16:13:15,339 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:13:15,339 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:13:15,339 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:13:15,339 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:13:15,339 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:13:15,344 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:15,567 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:13:15,569 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:13:15,570 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:13:15,571 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,571 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,571 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,571 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,572 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,572 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:13:15,572 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,572 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,572 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,572 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:13:15,572 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:13:15,572 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,572 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:13:15,573 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,574 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,574 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,574 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,574 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:15,574 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:13:15,574 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:13:15,574 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:13:15,574 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:13:15,576 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:13:15,576 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:13:15,576 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:13:15,576 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:13:15,576 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:13:15,576 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:13:15,577 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:13:15,583 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:15,583 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:13:15,584 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:13:48,152 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:48,304 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:48,323 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:48,661 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,686 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,701 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,715 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,729 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,743 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,758 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,773 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,786 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,843 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,869 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,883 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,897 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,912 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,927 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,941 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,956 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,971 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:48,984 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,017 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,036 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,050 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,064 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,079 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,092 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,106 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,120 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,136 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,151 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,165 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,181 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,194 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,208 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,249 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,263 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,277 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,290 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,303 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,317 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,331 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,345 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,360 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,386 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,400 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,414 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,427 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,441 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,454 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,468 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,481 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,494 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,508 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,521 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,535 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,548 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,563 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,592 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,606 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,620 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,633 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,647 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,674 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,700 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,728 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,742 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,755 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,768 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,782 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,796 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,809 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,823 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,836 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,849 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,865 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,890 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,923 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,943 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,963 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,978 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:49,993 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,007 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,021 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,035 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,050 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,063 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,081 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,101 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,141 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,158 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,198 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,231 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,252 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,266 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,280 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,294 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,308 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,323 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,336 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,351 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,367 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,384 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,413 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,427 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,441 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,455 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,470 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,483 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,498 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,531 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,565 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,598 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,632 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,646 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,664 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,679 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:13:50,702 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:50,702 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:13:50,703 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:13:50,703 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:13:53,004 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 16:13:53,004 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:53,161 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:53,297 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:53,420 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:53,540 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:13:53,655 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:13:53,656 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:13:53,658 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:13:53,658 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:13:53,658 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:13:53,660 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:13:53,660 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 16:13:53,661 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:13:53,661 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:13:53,661 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 16:13:53,661 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:13:53,661 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:13:53,661 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:13:53,661 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:13:53,662 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:13:53,663 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:13:53,663 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:13:53,663 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:13:53,664 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:13:53,664 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:13:53,669 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:53,917 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:13:53,919 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:13:53,920 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:13:53,922 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,922 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,922 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,922 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,922 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,922 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:13:53,922 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,922 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:13:53,922 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:13:53,923 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,923 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,923 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,923 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,923 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:13:53,923 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,923 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,923 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,923 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:13:53,924 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:13:53,924 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,924 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,924 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:13:53,924 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,924 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,924 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,924 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,925 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:13:53,925 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:13:53,925 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:13:53,925 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:13:53,925 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:13:53,926 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:13:53,926 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:13:53,927 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:13:53,927 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:13:53,927 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:13:53,927 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:13:53,927 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:13:53,933 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:13:53,934 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:13:53,938 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:14:31,567 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:14:31,721 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:14:31,740 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:14:32,070 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:14:32,094 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:16:22,996 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:16:23,156 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:16:23,175 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:16:23,525 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:16:23,550 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,080 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:18:11,101 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:18:11,121 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:18:11,177 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,200 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,213 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,232 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,246 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,259 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,272 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,285 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,298 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,311 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,325 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,376 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,414 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,428 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,444 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,458 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,472 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,485 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,499 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,512 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,526 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,539 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,553 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,567 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,594 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,607 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,620 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,633 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,646 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,660 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,673 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,686 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,699 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,726 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,738 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,751 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,764 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,776 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,802 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,814 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,850 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,863 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,876 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,889 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,905 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,918 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,932 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,946 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,959 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,973 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:11,988 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,008 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,021 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,035 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,064 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,077 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,093 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,107 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,120 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,133 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,147 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,161 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,174 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,187 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,199 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,211 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,224 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,236 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,248 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,261 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,273 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,286 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,299 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,313 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,326 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,352 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,365 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,378 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,391 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,403 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,416 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,429 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,442 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,456 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,471 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,483 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,496 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,509 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,529 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,543 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,556 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,570 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,589 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,609 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,623 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,642 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,662 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,675 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,689 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,702 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,718 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,732 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,752 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,772 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,792 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,810 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,822 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,836 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,849 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,863 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,876 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,888 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,902 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,915 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,929 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:18:12,973 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:18:12,974 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:18:12,974 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:18:12,974 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:18:13,398 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 16:18:13,398 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:18:13,418 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:18:13,431 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:18:13,444 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:18:13,457 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:18:13,469 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:18:13,469 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:18:13,471 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:18:13,471 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:18:13,471 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:18:13,471 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:18:13,471 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:18:13,471 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:18:13,471 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:18:13,471 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:18:13,472 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:18:13,472 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:18:13,472 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:18:13,472 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:18:13,472 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:18:13,472 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:18:13,472 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 16:18:13,472 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:18:13,472 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:18:13,472 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 16:18:13,480 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,538 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:18:13,539 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:18:13,539 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 16:18:13,539 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:18:13,539 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 16:18:13,539 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:18:13,539 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 16:18:13,539 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:18:13,539 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 16:18:13,539 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:18:13,549 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:18:13,549 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:18:13,549 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:19:22,624 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:19:22,646 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:19:22,665 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:19:22,732 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,753 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,765 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,778 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,790 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,802 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,814 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,825 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,838 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,850 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,861 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,877 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,891 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,903 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,915 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,928 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,940 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,953 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,965 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,977 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:22,990 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,002 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,014 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,026 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,040 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,052 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,064 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,077 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,089 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,101 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,114 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,127 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,141 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,153 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,165 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,178 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,191 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,205 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,218 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,230 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,254 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,267 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,279 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,292 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,305 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,318 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,345 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,357 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,370 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,382 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,395 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,407 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,422 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,435 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,447 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,459 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,471 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,483 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,496 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,508 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,521 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,533 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,546 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,559 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,573 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,592 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,605 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,617 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,629 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,642 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,654 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,666 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,678 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,703 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,715 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,727 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,739 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,751 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,763 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,775 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,787 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,798 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,811 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,823 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,847 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,860 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,873 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,885 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,910 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,922 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,936 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,948 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,960 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,973 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,985 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:23,997 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,009 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,021 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,033 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,045 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,057 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,069 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,081 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,093 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,105 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,118 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,131 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,144 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,156 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,169 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,182 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,195 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,207 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,220 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,232 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,244 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,257 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:19:24,274 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:19:24,274 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:19:24,274 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:19:24,274 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:19:25,713 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 16:19:25,713 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:19:25,741 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:19:25,763 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:19:25,783 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:19:25,802 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 16:19:25,821 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:19:25,821 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:19:25,822 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:19:25,822 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:19:25,822 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:19:25,823 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:19:25,823 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 16:19:25,823 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:19:25,823 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:19:25,823 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 16:19:25,823 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:19:25,823 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:19:25,823 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:19:25,823 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:19:25,823 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:19:25,823 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:19:25,824 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:19:25,824 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:19:25,824 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:19:25,824 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:19:25,829 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:19:25,976 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,977 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:19:25,978 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:19:25,978 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:19:25,978 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:19:25,978 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 16:19:25,978 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:19:25,978 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:19:25,978 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:19:25,978 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:19:25,978 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 16:19:25,978 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:19:25,984 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:19:25,985 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:19:25,985 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:20:37,559 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:20:37,581 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:20:37,600 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:20:37,663 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:20:37,689 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:20:37,703 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:20:37,724 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,059 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:24:05,082 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:24:05,100 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:24:05,162 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,182 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,196 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,233 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,246 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,258 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,283 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,304 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,324 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,346 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,364 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,383 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,403 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,424 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,450 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,501 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,515 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,528 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,542 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,555 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,569 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,586 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,604 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,630 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,658 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,685 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,711 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,737 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,751 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,785 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,818 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,834 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,854 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,868 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,882 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,895 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,909 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,927 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,940 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,954 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,968 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,982 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:05,996 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,010 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,024 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,037 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,072 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,085 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,107 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,120 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,145 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,159 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,193 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,207 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,221 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,249 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,262 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,275 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,289 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,302 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,317 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,331 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,345 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,366 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,390 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,404 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,417 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,431 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,445 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,458 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,472 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,485 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,499 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,513 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,526 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,539 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,551 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,564 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,576 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,589 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,602 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,614 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,627 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,639 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,652 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,665 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,678 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,703 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,729 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,754 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,778 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,796 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,808 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,821 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,834 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,846 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,859 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,872 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,886 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,911 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,925 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,938 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,963 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,976 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:06,989 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,002 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,019 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,048 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,061 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,073 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,086 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,110 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:24:07,127 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:24:07,127 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:24:07,127 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:24:07,128 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:24:08,531 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 16:24:08,531 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:24:08,549 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:24:08,565 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:24:08,578 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:24:08,591 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:24:08,603 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:24:08,603 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 16:24:08,603 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:24:08,604 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:24:08,604 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 16:24:08,604 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:24:08,604 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:24:08,604 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:24:08,604 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:24:08,604 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:24:08,604 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:24:08,604 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:24:08,604 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:24:08,604 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:24:08,605 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:24:08,605 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:24:08,605 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:24:08,605 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:24:08,605 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:24:08,605 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:24:08,610 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:24:08,754 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13382>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:24:08,754 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13382>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,755 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13382>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13382>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:24:08,756 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:24:08,756 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:24:08,756 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:24:08,756 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:24:08,756 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:24:08,756 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:24:08,756 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:24:08,757 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:24:08,757 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:24:08,757 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:24:08,762 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:24:08,762 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:24:08,762 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:25:36,482 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:25:36,505 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:25:36,522 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:25:36,586 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,606 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,620 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,641 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,659 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,671 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,684 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,697 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,711 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,725 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,738 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,752 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,766 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,779 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,792 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,809 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,829 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,843 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,856 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,868 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,881 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,893 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,906 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,919 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,933 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,946 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,959 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,972 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,985 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:36,997 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,010 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,023 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,036 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,049 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,062 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,074 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,087 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,100 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,113 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,126 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,139 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,152 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,165 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,179 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,192 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,208 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,248 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,261 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,274 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,295 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,308 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,321 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,334 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,347 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,360 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,373 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,386 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,413 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,426 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,440 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,454 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,468 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,482 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,495 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,509 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,523 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,537 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,551 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,564 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,578 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,592 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,606 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,620 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,635 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,649 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,662 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,675 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,688 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,701 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,714 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,735 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,749 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,763 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,776 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,790 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,803 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,833 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,847 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,861 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,875 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,889 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,903 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,917 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,932 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,945 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,959 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,972 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:37,986 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,004 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,017 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,031 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,044 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,057 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,070 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,083 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,096 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,109 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,122 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,137 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,154 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,168 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,181 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,194 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,206 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,219 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,232 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,246 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,259 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,295 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:25:38,320 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:25:38,320 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:25:38,320 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:25:38,320 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:25:39,750 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 16:25:39,750 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:25:39,770 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:25:39,785 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:25:39,798 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:25:39,811 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:25:39,823 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:25:39,823 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:25:39,824 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:25:39,824 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:25:39,824 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:25:39,824 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:25:39,824 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:25:39,825 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:25:39,825 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:25:39,825 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:25:39,825 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:25:39,825 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 16:25:39,825 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:25:39,825 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:25:39,825 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 16:25:39,825 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:25:39,825 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:25:39,825 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:25:39,825 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:25:39,825 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:25:39,831 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:25:39,980 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,981 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:25:39,982 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:25:39,982 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:25:39,983 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:25:39,983 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:25:39,983 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:25:39,983 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:25:39,983 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:25:39,983 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:25:39,983 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:25:39,991 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:25:39,991 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:25:39,992 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:28:33,710 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:28:33,733 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:28:33,751 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:28:33,816 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,838 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,855 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,879 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,896 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,910 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,922 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,936 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,953 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,979 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:33,991 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,004 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,017 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,030 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,043 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,057 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,070 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,083 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,095 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,108 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,121 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,134 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,147 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,161 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,174 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,187 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,201 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,215 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,228 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,243 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,284 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,298 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,312 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,327 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,341 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,355 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,369 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,383 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,397 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,410 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,424 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,438 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,451 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,466 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,480 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,494 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,509 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,526 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,539 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,553 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,566 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,580 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,594 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,611 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,624 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,638 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,651 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,665 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,678 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,716 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,729 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,742 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,755 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,768 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,782 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,797 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,810 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,825 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,838 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,852 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,865 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,879 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,892 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,905 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,918 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,930 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,943 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,955 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,968 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,980 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:34,993 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,005 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,018 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,046 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,059 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,073 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,086 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,099 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,114 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,128 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,142 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,156 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,170 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,184 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,198 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,212 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,226 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,240 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,254 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,268 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,295 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,314 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,328 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,341 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,354 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,367 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,380 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,394 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,407 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,421 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,434 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,448 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,490 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,504 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,518 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,535 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,549 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,565 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:28:35,587 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:28:35,587 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:28:35,587 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:28:35,587 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:28:37,024 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 16:28:37,025 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:28:37,043 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:28:37,057 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:28:37,070 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:28:37,083 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:28:37,095 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:28:37,095 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:28:37,096 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:28:37,096 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:28:37,096 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:28:37,096 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:28:37,096 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 16:28:37,097 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:28:37,097 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:28:37,097 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 16:28:37,097 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:28:37,097 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:28:37,097 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:28:37,097 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:28:37,097 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:28:37,097 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:28:37,097 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:28:37,097 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:28:37,097 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:28:37,097 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:28:37,102 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:28:37,247 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:28:37,247 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:28:37,248 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:28:37,249 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:28:37,249 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:28:37,249 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:28:37,249 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:28:37,249 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:28:37,249 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:28:37,249 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:28:37,249 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:28:37,249 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:28:37,250 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:28:37,254 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:28:37,255 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:28:37,255 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:31:51,770 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:31:51,795 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:31:51,813 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:31:51,876 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:51,896 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:51,911 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:51,934 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:51,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:51,964 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:51,977 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:51,990 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,003 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,016 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,029 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,043 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,056 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,069 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,082 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,094 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,106 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,119 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,131 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,143 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,156 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,168 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,181 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,194 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,206 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,219 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,232 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,244 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,269 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,293 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,306 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,318 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,331 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,344 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,369 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,382 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,394 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,407 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,419 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,432 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,444 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,457 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,470 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,483 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,495 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,508 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,521 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,534 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,547 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,559 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,572 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,584 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,597 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,609 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,622 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,634 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,647 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,659 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,673 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,685 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,698 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,711 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,723 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,736 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,749 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,762 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,774 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,787 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,815 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,828 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,840 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,853 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,865 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,878 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,890 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,903 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,915 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,928 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,941 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,954 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,979 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:52,991 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,003 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,016 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,028 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,041 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,066 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,079 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,092 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,105 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,118 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,130 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,143 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,155 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,168 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,180 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,193 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,205 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,218 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,231 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,243 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,269 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,282 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,295 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,320 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,333 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,345 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,358 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,371 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,383 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,396 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,408 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,421 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,433 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,446 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,458 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:31:53,475 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:31:53,475 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:31:53,475 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:31:53,475 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:31:54,977 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 16:31:54,978 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:31:55,016 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:31:55,046 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:31:55,075 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:31:55,102 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:31:55,154 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:31:55,155 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:31:55,160 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:31:55,160 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:31:55,160 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:31:55,161 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:31:55,162 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 16:31:55,162 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:31:55,162 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:31:55,162 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 16:31:55,163 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:31:55,163 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:31:55,163 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:31:55,163 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:31:55,163 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:31:55,163 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:31:55,164 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:31:55,164 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:31:55,164 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:31:55,164 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:31:55,169 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:31:55,336 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:31:55,337 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,338 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,338 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,338 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,338 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,338 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:31:55,338 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:31:55,338 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:31:55,338 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,339 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,340 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:31:55,340 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:31:55,340 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:31:55,341 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:31:55,341 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:31:55,341 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:31:55,341 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:31:55,341 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:31:55,341 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:31:55,341 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:31:55,347 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:31:55,348 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:31:55,348 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:36:06,303 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:36:06,326 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:36:06,345 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:36:06,408 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,429 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,443 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,464 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,497 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,510 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,524 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,537 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,552 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,565 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,579 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,593 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,606 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,619 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,632 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,646 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,660 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,674 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,699 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,718 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,732 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,746 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,759 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,774 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,787 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,815 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,829 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,842 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,855 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,868 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,882 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,894 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,907 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,919 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,931 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,944 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,956 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,968 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,980 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:06,993 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,005 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,018 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,030 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,043 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,055 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,068 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,080 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,092 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,104 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,117 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,129 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,141 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,153 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,165 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,177 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,189 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,201 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,214 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,226 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,238 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,250 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,262 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,274 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,287 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,300 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,312 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,324 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,336 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,348 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,360 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,372 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,384 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,396 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,408 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,421 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,433 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,445 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,457 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,469 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,481 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,493 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,505 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,518 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,530 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,542 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,555 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,567 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,579 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,592 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,604 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,617 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,630 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,642 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,655 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,667 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,679 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,691 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,703 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,715 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,728 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,740 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,753 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,765 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,777 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,813 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,825 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,838 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,850 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,862 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,874 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,886 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,911 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,923 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,935 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,949 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,961 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,973 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,985 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:07,998 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:08,010 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:36:08,026 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:36:08,027 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:36:08,027 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:36:08,027 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:36:09,463 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 16:36:09,463 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:36:09,482 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:36:09,495 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:36:09,508 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:36:09,520 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:36:09,532 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:36:09,532 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:36:09,534 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:36:09,535 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:36:09,535 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:36:09,535 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:36:09,535 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 16:36:09,535 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:36:09,535 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:36:09,535 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 16:36:09,535 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:36:09,535 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:36:09,535 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:36:09,536 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:36:09,536 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:36:09,536 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:36:09,536 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:36:09,536 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:36:09,536 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:36:09,536 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:36:09,541 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:36:09,687 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:36:09,688 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:36:09,688 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:36:09,688 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,688 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,688 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,688 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,688 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,688 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:36:09,689 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:36:09,689 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:36:09,689 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:36:09,690 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:36:09,690 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:36:09,690 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:36:09,690 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:36:09,690 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:36:09,690 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 16:36:09,690 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:36:09,695 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:36:09,695 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:36:09,695 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 16:39:13,506 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:39:13,529 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:39:13,547 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:39:13,610 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,631 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,645 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,665 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,682 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,695 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,708 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,720 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,733 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,746 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,758 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,784 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,797 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,810 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,822 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,847 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,861 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,873 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,886 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,911 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,924 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,936 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,949 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,961 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,974 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:13,987 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,000 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,014 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,029 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,041 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,054 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,066 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,078 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,091 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,103 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,117 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,131 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,144 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,157 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,169 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,182 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,194 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,207 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,220 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,233 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,246 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,258 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,271 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,283 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,296 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,309 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,322 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,334 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,347 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,359 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,372 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,384 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,396 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,409 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,421 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,434 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,447 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,460 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,473 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,486 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,498 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,512 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,524 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,537 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,550 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,562 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,575 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,587 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,600 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,613 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,626 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,642 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,656 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,670 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,684 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,696 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,710 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,723 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,736 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,749 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,762 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,775 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,788 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,815 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,829 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,842 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,855 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,869 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,893 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,918 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,937 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,982 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:14,994 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,007 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,019 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,044 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,056 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,069 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,081 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,094 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,106 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,119 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,132 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,144 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,157 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,169 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,181 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,194 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,206 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,219 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,231 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,244 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 16:39:15,261 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:39:15,261 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 16:39:15,261 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 16:39:15,261 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 16:39:16,687 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 16:39:16,687 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:39:16,706 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:39:16,720 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:39:16,733 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:39:16,745 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 16:39:16,757 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:39:16,757 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 16:39:16,758 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:39:16,758 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:39:16,758 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 16:39:16,758 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:39:16,758 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 16:39:16,758 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:39:16,758 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:39:16,758 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 16:39:16,759 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:39:16,759 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 16:39:16,759 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:39:16,759 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:39:16,759 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 16:39:16,759 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 16:39:16,759 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 16:39:16,759 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 16:39:16,759 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:39:16,759 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 16:39:16,764 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:39:16,910 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:39:16,911 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 16:39:16,912 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 16:39:16,912 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:39:16,913 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 16:39:16,913 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:39:16,913 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 16:39:16,913 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:39:16,913 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 16:39:16,913 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 16:39:16,913 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 16:39:16,919 - root - __init_conn_handle - INFO - connection successful
2024-03-06 16:39:16,919 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 16:39:16,919 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 17:12:04,751 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:12:04,775 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:12:04,796 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:12:04,862 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:12:04,884 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:12:04,896 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:12:04,908 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:12:04,927 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:12:04,927 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 17:12:04,927 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 0] benefit: 0
2024-03-06 17:12:04,927 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_date_sk index_type:  storage: 0,)],len==2
2024-03-06 17:12:05,220 - root - MCTS - INFO - mcts 100 >= 1.8125
2024-03-06 17:12:05,220 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-06 17:12:05,220 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 17:12:05,221 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0]
2024-03-06 17:12:05,222 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:12:05,222 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 17:12:05,228 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:12:05,381 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', 'catalog_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', 'item_pkey']
2024-03-06 17:12:05,382 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:12:05,382 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:12:05,382 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:12:05,382 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:12:05,382 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:12:05,382 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:12:05,382 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:12:05,382 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0.5]
2024-03-06 17:12:05,383 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 17:12:05,389 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:12:05,389 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 17:12:05,389 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 17:14:02,097 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:02,133 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:02,151 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:02,219 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,258 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,280 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,308 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,323 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,374 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,389 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,402 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,416 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,441 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,456 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,470 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,486 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,509 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,530 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,551 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,571 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,591 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,610 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,624 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,637 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,652 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,668 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,682 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,695 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,709 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,724 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,738 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,751 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,763 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,776 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,788 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,813 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,826 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,839 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,851 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,864 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,876 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,888 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,901 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,914 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,926 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,938 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,952 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,980 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:02,995 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,009 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,023 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,038 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,065 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,079 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,093 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,109 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,138 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,152 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,165 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,181 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,195 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,210 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,225 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,239 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,253 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,267 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,295 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,311 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,328 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,342 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,371 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,385 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,398 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,412 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,426 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,440 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,455 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,470 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,484 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,498 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,511 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,524 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,537 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,551 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,564 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,578 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,592 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,606 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,619 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,633 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,647 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,661 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,675 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,704 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,719 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,732 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,745 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,758 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,783 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,796 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,808 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,821 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,834 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,846 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,858 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,870 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,882 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,894 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,906 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,920 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,932 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,944 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,957 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,981 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:03,993 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:04,011 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:04,011 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 17:14:04,011 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 17:14:04,011 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 17:14:05,500 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 17:14:05,500 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:14:05,519 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:14:05,533 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:14:05,546 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:14:05,558 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:14:05,570 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:14:05,570 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 17:14:05,571 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:14:05,571 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:14:05,571 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 17:14:05,572 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:14:05,572 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 17:14:05,572 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:14:05,572 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 17:14:05,572 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 17:14:05,572 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:14:05,572 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 17:14:05,572 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:14:05,572 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:14:05,572 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 17:14:05,573 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:14:05,573 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 17:14:05,573 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:14:05,573 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:14:05,573 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 17:14:05,579 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:05,731 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 17:14:05,731 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 17:14:05,732 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,733 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,733 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,733 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,733 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:05,733 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:14:05,733 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:14:05,733 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:14:05,733 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 17:14:05,733 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 17:14:05,733 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 17:14:05,733 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:14:05,733 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 17:14:05,733 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:14:05,733 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 17:14:05,733 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 17:14:05,739 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:05,739 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 17:14:05,739 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 17:14:41,929 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:41,951 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:41,971 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:42,036 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:42,058 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:42,070 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:42,088 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:14:42,112 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:42,112 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 17:14:42,112 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 0] benefit: 0
2024-03-06 17:14:42,112 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_date_sk index_type:  storage: 0,)],len==2
2024-03-06 17:14:42,421 - root - MCTS - INFO - mcts 100 >= 1.8125
2024-03-06 17:14:42,422 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-06 17:14:42,422 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 17:14:42,423 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0]
2024-03-06 17:14:42,424 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:14:42,424 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 17:14:42,430 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:42,588 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', 'catalog_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', 'item_pkey']
2024-03-06 17:14:42,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:42,589 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:42,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:14:42,590 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:14:42,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:42,590 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:14:42,590 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:14:42,590 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0.5]
2024-03-06 17:14:42,590 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 17:14:42,596 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:14:42,596 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 17:14:42,597 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 17:15:51,668 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:15:51,708 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:15:51,726 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:15:51,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:15:51,809 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:15:51,820 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:15:51,831 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:15:51,846 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:15:51,847 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 17:15:51,847 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 0] benefit: 0
2024-03-06 17:15:51,847 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_date_sk index_type:  storage: 0,)],len==2
2024-03-06 17:15:52,142 - root - MCTS - INFO - mcts 100 >= 1.8125
2024-03-06 17:15:52,142 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-06 17:15:52,143 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 17:15:52,143 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0]
2024-03-06 17:15:52,143 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:15:52,143 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 17:15:52,149 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:15:52,298 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', 'catalog_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', 'item_pkey']
2024-03-06 17:15:52,299 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:15:52,299 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:15:52,299 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:15:52,299 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:15:52,299 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:15:52,299 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:15:52,299 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:15:52,299 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0.5]
2024-03-06 17:15:52,299 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 17:15:52,305 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:15:52,305 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 17:15:52,305 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 17:16:22,141 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:16:22,165 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:16:22,183 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:16:22,252 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:16:22,271 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:16:22,283 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:16:22,294 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:16:22,313 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:16:22,313 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 17:16:22,313 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 0] benefit: 0
2024-03-06 17:16:22,313 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_date_sk index_type:  storage: 0,)],len==2
2024-03-06 17:16:22,625 - root - MCTS - INFO - mcts 100 >= 1.8125
2024-03-06 17:16:22,625 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0
2024-03-06 17:16:22,625 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 17:16:22,626 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0]
2024-03-06 17:16:22,626 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:16:22,626 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 17:16:22,633 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:16:22,783 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['store_sales_pkey', 'catalog_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', 'item_pkey']
2024-03-06 17:16:22,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:16:22,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:16:22,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:16:22,783 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:16:22,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:16:22,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:16:22,784 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:16:22,784 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 0.5]
2024-03-06 17:16:22,784 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 17:16:22,789 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:16:22,789 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 17:16:22,790 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 17:32:05,782 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:32:05,806 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:32:05,826 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:32:05,891 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:32:05,912 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:32:05,927 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:32:05,946 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:32:05,967 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:32:05,978 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:32:05,989 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:32:05,999 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:32:06,010 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:32:06,026 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:32:06,026 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 17:32:06,026 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 17:32:06,026 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: date_dim columns: d_quarter_name index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0)],len==8
2024-03-06 17:32:07,184 - root - MCTS - INFO - mcts 100 >= 4.34375
2024-03-06 17:32:07,184 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:32:07,184 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 17:32:07,185 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:32:07,185 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:32:07,185 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 17:32:07,185 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:32:07,185 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 17:32:07,185 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:32:07,185 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:32:07,185 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 17:32:07,186 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:32:07,186 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 17:32:07,186 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:32:07,186 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:32:07,186 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 17:32:07,194 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:32:07,340 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', 'store_sales_pkey', 'catalog_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:32:07,340 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:32:07,340 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', 'store_sales_pkey', 'catalog_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', 'store_sales_pkey', 'catalog_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:32:07,341 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:32:07,341 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:32:07,341 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 1969.2799999999997]
2024-03-06 17:32:07,342 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:32:07,342 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 1969.2799999999997]
2024-03-06 17:32:07,342 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:32:07,342 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 1969.2799999999997]
2024-03-06 17:32:07,342 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 17:32:07,349 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:32:07,350 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 17:32:07,350 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 17:46:47,784 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:46:47,807 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:46:47,826 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:46:47,895 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:46:47,915 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:46:47,929 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:46:47,948 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:46:47,959 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:46:47,970 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:46:47,980 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:46:47,991 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:46:48,002 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:46:48,017 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:46:48,017 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 17:46:48,017 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 17:46:48,018 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: date_dim columns: d_quarter_name index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0)],len==8
2024-03-06 17:46:49,161 - root - MCTS - INFO - mcts 100 >= 4.34375
2024-03-06 17:46:49,161 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:46:49,161 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 17:46:49,162 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:46:49,162 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:46:49,162 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 17:46:49,162 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:46:49,162 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 17:46:49,162 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:46:49,162 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:46:49,163 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 17:46:49,163 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:46:49,163 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 17:46:49,163 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:46:49,163 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:46:49,163 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 17:46:49,168 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:46:49,312 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', 'store_sales_pkey', 'catalog_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:46:49,313 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:46:49,313 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:46:49,313 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,313 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,313 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', 'store_sales_pkey', 'catalog_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', 'store_sales_pkey', 'catalog_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:46:49,314 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:46:49,314 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:46:49,314 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 1969.2799999999997]
2024-03-06 17:46:49,314 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:46:49,314 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 1969.2799999999997]
2024-03-06 17:46:49,315 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:46:49,315 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 1969.2799999999997]
2024-03-06 17:46:49,315 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 17:46:49,320 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:46:49,320 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 17:46:49,320 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 17:47:32,362 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:47:32,384 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:47:32,402 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:47:32,464 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,492 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,514 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,548 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,567 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,579 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,592 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,605 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,618 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,630 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,643 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,665 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,685 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,706 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,727 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,747 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,767 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,781 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,797 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,809 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,822 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,847 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,860 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,873 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,886 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,899 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,912 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,927 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,940 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,954 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,979 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:32,992 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,004 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,017 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,046 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,058 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,071 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,084 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,096 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,109 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,136 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,148 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,161 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,174 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,187 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,199 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,212 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,225 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,237 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,250 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,262 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,275 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,287 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,300 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,312 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,324 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,337 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,349 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,361 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,373 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,386 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,412 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,424 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,437 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,449 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,462 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,474 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,486 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,499 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,511 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,523 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,536 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,548 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,560 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,573 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,585 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,597 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,610 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,622 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,634 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,646 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,659 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,672 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,685 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,698 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,737 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,750 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,763 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,775 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,788 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,800 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,813 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,826 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,838 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,850 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,863 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,875 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,887 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,900 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,913 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,926 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,939 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,965 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,978 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:33,990 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,002 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,015 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,027 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,040 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,065 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,077 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,090 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,102 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,115 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,128 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,141 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:47:34,157 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:47:34,157 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 17:47:34,158 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 17:47:34,158 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 17:47:35,627 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 17:47:35,627 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:47:35,663 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:47:35,692 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:47:35,717 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:47:35,729 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:47:35,741 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:47:35,741 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 17:47:35,742 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:47:35,742 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:47:35,742 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 17:47:35,742 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:47:35,742 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 17:47:35,743 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:47:35,743 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 17:47:35,743 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 17:47:35,743 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:47:35,743 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 17:47:35,743 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:47:35,743 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:47:35,743 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 17:47:35,743 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:47:35,743 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 17:47:35,743 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:47:35,743 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:47:35,743 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 17:47:35,748 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:47:35,894 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 17:47:35,895 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:47:35,896 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:47:35,896 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:47:35,896 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 17:47:35,896 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 17:47:35,896 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 17:47:35,896 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:47:35,897 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 17:47:35,897 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:47:35,897 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 17:47:35,897 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 17:47:35,904 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:47:35,904 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 17:47:35,904 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 17:48:12,123 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:48:12,165 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:48:12,192 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:48:12,264 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,285 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,299 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,337 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,354 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,367 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,381 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,394 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,407 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,420 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,433 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,446 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,459 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,471 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,484 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,496 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,509 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,523 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,536 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,550 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,563 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,576 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,589 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,602 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,615 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,628 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,641 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,654 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,667 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,680 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,693 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,705 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,718 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,731 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,743 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,756 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,769 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,781 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,794 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,806 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,819 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,833 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,845 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,858 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,871 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,883 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,897 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,910 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,923 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,935 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,948 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,961 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,974 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,986 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:12,999 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,012 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,025 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,038 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,064 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,077 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,090 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,102 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,115 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,128 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,140 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,152 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,165 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,177 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,189 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,202 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,214 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,227 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,239 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,252 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,265 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,277 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,289 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,302 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,314 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,327 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,352 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,364 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,377 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,390 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,403 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,415 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,428 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,441 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,453 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,466 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,478 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,491 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,503 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,515 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,528 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,541 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,554 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,566 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,579 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,591 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,604 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,616 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,628 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,640 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,653 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,665 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,678 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,703 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,728 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,741 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,755 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,769 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,782 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,794 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,807 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,820 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,833 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,847 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,863 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,876 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,888 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 17:48:13,905 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:48:13,905 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 17:48:13,905 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 17:48:13,906 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 17:48:15,341 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 17:48:15,342 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:48:15,359 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:48:15,373 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:48:15,386 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:48:15,398 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 17:48:15,410 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:48:15,410 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 17:48:15,411 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:48:15,411 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:48:15,411 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 17:48:15,411 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:48:15,412 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 17:48:15,412 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:48:15,412 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 17:48:15,412 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 17:48:15,412 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:48:15,412 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 17:48:15,412 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:48:15,412 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:48:15,412 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 17:48:15,412 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 17:48:15,412 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 17:48:15,412 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 17:48:15,412 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:48:15,412 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 17:48:15,417 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:48:15,562 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:48:15,563 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,564 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:48:15,565 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:48:15,565 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 17:48:15,565 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,565 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,565 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,565 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 17:48:15,565 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:48:15,565 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,565 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 17:48:15,565 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 17:48:15,565 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 17:48:15,565 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 17:48:15,565 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 17:48:15,565 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 17:48:15,565 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 17:48:15,565 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 17:48:15,565 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 17:48:15,565 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 17:48:15,570 - root - __init_conn_handle - INFO - connection successful
2024-03-06 17:48:15,571 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 17:48:15,571 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 18:53:01,436 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:01,459 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:01,477 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:01,550 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,577 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,590 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,611 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,627 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,639 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,652 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,664 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,676 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,689 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,701 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,714 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,727 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,740 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,753 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,766 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,779 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,792 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,829 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,842 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,854 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,879 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,891 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,904 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,916 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,929 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,941 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,953 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,967 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,981 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:01,994 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,007 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,019 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,044 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,057 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,069 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,082 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,094 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,107 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,119 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,131 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,144 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,157 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,169 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,181 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,193 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,206 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,218 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,231 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,244 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,268 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,280 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,293 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,305 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,317 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,330 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,343 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,370 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,383 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,396 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,409 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,422 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,434 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,447 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,459 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,471 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,484 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,496 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,508 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,521 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,533 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,545 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,558 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,570 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,582 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,594 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,606 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,618 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,631 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,643 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,655 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,667 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,679 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,692 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,704 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,716 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,729 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,742 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,755 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,767 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,779 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,792 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,829 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,841 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,854 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,879 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,891 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,903 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,916 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,929 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,941 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,954 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,979 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:02,991 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,003 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,016 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,030 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,043 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,055 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,068 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,080 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,092 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,104 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,117 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:03,134 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:03,135 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 18:53:03,135 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 18:53:03,135 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 18:53:04,554 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 18:53:04,554 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:04,573 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:04,587 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:04,600 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:04,612 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:04,626 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:53:04,626 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 18:53:04,628 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:53:04,628 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:53:04,628 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 18:53:04,629 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:53:04,629 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 18:53:04,629 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:53:04,629 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:53:04,629 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 18:53:04,629 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:53:04,629 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 18:53:04,629 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:53:04,629 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:53:04,630 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 18:53:04,630 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:53:04,630 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 18:53:04,630 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:53:04,630 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:53:04,630 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 18:53:04,635 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:04,782 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:53:04,783 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13383>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:53:04,784 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:53:04,784 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:53:04,784 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:53:04,784 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:53:04,784 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:53:04,784 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:53:04,784 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:53:04,784 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:53:04,785 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:53:04,785 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 18:53:04,790 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:04,790 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 18:53:04,791 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 18:53:34,519 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:34,542 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:34,563 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:34,626 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,647 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,662 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,683 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,699 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,712 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,725 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,737 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,750 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,762 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,775 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,814 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,827 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,840 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,853 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,879 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,891 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,904 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,917 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,931 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,944 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,956 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,981 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:34,994 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,006 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,019 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,031 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,044 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,058 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,071 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,085 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,111 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,136 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,148 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,161 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,186 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,199 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,212 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,225 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,238 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,251 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,264 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,276 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,289 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,301 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,314 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,327 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,352 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,364 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,377 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,389 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,402 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,414 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,427 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,440 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,452 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,465 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,477 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,490 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,502 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,515 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,528 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,540 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,552 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,565 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,577 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,589 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,602 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,615 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,628 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,640 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,652 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,665 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,677 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,702 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,714 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,727 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,740 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,753 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,765 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,777 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,790 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,803 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,816 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,828 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,841 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,854 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,879 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,892 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,905 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,918 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,931 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,943 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,957 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,982 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:35,994 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,006 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,019 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,031 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,044 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,056 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,068 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,081 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,093 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,105 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,118 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,130 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,143 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,155 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,167 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,180 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,192 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,204 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:53:36,221 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:36,221 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 18:53:36,221 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 18:53:36,221 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 18:53:37,674 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 18:53:37,675 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:37,693 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:37,707 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:37,721 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:37,733 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:53:37,746 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:53:37,746 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 18:53:37,747 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:53:37,747 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:53:37,747 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 18:53:37,747 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:53:37,747 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 18:53:37,747 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:53:37,747 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:53:37,747 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 18:53:37,748 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:53:37,748 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 18:53:37,748 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:53:37,748 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:53:37,748 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 18:53:37,749 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:53:37,749 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 18:53:37,749 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:53:37,749 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:53:37,749 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 18:53:37,754 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:37,898 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:53:37,899 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,899 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,899 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,899 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:53:37,899 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:53:37,899 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,899 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,899 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:53:37,899 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:53:37,900 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:53:37,900 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:53:37,900 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:53:37,901 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:53:37,901 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:53:37,901 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:53:37,901 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:53:37,901 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:53:37,901 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:53:37,901 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 18:53:37,906 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:53:37,906 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 18:53:37,907 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 18:57:44,698 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:57:44,721 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:57:44,739 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:57:44,800 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,820 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,856 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,872 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,885 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,897 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,909 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,923 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,936 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,949 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,962 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:44,975 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,000 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,025 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,038 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,064 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,077 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,090 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,103 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,115 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,128 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,141 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,153 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,166 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,179 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,191 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,204 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,217 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,229 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,241 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,254 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,266 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,279 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,291 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,303 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,316 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,328 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,340 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,353 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,365 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,377 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,392 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,406 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,420 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,432 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,445 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,457 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,469 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,482 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,494 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,507 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,520 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,533 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,550 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,570 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,587 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,600 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,614 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,627 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,640 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,653 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,666 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,684 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,697 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,710 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,724 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,737 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,750 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,764 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,776 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,790 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,816 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,829 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,841 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,854 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,868 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,893 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,907 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,921 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,934 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,948 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,961 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,975 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:45,987 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,001 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,015 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,029 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,042 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,055 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,071 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,086 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,100 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,114 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,127 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,140 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,153 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,167 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,180 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,193 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,208 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,247 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,260 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,275 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,289 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,308 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,322 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,335 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,348 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,361 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,373 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,386 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,413 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,426 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,439 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,453 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,465 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,478 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,490 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:57:46,508 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:57:46,508 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 18:57:46,508 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 18:57:46,508 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 18:57:47,920 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 18:57:47,921 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:57:47,938 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:57:47,953 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:57:47,966 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:57:47,980 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:57:47,992 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:57:47,992 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 18:57:47,993 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:57:47,993 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:57:47,993 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 18:57:47,993 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:57:47,993 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 18:57:47,994 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:57:47,994 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:57:47,994 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 18:57:47,994 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:57:47,994 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 18:57:47,994 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:57:47,994 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:57:47,994 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 18:57:47,994 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:57:47,994 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 18:57:47,994 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:57:47,994 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:57:47,994 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 18:57:47,999 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:57:48,145 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:57:48,145 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:57:48,145 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,146 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:57:48,147 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,147 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,147 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,147 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,147 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:57:48,147 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:57:48,147 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:57:48,147 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:57:48,147 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:57:48,147 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:57:48,147 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:57:48,147 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:57:48,147 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:57:48,147 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:57:48,147 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:57:48,147 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 18:57:48,152 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:57:48,153 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 18:57:48,153 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 18:58:19,069 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:19,093 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:19,111 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:19,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,193 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,207 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,228 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,245 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,257 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,282 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,296 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,309 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,322 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,336 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,353 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,365 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,378 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,391 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,404 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,416 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,429 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,441 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,454 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,467 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,479 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,492 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,504 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,516 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,528 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,541 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,553 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,565 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,578 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,590 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,603 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,615 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,628 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,640 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,653 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,665 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,677 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,689 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,701 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,714 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,726 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,738 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,751 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,763 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,776 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,814 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,826 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,839 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,852 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,869 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,884 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,899 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,912 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,925 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,938 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,965 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,977 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:19,989 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,002 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,014 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,026 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,039 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,063 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,075 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,088 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,100 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,112 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,125 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,137 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,149 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,161 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,185 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,198 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,210 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,223 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,248 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,262 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,275 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,288 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,302 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,322 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,343 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,363 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,383 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,396 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,411 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,424 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,437 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,449 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,462 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,475 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,487 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,500 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,513 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,526 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,538 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,551 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,563 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,576 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,589 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,605 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,617 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,630 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,642 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,655 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,667 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,679 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,692 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,704 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,717 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,729 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,741 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,753 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,765 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,778 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,790 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:20,806 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:20,806 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 18:58:20,807 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 18:58:20,807 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 18:58:22,251 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 18:58:22,252 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:22,270 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:22,285 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:22,299 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:22,312 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:22,324 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:58:22,324 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 18:58:22,325 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:58:22,325 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:58:22,325 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 18:58:22,325 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:58:22,326 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 18:58:22,326 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:58:22,326 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:58:22,326 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 18:58:22,326 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:58:22,326 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 18:58:22,326 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:58:22,326 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:58:22,326 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 18:58:22,326 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:58:22,326 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 18:58:22,326 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:58:22,327 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:58:22,327 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 18:58:22,331 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:22,476 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 18:58:22,477 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:58:22,477 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:58:22,477 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,477 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,477 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,477 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,477 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,477 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 18:58:22,477 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:22,478 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:58:22,478 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 18:58:22,479 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:58:22,479 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 18:58:22,479 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:58:22,479 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 18:58:22,479 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:58:22,479 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 18:58:22,479 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 18:58:22,486 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:22,487 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 18:58:22,487 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 18:58:54,669 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:54,692 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:54,712 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:54,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,810 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,824 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,845 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,861 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,873 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,886 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,911 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,923 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,936 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,953 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,967 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,979 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:54,992 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,004 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,016 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,028 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,041 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,066 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,078 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,091 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,103 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,116 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,128 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,141 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,154 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,166 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,179 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,192 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,205 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,217 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,230 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,263 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,285 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,306 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,320 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,344 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,369 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,381 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,394 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,406 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,418 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,430 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,442 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,454 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,467 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,479 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,491 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,503 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,515 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,528 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,540 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,552 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,564 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,577 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,589 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,601 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,613 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,626 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,638 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,650 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,663 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,676 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,688 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,700 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,712 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,724 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,736 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,748 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,761 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,774 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,786 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,799 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,811 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,823 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,848 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,860 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,873 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,885 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,911 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,923 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,937 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,949 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,962 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,974 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,986 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:55,999 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,012 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,024 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,037 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,050 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,062 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,075 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,088 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,101 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,113 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,126 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,139 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,151 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,164 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,176 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,188 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,201 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,214 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,228 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,241 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,254 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,266 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,278 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,290 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,303 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,317 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,330 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,344 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,369 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,381 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:58:56,398 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:56,398 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 18:58:56,398 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 18:58:56,398 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 18:58:57,821 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 18:58:57,821 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:57,839 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:57,853 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:57,867 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:57,879 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:58:57,891 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:58:57,891 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 18:58:57,892 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:58:57,892 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:58:57,892 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 18:58:57,893 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:58:57,893 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 18:58:57,893 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:58:57,893 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:58:57,893 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 18:58:57,893 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:58:57,893 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 18:58:57,893 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:58:57,893 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:58:57,893 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 18:58:57,893 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:58:57,894 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 18:58:57,894 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:58:57,894 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:58:57,894 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 18:58:57,899 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:58,052 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:58:58,053 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:58:58,053 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:58:58,053 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,053 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,053 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,053 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:58:58,054 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:58:58,054 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:58:58,055 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:58:58,055 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:58:58,055 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:58:58,055 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:58:58,055 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:58:58,055 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:58:58,055 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:58:58,055 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 18:58:58,060 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:58:58,061 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 18:58:58,061 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 18:59:45,077 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:59:45,100 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:59:45,119 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:59:45,182 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,202 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,217 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,239 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,255 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,267 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,280 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,292 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,305 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,318 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,330 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,343 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,357 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,370 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,385 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,398 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,412 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,425 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,438 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,450 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,463 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,488 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,501 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,513 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,526 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,539 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,553 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,566 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,594 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,606 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,619 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,632 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,645 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,657 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,670 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,682 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,695 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,708 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,721 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,734 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,746 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,759 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,784 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,797 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,809 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,822 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,835 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,847 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,860 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,873 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,886 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,899 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,915 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,929 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,956 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,981 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:45,994 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,009 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,023 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,037 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,049 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,062 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,077 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,090 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,104 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,118 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,131 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,145 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,157 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,171 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,184 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,196 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,211 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,224 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,238 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,251 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,264 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,277 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,289 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,303 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,318 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,330 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,343 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,355 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,368 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,381 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,393 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,407 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,422 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,435 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,448 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,461 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,474 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,486 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,499 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,513 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,526 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,539 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,552 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,567 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,593 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,608 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,621 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,634 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,647 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,660 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,672 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,685 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,698 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,710 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,723 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,736 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,748 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,761 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,773 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,786 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,800 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,819 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 18:59:46,836 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:59:46,836 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 18:59:46,837 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 18:59:46,837 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 18:59:48,243 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 18:59:48,243 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:59:48,261 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:59:48,274 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:59:48,288 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:59:48,303 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 18:59:48,318 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:59:48,318 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 18:59:48,319 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:59:48,319 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:59:48,319 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 18:59:48,320 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:59:48,320 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 18:59:48,320 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:59:48,320 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:59:48,320 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 18:59:48,320 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:59:48,320 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 18:59:48,320 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:59:48,320 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:59:48,320 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 18:59:48,321 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 18:59:48,321 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 18:59:48,321 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 18:59:48,321 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:59:48,321 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 18:59:48,326 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:59:48,469 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,470 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 18:59:48,471 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:59:48,471 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 18:59:48,471 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:59:48,472 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 18:59:48,472 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:59:48,472 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 18:59:48,472 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:59:48,472 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 18:59:48,472 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 18:59:48,472 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 18:59:48,477 - root - __init_conn_handle - INFO - connection successful
2024-03-06 18:59:48,477 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 18:59:48,478 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 19:00:17,493 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:00:17,646 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:00:17,669 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:00:18,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:00:18,056 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:00:18,075 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:13,953 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:05:14,114 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:05:14,134 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:05:14,472 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:14,497 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:14,517 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,077 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:05:31,101 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:05:31,122 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:05:31,192 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,230 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,253 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,269 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,282 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,297 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,312 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,325 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,339 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,353 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,367 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,380 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,393 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,409 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,423 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,438 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,458 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,473 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,487 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,500 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,514 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,527 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,540 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,553 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,567 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,582 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,605 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,624 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,648 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,664 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,677 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,689 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,702 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,716 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,730 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,744 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,759 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,774 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,802 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,815 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,828 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,841 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,854 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,867 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,880 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,892 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,907 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,921 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,934 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,947 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,959 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,971 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,984 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:31,997 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,009 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,025 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,039 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,064 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,078 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,091 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,105 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,118 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,130 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,143 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,156 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,168 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,181 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,193 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,206 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,218 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,232 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,244 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,257 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,282 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,295 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,320 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,333 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,346 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,359 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,371 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,384 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,397 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,411 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,424 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,437 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,450 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,463 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,488 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,501 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,514 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,527 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,540 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,553 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,567 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,595 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,608 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,621 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,635 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,648 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,662 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,675 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,688 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,700 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,726 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,738 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,751 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,763 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,776 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,788 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,814 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,826 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,839 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,852 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,865 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,881 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:05:32,902 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:05:32,902 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 19:05:32,903 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 19:05:32,903 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 19:05:34,383 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 19:05:34,383 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:05:34,401 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:05:34,415 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:05:34,428 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:05:34,440 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:05:34,452 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:05:34,452 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 19:05:34,454 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:05:34,454 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:05:34,454 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 19:05:34,454 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:05:34,454 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 19:05:34,455 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:05:34,455 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 19:05:34,455 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 19:05:34,455 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:05:34,455 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 19:05:34,455 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:05:34,455 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:05:34,455 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 19:05:34,455 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:05:34,455 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 19:05:34,456 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:05:34,456 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:05:34,456 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 19:05:34,461 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:05:34,615 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 19:05:34,616 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:05:34,617 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:05:34,617 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:05:34,617 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 19:05:34,617 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 19:05:34,618 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 19:05:34,618 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:05:34,618 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 19:05:34,618 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:05:34,618 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2239.7999999999993]
2024-03-06 19:05:34,618 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 19:05:34,623 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:05:34,624 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 19:05:34,625 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 19:11:16,433 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:16,458 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:16,477 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:16,545 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,569 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,582 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,594 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,606 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,617 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,629 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,641 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,653 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,664 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,676 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,688 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,699 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,711 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,723 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,735 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,746 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,758 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,769 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,781 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,793 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,816 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,827 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,839 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,853 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,865 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,877 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,891 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,905 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,918 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,931 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,949 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,964 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,977 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:16,991 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,004 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,017 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,031 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,044 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,061 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,074 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,087 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,099 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,111 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,136 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,149 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,162 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,174 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,187 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,201 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,213 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,224 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,236 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,247 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,258 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,282 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,293 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,305 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,316 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,328 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,340 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,353 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,364 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,376 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,387 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,410 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,421 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,433 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,445 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,456 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,467 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,479 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,490 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,501 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,513 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,525 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,537 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,549 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,561 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,574 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,586 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,598 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,609 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,621 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,633 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,645 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,656 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,668 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,679 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,690 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,702 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,714 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,726 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,738 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,750 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,762 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,777 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,789 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,815 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,827 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,839 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,852 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,866 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,878 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,890 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,902 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,915 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,927 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,938 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,950 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,962 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,974 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,985 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:17,997 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:18,008 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:18,020 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:18,032 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:18,049 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:18,049 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 19:11:18,049 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 19:11:18,050 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 19:11:19,556 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 19:11:19,556 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:19,583 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:19,605 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:19,625 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:19,644 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:19,663 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:11:19,663 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 19:11:19,664 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:11:19,664 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:11:19,664 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 19:11:19,665 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:11:19,665 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 19:11:19,665 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:11:19,665 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:11:19,665 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 19:11:19,665 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:11:19,665 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 19:11:19,665 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:11:19,665 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:11:19,665 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 19:11:19,666 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:11:19,666 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 19:11:19,666 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:11:19,666 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:11:19,666 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 19:11:19,672 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:19,822 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,823 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13382>btree_item_i_item_sk"']
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,824 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:19,824 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:11:19,824 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 19:11:19,824 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:11:19,824 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 19:11:19,824 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:11:19,824 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 19:11:19,824 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:11:19,824 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625] benefit: 2057.66]
2024-03-06 19:11:19,824 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 19:11:19,831 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:19,831 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 19:11:19,831 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 19:11:23,848 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:23,868 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:23,888 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:23,944 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:23,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:23,979 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:23,992 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,004 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,017 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,030 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,042 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,055 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,069 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,085 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,110 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,137 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,151 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,164 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,177 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,190 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,203 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,215 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,227 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,239 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,252 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,264 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,276 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,289 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,301 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,313 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,325 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,336 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,348 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,361 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,374 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,386 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,412 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,423 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,435 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,446 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,458 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,469 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,481 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,492 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,507 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,519 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,532 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,544 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,555 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,567 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,579 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,590 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,602 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,613 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,625 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,637 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,648 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,660 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,672 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,684 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,697 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,710 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,722 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,734 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,747 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,759 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,772 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,784 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,796 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,809 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,821 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,834 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,846 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,859 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,871 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,884 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,896 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,909 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,922 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,936 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,949 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,962 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,974 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,986 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:24,998 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,010 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,022 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,034 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,045 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,057 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,069 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,081 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,093 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,105 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,116 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,128 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,139 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,150 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,161 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,172 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,184 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,195 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,207 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,218 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,229 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,241 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,252 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,263 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,274 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,285 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,296 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,319 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,330 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,341 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,353 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,364 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,376 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,387 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,401 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,413 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,425 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:11:25,443 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:25,443 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 19:11:25,443 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 19:11:25,443 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 19:11:25,886 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 19:11:25,886 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:25,906 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:25,920 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:25,934 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:25,947 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:11:25,960 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:11:25,960 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 19:11:25,961 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:11:25,961 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:11:25,961 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 19:11:25,961 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:11:25,961 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 19:11:25,961 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:11:25,961 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:11:25,961 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 19:11:25,962 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:11:25,962 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 19:11:25,962 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:11:25,962 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:11:25,962 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 19:11:25,962 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:11:25,962 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 19:11:25,962 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:11:25,962 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:11:25,962 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 19:11:25,969 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:26,018 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 19:11:26,018 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:11:26,018 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:11:26,018 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,018 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,018 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13384>btree_date_dim_d_date_sk"', 'store_pkey', '"<13385>btree_item_i_item_sk"']
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:11:26,019 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:11:26,019 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:11:26,019 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 19:11:26,019 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:11:26,020 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 19:11:26,020 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:11:26,020 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 19:11:26,020 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:11:26,020 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 2057.66]
2024-03-06 19:11:26,020 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 19:11:26,027 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:11:26,027 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 19:11:26,027 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 19:12:11,835 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:12:11,858 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:12:11,879 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:12:11,945 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:11,966 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:11,979 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:11,991 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,004 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,016 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,028 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,041 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,064 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,076 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,087 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,099 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,110 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,122 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,134 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,146 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,157 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,168 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,180 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,191 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,203 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,215 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,226 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,238 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,250 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,261 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,273 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,286 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,299 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,311 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,324 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,338 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,350 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,362 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,374 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,387 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,411 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,423 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,435 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,448 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,459 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,471 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,483 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,495 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,507 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,518 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,530 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,542 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,554 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,565 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,576 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,587 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,599 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,610 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,622 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,633 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,646 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,657 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,669 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,680 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,692 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,703 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,715 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,726 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,737 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,749 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,761 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,772 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,784 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,795 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,806 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,818 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,830 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,841 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,853 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,864 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,876 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,887 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,910 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,921 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,933 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,945 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,957 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,981 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:12,994 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,007 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,022 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,035 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,048 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,062 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,076 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,088 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,101 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,113 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,125 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,138 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,151 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,164 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,178 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,190 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,203 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,229 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,241 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,253 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,264 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,276 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,287 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,298 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,309 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,320 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,344 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,355 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,367 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,378 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,390 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,401 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:12:13,418 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:12:13,418 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 19:12:13,418 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 19:12:13,418 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 19:12:14,907 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 19:12:14,908 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:12:14,934 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:12:14,956 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:12:14,976 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:12:14,995 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:12:15,014 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:12:15,014 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 19:12:15,015 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:12:15,015 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:12:15,015 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 19:12:15,015 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:12:15,015 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 19:12:15,016 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:12:15,016 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:12:15,016 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 19:12:15,016 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:12:15,016 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 19:12:15,016 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:12:15,016 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:12:15,016 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 19:12:15,016 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:12:15,016 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 19:12:15,016 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:12:15,016 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:12:15,017 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 19:12:15,022 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:12:15,176 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:12:15,177 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:12:15,178 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:12:15,178 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 19:12:15,178 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:12:15,178 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 19:12:15,179 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:12:15,179 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 19:12:15,179 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:12:15,179 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 19:12:15,179 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 19:12:15,185 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:12:15,185 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 19:12:15,186 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 19:13:31,403 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:31,560 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:31,583 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:31,911 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:31,945 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:31,961 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:31,976 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:31,990 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,006 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,023 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,039 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,070 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,084 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,099 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,113 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,127 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,140 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,155 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,171 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,197 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,213 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,228 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,243 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,259 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,273 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,286 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,300 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,314 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,328 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,341 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,354 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,367 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,380 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,393 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,406 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,421 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,437 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,452 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,467 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,481 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,494 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,507 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,519 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,533 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,547 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,560 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,574 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,588 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,602 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,618 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,634 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,648 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,662 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,679 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,693 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,707 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,722 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,736 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,751 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,764 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,778 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,791 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,804 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,817 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,830 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,844 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,858 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,871 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,885 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,898 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,912 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,928 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,955 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,969 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,982 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:32,995 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,008 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,022 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,036 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,051 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,065 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,079 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,093 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,107 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,121 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,135 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,149 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,164 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,190 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,215 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,241 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,266 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,349 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,362 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,374 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,387 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,400 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,413 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,427 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,440 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,453 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,466 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,478 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,491 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,504 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,519 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,533 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,547 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,561 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,574 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,588 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,603 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,616 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,632 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,645 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,660 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,675 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,689 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,701 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,715 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:33,734 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:33,734 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 19:13:33,735 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 19:13:33,735 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 19:13:36,020 - root - MCTS - INFO - mcts 100 >= 112.0234375
2024-03-06 19:13:36,021 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:13:36,191 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:13:36,334 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:13:36,468 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:13:36,595 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :223.16758490829204
2024-03-06 19:13:36,719 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:13:36,720 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 19:13:36,723 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:13:36,723 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:13:36,724 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 19:13:36,725 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:13:36,725 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 19:13:36,725 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:13:36,726 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:13:36,726 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 19:13:36,727 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:13:36,728 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9791.02
2024-03-06 19:13:36,728 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:13:36,728 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:13:36,728 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625 has benefit of 88.3799999999992
2024-03-06 19:13:36,728 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:13:36,728 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 19:13:36,729 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: store_sales columns: ss_customer_sk index_type:  storage: 71.765625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:13:36,729 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:13:36,729 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 19:13:36,735 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:36,960 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 19:13:36,963 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:13:36,964 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:13:36,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,965 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 19:13:36,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:13:36,966 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:13:36,966 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 19:13:36,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:13:36,967 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:13:36,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,967 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13384>btree_catalog_sales_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 19:13:36,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:13:36,968 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:13:36,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:36,968 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:13:36,968 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 19:13:36,969 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:13:36,969 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 19:13:36,970 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625
2024-03-06 19:13:36,970 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 19:13:36,970 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:13:36,970 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: catalog_sales columns: cs_bill_customer_sk index_type:  storage: 35.9140625, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2057.66]
2024-03-06 19:13:36,970 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 19:13:36,977 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:36,977 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 19:13:36,978 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 19:13:55,226 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:55,250 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:55,270 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:55,337 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,360 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,381 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,399 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,412 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,426 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,441 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,454 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,467 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,480 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,494 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,510 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,523 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,537 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,550 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,562 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,576 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,590 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,604 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,617 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,630 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,644 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,657 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,671 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,686 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,700 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,713 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,727 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,741 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,754 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,767 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,780 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,793 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,806 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,818 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,831 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,843 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,857 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,869 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,881 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,893 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,905 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,917 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,928 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,940 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,952 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,964 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,976 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:55,988 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,000 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,011 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,023 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,035 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,046 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,058 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,069 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,081 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,093 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,104 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,116 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,127 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,139 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,153 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,173 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,187 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,200 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,214 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,227 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,240 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,253 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,266 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,279 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,292 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,305 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,320 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,334 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,348 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,365 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,381 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,395 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,409 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,424 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,437 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,451 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,464 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,476 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,489 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,502 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,514 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,527 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,541 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,555 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,568 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,593 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,605 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,618 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,630 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,642 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,654 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,666 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,683 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,697 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,710 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,723 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,736 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,749 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,762 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,775 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,788 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,815 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,828 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,841 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,854 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,867 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,881 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,895 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,909 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,922 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,937 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,950 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,962 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:13:56,983 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:56,983 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 19:13:56,983 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 19:13:56,983 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 19:13:58,473 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 19:13:58,473 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:13:58,493 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:13:58,508 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:13:58,522 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:13:58,535 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:13:58,547 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:13:58,547 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 19:13:58,548 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:13:58,548 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:13:58,548 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 19:13:58,549 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:13:58,549 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 19:13:58,549 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:13:58,549 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 19:13:58,549 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 19:13:58,550 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:13:58,550 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 19:13:58,550 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:13:58,550 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:13:58,550 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 19:13:58,550 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:13:58,550 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 19:13:58,550 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:13:58,550 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:13:58,550 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 19:13:58,556 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:58,711 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 19:13:58,711 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:13:58,712 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:13:58,713 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_quarter_name"', '"<13383>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13385>btree_date_dim_d_date_sk"', 'store_pkey', '"<13384>btree_item_i_item_sk"']
2024-03-06 19:13:58,713 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,713 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,713 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,713 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:13:58,713 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:13:58,713 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,713 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:13:58,713 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:13:58,713 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 19:13:58,713 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 19:13:58,713 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 19:13:58,713 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:13:58,713 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 19:13:58,713 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:13:58,713 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125] benefit: 2239.7999999999993]
2024-03-06 19:13:58,713 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 19:13:58,721 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:13:58,721 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 19:13:58,721 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-03-06 19:14:19,821 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:14:19,844 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:14:19,864 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:14:19,917 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:19,939 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:19,953 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:19,972 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:19,985 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:19,997 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,010 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,022 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,034 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,046 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,059 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,072 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,084 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,097 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,110 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,123 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,137 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,151 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,164 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,177 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,190 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,203 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,229 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,256 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,269 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,294 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,319 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,344 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,356 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,369 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,381 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,393 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,406 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,418 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,430 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,443 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,455 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,467 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,480 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,492 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,504 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,517 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,530 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,542 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,554 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,567 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,579 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,591 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,603 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,616 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,628 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,641 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,654 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,666 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,679 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,691 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,704 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,716 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,729 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,742 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,754 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,767 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,780 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,793 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,805 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,818 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,830 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,843 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,856 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,869 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,883 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,897 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,911 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,925 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,938 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,951 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,965 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,978 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:20,991 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,011 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,031 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,045 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,059 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,072 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,085 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,098 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,111 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,124 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,137 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,150 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,163 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,176 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,190 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,203 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,216 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,229 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,242 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,255 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,268 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,281 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,293 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,307 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,319 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,332 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,345 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,358 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,371 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,383 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,396 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,409 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,422 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,436 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,452 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,466 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,481 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,495 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,508 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,522 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-03-06 19:14:21,541 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:14:21,541 - root - index_advisor_workload - INFO - Mcts started
2024-03-06 19:14:21,541 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 0, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-03-06 19:14:21,542 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0,), (table: date_dim columns: d_date_sk index_type:  storage: 0,), (table: date_dim columns: d_quarter_name index_type:  storage: 0,), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 0, table: date_dim columns: d_date_sk index_type:  storage: 0, table: date_dim columns: d_quarter_name index_type:  storage: 0), (table: item columns: i_item_sk index_type:  storage: 0,), (table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 0,)],len==10
2024-03-06 19:14:22,012 - root - MCTS - INFO - mcts 100 >= 176.6328125
2024-03-06 19:14:22,012 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:14:22,026 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:14:22,035 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:14:22,044 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:14:22,051 - root - monte_carlo_tree_search - INFO - ite_times monte_carlo_tree_search computation_budget :141.536556238666
2024-03-06 19:14:22,059 - root - is_positive_query - INFO - index ：table: date_dim columns: d_date_sk index_type:  storage: 1.8125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:14:22,059 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9878.9
2024-03-06 19:14:22,060 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:14:22,060 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:14:22,060 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_date_sk index_type:  storage: 1.8125 has benefit of 0.5
2024-03-06 19:14:22,060 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:14:22,060 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9879.15
2024-03-06 19:14:22,060 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:14:22,060 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:14:22,060 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 0.25
2024-03-06 19:14:22,061 - root - is_positive_query - INFO - index ：table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:14:22,061 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :7910.87
2024-03-06 19:14:22,061 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:14:22,061 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:14:22,061 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375 has benefit of 1968.5299999999997
2024-03-06 19:14:22,061 - root - is_positive_query - INFO - index ：table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875，query :statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-03-06 19:14:22,061 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：9879.4，self.get_indexes_cost_of_query(query, tuple([index])) :9608.89
2024-03-06 19:14:22,061 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875, table: store_sales columns: ss_item_sk, ss_customer_sk index_type:  storage: 114.8203125, table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-03-06 19:14:22,061 - root - filter_low_benefit_index - INFO - filter low benefit index for table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 19:14:22,061 - root - filter_low_benefit_index - INFO - table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875 has benefit of 270.5100000000002
2024-03-06 19:14:22,069 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:14:22,117 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13384>btree_date_dim_d_quarter_name"', '"<13385>btree_catalog_sales_cs_item_sk_cs_bill_customer_sk"', 'store_sales_pkey', '"<13382>btree_date_dim_d_date_sk"', 'store_pkey', '"<13383>btree_item_i_item_sk"']
2024-03-06 19:14:22,118 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,119 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-03-06 19:14:22,119 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 19:14:22,119 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,119 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,119 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,119 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-03-06 19:14:22,119 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_date_sk index_type:  storage: 1.8125
2024-03-06 19:14:22,119 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875] benefit: 2239.7999999999993]
2024-03-06 19:14:22,119 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-03-06 19:14:22,119 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875] benefit: 2239.7999999999993]
2024-03-06 19:14:22,119 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375
2024-03-06 19:14:22,119 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875] benefit: 2239.7999999999993]
2024-03-06 19:14:22,119 - root - filter_no_benefit_indexes - INFO - index : table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875
2024-03-06 19:14:22,119 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select i_item_id
 ,i_item_desc
 ,s_state
 ,count(ss_quantity) as store_sales_quantitycount
 ,avg(ss_quantity) as store_sales_quantityave
 ,stddev_samp(ss_quantity) as store_sales_quantitystdev
 ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
 ,count(sr_return_quantity) as store_returns_quantitycount
 ,avg(sr_return_quantity) as store_returns_quantityave
 ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
 ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
 ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
 ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
 ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where d1.d_quarter_name = '1998Q1'
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_quarter_name in ('1998Q1','1998Q2','1998Q3')
 group by i_item_id
 ,i_item_desc
 ,s_state
 order by i_item_id
 ,i_item_desc
 ,s_state
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_date_sk index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_quarter_name index_type:  storage: 2.0859375, table: catalog_sales columns: cs_item_sk, cs_bill_customer_sk index_type:  storage: 57.46875] benefit: 2239.7999999999993]
2024-03-06 19:14:22,119 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-03-06 19:14:22,127 - root - __init_conn_handle - INFO - connection successful
2024-03-06 19:14:22,127 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-03-06 19:14:22,128 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
