2024-02-26 18:33:00,640 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:33:00,740 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:33:00,764 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:33:00,764 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:33:00,776 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:33:00,882 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 18:33:00,882 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 18:33:00,910 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 18:33:00,935 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:33:00,935 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 18:33:00,939 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 18:33:00,939 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 18:33:00,939 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 18:33:00,939 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 18:33:00,939 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 18:33:00,939 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:33:00,939 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 18:33:00,939 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:33:00,942 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:33:00,964 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:33:00,964 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,964 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 18:33:00,964 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,964 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 18:33:00,964 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,964 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 18:33:00,964 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:00,965 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:33:00,965 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:33:00,965 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:00,966 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:33:00,966 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:33:00,966 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 18:33:00,966 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,966 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:33:00,966 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:33:00,967 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:33:00,967 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:33:00,983 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:33:00,996 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:33:00,996 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,996 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:33:00,996 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,996 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:00,997 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:33:00,997 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:33:00,997 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:00,998 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:33:00,998 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:33:00,998 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:33:00,998 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:00,998 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:33:00,998 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:33:00,998 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:33:00,998 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:33:01,015 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:33:01,023 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:01,024 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:01,024 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:33:01,024 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:33:01,025 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:33:01,025 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:33:01,025 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:33:01,025 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:33:01,025 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:33:01,025 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:33:01,026 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 18:33:01,039 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:33:01,057 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:33:01,805 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:33:01,805 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 18:33:01,806 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:33:01,806 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:33:01,806 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 18:33:01,807 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:33:01,807 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 18:33:01,807 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:33:01,807 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 18:33:01,807 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 18:33:01,819 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:33:02,013 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 18:33:02,013 - root - match_index_name - INFO - match_index_name schema :date_dim
2024-02-26 18:33:02,013 - root - match_index_name - INFO - match_index_name schema :date_dim
2024-02-26 18:33:02,013 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 18:33:02,013 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:33:02,013 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 18:33:02,013 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:33:02,013 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 18:33:02,013 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 18:33:02,013 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 18:33:02,019 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:40:47,836 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:40:47,924 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:40:47,954 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:40:47,954 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:40:47,963 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:40:48,120 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 18:40:48,121 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 18:40:48,148 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 18:40:48,171 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:40:48,171 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 18:40:48,171 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 18:40:48,171 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 18:40:48,171 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 18:40:48,171 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 18:40:48,171 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 18:40:48,171 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:40:48,172 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 18:40:48,172 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:40:48,174 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:40:48,195 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:40:48,195 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,196 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:40:48,196 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:40:48,196 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,197 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:40:48,197 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:40:48,197 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 18:40:48,197 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,197 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:40:48,197 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:40:48,197 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:40:48,197 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:40:48,198 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:40:48,205 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:40:48,205 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,205 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:40:48,205 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,205 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:40:48,205 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:40:48,205 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:40:48,205 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,206 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:40:48,206 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:40:48,206 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,207 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:40:48,207 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:40:48,207 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:40:48,207 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,207 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:40:48,207 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:40:48,207 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:40:48,207 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:40:48,208 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:40:48,214 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:40:48,214 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,215 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:40:48,215 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,215 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:40:48,216 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:40:48,216 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:40:48,216 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:40:48,216 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:40:48,216 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:40:48,216 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:40:48,216 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:40:48,216 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:40:48,216 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:40:48,216 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:40:48,216 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:40:48,216 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:40:48,216 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:40:48,216 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:40:48,216 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 18:40:48,222 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:40:48,238 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:40:48,823 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:40:48,824 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 18:40:48,827 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:40:48,827 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:40:48,827 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 18:40:48,828 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:40:48,828 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 18:40:48,828 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:40:48,828 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 18:40:48,828 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 18:40:48,836 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:40:49,035 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 18:40:49,035 - root - match_index_name - INFO - match_index_name schema :date_dim
2024-02-26 18:40:49,035 - root - match_index_name - INFO - match_index_name schema :date_dim
2024-02-26 18:40:49,035 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 18:40:49,035 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:40:49,035 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 18:40:49,035 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:40:49,035 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 18:40:49,035 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 18:40:49,035 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 18:40:49,041 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:41:33,137 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:41:33,213 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:41:33,243 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:41:33,244 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:41:33,254 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:41:33,353 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 18:41:33,363 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 18:41:33,376 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 18:41:33,388 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:41:33,388 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 18:41:33,388 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 18:41:33,388 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 18:41:33,388 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 18:41:33,388 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 18:41:33,388 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 18:41:33,388 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:41:33,388 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 18:41:33,388 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:41:33,402 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:41:33,423 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:41:33,424 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,425 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:41:33,425 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:41:33,425 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:41:33,435 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,436 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:41:33,436 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:41:33,436 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 18:41:33,436 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,436 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:41:33,436 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:41:33,436 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:41:33,436 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:41:33,450 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:41:33,456 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,457 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:41:33,457 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:41:33,457 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,458 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:41:33,458 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:41:33,458 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:41:33,458 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,458 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:41:33,458 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:41:33,459 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:41:33,459 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:41:33,477 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:41:33,483 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:41:33,483 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,483 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,484 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:41:33,484 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:41:33,484 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:41:33,485 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:41:33,485 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:41:33,485 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:41:33,485 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:41:33,485 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:41:33,485 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:41:33,485 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 18:41:33,500 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:41:33,512 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:41:34,167 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:41:34,167 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 18:41:34,171 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:41:34,171 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:41:34,171 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 18:41:34,171 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:41:34,171 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 18:41:34,171 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:41:34,171 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 18:41:34,172 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 18:41:34,178 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:41:34,388 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 18:41:34,388 - root - match_index_name - INFO - match_index_name schema :date_dim
2024-02-26 18:41:34,388 - root - match_index_name - INFO - match_index_name schema :date_dim
2024-02-26 18:41:34,388 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 18:41:34,388 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:41:34,388 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 18:41:34,388 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:41:34,388 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 18:41:34,388 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 18:41:34,388 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 18:41:34,397 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:44:53,164 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:44:53,257 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:44:53,279 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:44:53,280 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:44:53,311 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:44:53,469 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 18:44:53,469 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 18:44:53,484 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 18:44:53,495 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:44:53,496 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 18:44:53,496 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 18:44:53,496 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 18:44:53,496 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 18:44:53,496 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 18:44:53,496 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 18:44:53,496 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:44:53,496 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 18:44:53,496 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:44:53,510 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:44:53,534 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:44:53,535 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,536 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:44:53,536 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:44:53,536 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,537 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:44:53,537 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:44:53,537 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 18:44:53,537 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,537 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:44:53,537 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:44:53,537 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:44:53,537 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:44:53,557 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:44:53,564 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:44:53,564 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,565 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:44:53,565 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:44:53,565 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,566 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:44:53,566 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:44:53,566 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:44:53,566 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,566 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:44:53,566 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:44:53,566 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:44:53,566 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:44:53,581 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:44:53,587 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:44:53,587 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,587 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:44:53,587 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,587 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:44:53,587 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:44:53,587 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:44:53,587 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:44:53,587 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:44:53,587 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,588 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:44:53,588 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:44:53,588 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:44:53,589 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:44:53,589 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:44:53,589 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:44:53,589 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:44:53,589 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:44:53,589 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:44:53,589 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 18:44:53,610 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:44:53,636 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:44:54,359 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:44:54,359 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 18:44:54,363 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:44:54,363 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:44:54,363 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 18:44:54,363 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:44:54,363 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 18:44:54,364 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:44:54,364 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 18:44:54,364 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 18:44:54,371 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:44:54,563 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 18:44:54,563 - root - match_index_name - INFO - date_dim,d_month_seq
2024-02-26 18:44:54,563 - root - match_index_name - INFO - date_dim,d_month_seq
2024-02-26 18:44:54,563 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 18:44:54,563 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:44:54,563 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 18:44:54,563 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:44:54,563 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 18:44:54,563 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 18:44:54,563 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 18:44:54,574 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:45:33,254 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:45:33,357 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:45:33,381 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:45:33,381 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 18:45:33,390 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:45:33,543 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 18:45:33,544 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 18:45:33,568 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 18:45:33,579 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:45:33,579 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 18:45:33,579 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 18:45:33,579 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 18:45:33,579 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 18:45:33,579 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 18:45:33,580 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 18:45:33,580 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 18:45:33,580 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 18:45:33,580 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:45:33,586 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:45:33,606 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:45:33,607 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,608 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:45:33,608 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,608 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,608 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 18:45:33,609 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:45:33,609 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:45:33,609 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:45:33,609 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:45:33,609 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 18:45:33,609 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:45:33,609 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:45:33,609 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:45:33,609 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:45:33,609 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:45:33,609 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,609 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:45:33,609 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:45:33,609 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:45:33,609 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:45:33,610 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:45:33,616 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,617 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:45:33,617 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:45:33,617 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,618 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:45:33,618 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:45:33,618 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:45:33,618 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,618 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:45:33,618 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:45:33,619 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:45:33,619 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 18:45:33,619 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 18:45:33,625 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:45:33,625 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,626 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:45:33,626 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,626 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 18:45:33,627 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 18:45:33,627 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 18:45:33,627 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 18:45:33,627 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:45:33,627 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 18:45:33,627 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 18:45:33,627 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 18:45:33,627 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 18:45:33,627 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 18:45:33,627 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 18:45:33,627 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 18:45:33,627 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 18:45:33,627 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 18:45:33,627 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:45:33,627 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 18:45:33,634 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 18:45:33,643 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:45:34,190 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:45:34,191 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 18:45:34,194 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:45:34,194 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:45:34,194 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 18:45:34,195 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 18:45:34,195 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 18:45:34,195 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 18:45:34,195 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 18:45:34,195 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 18:45:34,200 - root - __init_conn_handle - INFO - connection successful
2024-02-26 18:45:34,380 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 18:45:34,381 - root - match_index_name - INFO - date_dim,d_month_seq
2024-02-26 18:45:34,381 - root - match_index_name - INFO - date_dim,d_month_seq
2024-02-26 18:45:34,381 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 18:45:34,381 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:45:34,381 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 18:45:34,381 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 18:45:34,381 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 18:45:34,381 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 18:45:34,381 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 18:45:34,391 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:15:35,314 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:15:35,398 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:15:35,422 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:15:35,423 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:15:35,442 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:15:35,607 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 19:15:35,607 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 19:15:35,620 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 19:15:35,634 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:15:35,635 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 19:15:35,635 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 19:15:35,635 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 19:15:35,635 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 19:15:35,635 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 19:15:35,635 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 19:15:35,635 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:15:35,635 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 19:15:35,635 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:15:35,638 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:15:35,663 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:15:35,664 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,665 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:15:35,665 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:15:35,665 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,666 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:15:35,666 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:15:35,666 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 19:15:35,666 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,666 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:15:35,666 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:15:35,666 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:15:35,666 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:15:35,682 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:15:35,691 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,692 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:15:35,692 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:15:35,692 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,693 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:15:35,693 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:15:35,693 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:15:35,693 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,693 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:15:35,693 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:15:35,693 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:15:35,694 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:15:35,709 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:15:35,715 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:15:35,715 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,716 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:15:35,716 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:15:35,716 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:15:35,717 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:15:35,717 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:15:35,717 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:15:35,717 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:15:35,717 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:15:35,717 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:15:35,717 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 19:15:35,738 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:15:35,762 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:15:36,489 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:15:36,489 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 19:15:36,493 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:15:36,493 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:15:36,493 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 19:15:36,494 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:15:36,494 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 19:15:36,494 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:15:36,494 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 19:15:36,494 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 19:15:36,500 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:15:36,713 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 19:15:36,713 - root - get_schema - INFO - get_schema : date_dim
2024-02-26 19:15:36,713 - root - match_index_name - INFO - date_dim,d_month_seq
2024-02-26 19:15:36,713 - root - get_schema - INFO - get_schema : date_dim
2024-02-26 19:15:36,713 - root - match_index_name - INFO - date_dim,d_month_seq
2024-02-26 19:15:36,713 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 19:15:36,713 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:15:36,713 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 19:15:36,713 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:15:36,713 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 19:15:36,713 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 19:15:36,713 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 19:15:36,719 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:20:31,172 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:20:31,272 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:20:31,301 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:20:31,301 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:20:31,319 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:20:31,456 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 19:20:31,456 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 19:20:31,479 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 19:20:31,493 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:20:31,493 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 19:20:31,494 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 19:20:31,494 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 19:20:31,494 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 19:20:31,494 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 19:20:31,494 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 19:20:31,494 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:20:31,494 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 19:20:31,494 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:20:31,502 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:20:31,522 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:20:31,523 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,524 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:20:31,524 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,524 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,524 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:20:31,525 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:20:31,525 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:20:31,525 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:20:31,525 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:20:31,525 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 19:20:31,525 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:20:31,525 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:20:31,525 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:20:31,525 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:20:31,525 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:20:31,525 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,525 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:20:31,525 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:20:31,525 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:20:31,525 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:20:31,543 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:20:31,549 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:20:31,549 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,549 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:20:31,549 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,549 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:20:31,549 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:20:31,549 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:20:31,549 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:20:31,549 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,550 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:20:31,550 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:20:31,550 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,551 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:20:31,551 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:20:31,551 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:20:31,551 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,551 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:20:31,551 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:20:31,551 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:20:31,551 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:20:31,566 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:20:31,572 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:20:31,572 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,573 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:20:31,573 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,573 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:20:31,573 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:20:31,574 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:20:31,574 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:20:31,574 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:20:31,574 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:20:31,574 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:20:31,574 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:20:31,574 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:20:31,574 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:20:31,574 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:20:31,574 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:20:31,574 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:20:31,574 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:20:31,574 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:20:31,574 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 19:20:31,595 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:20:31,609 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:20:32,298 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:20:32,298 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 19:20:32,302 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:20:32,302 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:20:32,302 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 19:20:32,302 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:20:32,303 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 19:20:32,303 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:20:32,303 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 19:20:32,303 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 19:20:32,308 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:20:32,504 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 19:20:32,505 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 19:20:32,506 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:20:32,506 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 19:20:32,506 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:20:32,506 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 19:20:32,506 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 19:20:32,506 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 19:20:32,511 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:25:50,773 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:25:50,855 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:25:50,878 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:25:50,878 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:25:50,887 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:25:51,017 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 19:25:51,018 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 19:25:51,059 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 19:25:51,069 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:25:51,070 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 19:25:51,070 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 19:25:51,070 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 19:25:51,070 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 19:25:51,070 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 19:25:51,070 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 19:25:51,070 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:25:51,070 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 19:25:51,070 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:25:51,075 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:25:51,095 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:25:51,096 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,097 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:25:51,097 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:25:51,097 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,098 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:25:51,098 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:25:51,098 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 19:25:51,098 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,098 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:25:51,098 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:25:51,098 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:25:51,098 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:25:51,099 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:25:51,105 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:25:51,105 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,106 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:25:51,106 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:25:51,106 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,107 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:25:51,107 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:25:51,107 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:25:51,107 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,107 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:25:51,107 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:25:51,107 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:25:51,107 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:25:51,108 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:25:51,114 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,114 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,115 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:25:51,115 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:25:51,115 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:25:51,115 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:25:51,115 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:25:51,115 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:25:51,115 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:25:51,116 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:25:51,116 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:25:51,116 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:25:51,116 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:25:51,116 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:25:51,116 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:25:51,116 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 19:25:51,120 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:25:51,131 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:25:51,645 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:25:51,645 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 19:25:51,649 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:25:51,649 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:25:51,649 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 19:25:51,650 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:25:51,650 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 19:25:51,650 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:25:51,650 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 19:25:51,650 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 19:25:51,658 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:25:51,839 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 19:25:51,840 - root - match_index_name - INFO - btree_date_dim_d_month_seq
2024-02-26 19:25:51,840 - root - match_index_name - INFO - btree_date_dim_d_month_seq
2024-02-26 19:25:51,840 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 19:25:51,840 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:25:51,840 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 19:25:51,840 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:25:51,840 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 19:25:51,840 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 19:25:51,840 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 19:25:51,849 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:26:31,751 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:26:31,831 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:26:31,854 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:26:31,855 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:26:31,871 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:26:31,990 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 19:26:31,990 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 19:26:32,011 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 19:26:32,026 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:26:32,026 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 19:26:32,026 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 19:26:32,026 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 19:26:32,026 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 19:26:32,026 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 19:26:32,026 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 19:26:32,026 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:26:32,027 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 19:26:32,027 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:26:32,029 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:26:32,049 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:26:32,050 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,051 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:26:32,051 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:26:32,051 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,052 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:26:32,052 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:26:32,052 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 19:26:32,052 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,052 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:26:32,052 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:26:32,052 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:26:32,052 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:26:32,053 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:26:32,061 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:26:32,061 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,061 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:26:32,061 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,061 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:26:32,061 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:26:32,061 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:26:32,061 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:26:32,061 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:26:32,061 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,062 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:26:32,062 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:26:32,062 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,063 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:26:32,063 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:26:32,063 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:26:32,063 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,063 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:26:32,063 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:26:32,063 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:26:32,063 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:26:32,064 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:26:32,069 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,070 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:26:32,070 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:26:32,070 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:26:32,071 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:26:32,071 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:26:32,071 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:26:32,071 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:26:32,071 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:26:32,071 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:26:32,071 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 19:26:32,073 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:26:32,079 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:26:32,722 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:26:32,722 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 19:26:32,726 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:26:32,726 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:26:32,726 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 19:26:32,726 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:26:32,727 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 19:26:32,727 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:26:32,727 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 19:26:32,727 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 19:26:32,737 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:26:32,909 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 19:26:32,909 - root - match_index_name - INFO - btree_date_dim_d_month_seq
2024-02-26 19:26:32,909 - root - match_index_name - INFO - btree_date_dim_d_month_seq
2024-02-26 19:26:32,909 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 19:26:32,909 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:26:32,909 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 19:26:32,909 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:26:32,909 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 19:26:32,909 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 19:26:32,909 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 19:26:32,915 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:29:25,971 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:29:26,065 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:29:26,091 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:29:26,091 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:29:26,109 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:29:26,263 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 19:29:26,263 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 19:29:26,285 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 19:29:26,304 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:29:26,304 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 19:29:26,304 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 19:29:26,304 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 19:29:26,304 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 19:29:26,304 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 19:29:26,304 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 19:29:26,304 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:29:26,304 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 19:29:26,304 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:29:26,314 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:29:26,337 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:29:26,337 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,338 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:29:26,338 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:29:26,338 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,339 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:29:26,339 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:29:26,339 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 19:29:26,339 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,339 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:29:26,339 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:29:26,339 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:29:26,339 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:29:26,340 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:29:26,348 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:29:26,348 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,349 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:29:26,349 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,349 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,349 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:29:26,350 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:29:26,350 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:29:26,350 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:29:26,350 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:29:26,350 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:29:26,350 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:29:26,350 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:29:26,350 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:29:26,350 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:29:26,350 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:29:26,350 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,350 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:29:26,350 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:29:26,350 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:29:26,350 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:29:26,351 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:29:26,357 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:29:26,358 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,359 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:29:26,359 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,359 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:29:26,360 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:29:26,360 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:29:26,360 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:29:26,360 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:29:26,360 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:29:26,360 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:29:26,360 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:29:26,360 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:29:26,360 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:29:26,360 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:29:26,360 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:29:26,360 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:29:26,360 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:29:26,360 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:29:26,360 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 19:29:26,369 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:29:26,382 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:29:27,083 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:29:27,083 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 19:29:27,087 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:29:27,088 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:29:27,088 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 19:29:27,088 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:29:27,088 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 19:29:27,088 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:29:27,088 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 19:29:27,088 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 19:29:27,096 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:29:27,300 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 19:29:27,300 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:29:27,300 - root - match_index_name - INFO - index_name :"<13382>btree_date_dim_d_month_seq"
2024-02-26 19:29:27,300 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:29:27,300 - root - match_index_name - INFO - index_name :item_pkey
2024-02-26 19:29:27,300 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 19:29:27,300 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:29:27,300 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 19:29:27,300 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:29:27,300 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 19:29:27,300 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 19:29:27,300 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 19:29:27,308 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:33:02,742 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:33:02,783 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:33:02,807 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:33:02,807 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:33:02,817 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:33:02,958 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 19:33:02,958 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 19:33:02,968 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 19:33:02,985 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:33:02,986 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 19:33:02,986 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 19:33:02,986 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 19:33:02,986 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 19:33:02,986 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 19:33:02,986 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 19:33:02,986 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:33:02,986 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 19:33:02,986 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:33:02,988 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:33:03,010 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:33:03,010 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,011 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:33:03,011 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:33:03,011 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,012 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:33:03,012 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:33:03,012 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 19:33:03,012 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,012 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:33:03,012 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:33:03,012 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:33:03,012 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:33:03,022 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:33:03,028 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:33:03,028 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,028 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:33:03,028 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,028 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:33:03,028 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:33:03,028 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:33:03,028 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,029 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:33:03,029 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:33:03,029 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,030 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:33:03,030 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:33:03,030 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:33:03,030 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,030 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:33:03,030 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:33:03,030 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:33:03,030 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:33:03,040 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:33:03,046 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:33:03,046 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,047 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:33:03,047 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:33:03,047 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:33:03,047 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:33:03,047 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:33:03,047 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:33:03,047 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:33:03,048 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:33:03,048 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:33:03,048 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:33:03,048 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:33:03,048 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:33:03,048 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 19:33:03,057 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:33:03,069 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:33:03,691 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:33:03,691 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 19:33:03,695 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:33:03,695 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:33:03,695 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 19:33:03,695 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:33:03,695 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 19:33:03,695 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:33:03,695 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 19:33:03,695 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 19:33:03,704 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:33:03,951 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 19:33:03,952 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:33:03,952 - root - match_index_name - INFO - index_name :"<13382>btree_date_dim_d_month_seq"
2024-02-26 19:33:03,952 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-26 19:33:03,952 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:33:03,952 - root - match_index_name - INFO - index_name :"<13382>btree_date_dim_d_month_seq"
2024-02-26 19:33:03,952 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:33:03,952 - root - match_index_name - INFO - index_name :item_pkey
2024-02-26 19:33:03,952 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-26 19:33:03,952 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:33:03,952 - root - match_index_name - INFO - index_name :item_pkey
2024-02-26 19:33:03,952 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 19:33:03,952 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:33:03,952 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[]
2024-02-26 19:33:03,952 - root - filter_no_benefit_indexes - INFO - remove no benefit index table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:33:03,952 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[]
2024-02-26 19:33:03,952 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[]
2024-02-26 19:33:03,952 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 19:33:03,964 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:37:36,399 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:37:36,478 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:37:36,502 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:37:36,502 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0]
2024-02-26 19:37:36,513 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:37:36,605 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-26 19:37:36,605 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-26 19:37:36,622 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-26 19:37:36,634 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:37:36,634 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-26 19:37:36,634 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-26 19:37:36,634 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-26 19:37:36,634 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-26 19:37:36,634 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-26 19:37:36,634 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-26 19:37:36,634 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-26 19:37:36,634 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-26 19:37:36,634 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:37:36,644 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:37:36,667 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_store_sales_ss_sold_date_sk)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_desc)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :(13384,<13384>btree_date_dim_d_month_seq)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :(13385,<13385>btree_store_sales_ss_item_sk)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :(13386,<13386>btree_item_i_item_sk)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :(13387,<13387>btree_date_dim_d_date_sk)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:37:36,668 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,669 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:37:36,669 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:37:36,669 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,670 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-26 19:37:36,670 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:37:36,670 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-26 19:37:36,670 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,670 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:37:36,670 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:37:36,670 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:37:36,670 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:37:36,687 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:37:36,693 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,694 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:37:36,694 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:37:36,694 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,695 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:37:36,695 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:37:36,695 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:37:36,695 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,695 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:37:36,695 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:37:36,696 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:37:36,696 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-26 19:37:36,707 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-26 19:37:36,717 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-26 19:37:36,717 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,717 - root - get_checked_indexes - INFO - get_checked_indexes text :(13382,<13382>btree_date_dim_d_month_seq)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :(13383,<13383>btree_item_i_item_sk)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :ERROR
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :EXPLAIN
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :Limit  (cost=140265.17..140265.42 rows=100 width=202)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :        Sort Key: store.s_store_name, item.i_item_desc
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Workers Planned: 2
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,718 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:37:36,718 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Sort Key: store.s_store_sk
2024-02-26 19:37:36,718 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      Group Key: store_sales_1.ss_store_sk
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  Workers Planned: 2
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)
2024-02-26 19:37:36,719 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-26 19:37:36,719 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes plan select index text:              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)
2024-02-26 19:37:36,719 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-26 19:37:36,719 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :                    Index Cond: (i_item_sk = store_sales.ss_item_sk)
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :JIT:
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :  Functions: 62
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :  Options: Inlining false, Optimization false, Expressions true, Deforming true
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :SELECT 1
2024-02-26 19:37:36,719 - root - get_checked_indexes - INFO - get_checked_indexes text :
2024-02-26 19:37:36,719 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:37:36,719 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-26 19:37:36,732 - root - index_advisor_workload - INFO - candidate_indexes : [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-26 19:37:36,753 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:37:37,352 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:37:37,352 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-26 19:37:37,359 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:37:37,359 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:37:37,359 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-26 19:37:37,360 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-26 19:37:37,360 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-26 19:37:37,360 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-26 19:37:37,360 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-26 19:37:37,360 - root - filter_low_benefit_index - INFO - filtered: improved_rate 0.0004526368677612025 less than 0.02
2024-02-26 19:37:37,366 - root - __init_conn_handle - INFO - connection successful
2024-02-26 19:37:37,532 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_date_dim_d_month_seq"', 'item_pkey']
2024-02-26 19:37:37,532 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:37:37,532 - root - match_index_name - INFO - index_name :<13382>btree_date_dim_d_month_seq
2024-02-26 19:37:37,532 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-26 19:37:37,532 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:37:37,532 - root - match_index_name - INFO - index_name :<13382>btree_date_dim_d_month_seq
2024-02-26 19:37:37,532 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:37:37,532 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:37:37,532 - root - match_index_name - INFO - index_name :tem_pke
2024-02-26 19:37:37,533 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-26 19:37:37,533 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-26 19:37:37,533 - root - match_index_name - INFO - index_name :tem_pke
2024-02-26 19:37:37,533 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 19:37:37,533 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-26 19:37:37,533 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125] benefit: 4045.4500000000116]
2024-02-26 19:37:37,533 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 19:37:37,533 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 1.8125]
2024-02-26 19:37:37,533 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-26 19:37:37,545 - root - __init_conn_handle - INFO - connection successful
