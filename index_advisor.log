2024-02-28 14:15:14,433 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:15:14,638 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:15:14,675 - root - __execute - INFO - error sql :prepare prepare_2 as -- select count(*) from (
-- select distinct c_last_name, c_first_name, d_date
-- from store_sales, date_dim, customer
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from catalog_sales, date_dim, customer
-- where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
-- and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from web_sales, date_dim, customer
-- where web_sales.ws_sold_date_sk = date_dim.d_date_sk
-- and web_sales.ws_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- ) hot_cust
-- limit 100;

-- select i_item_id
-- ,i_item_desc 
-- ,i_category 
-- ,i_class 
-- ,i_current_price
-- ,sum(cs_ext_sales_price) as itemrevenue 
-- ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from	catalog_sales
-- ,item 
-- ,date_dim
-- where cs_item_sk = i_item_sk 
-- and i_category in ('Children', 'Jewelry', 'Home')
-- and cs_sold_date_sk = d_date_sk
-- and d_date between cast('1998-04-22' as date) 
-- 				and (cast('1998-04-22' as date) + interval '30' day)
-- group by i_item_id
-- ,i_item_desc 
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio
-- limit 100;

-- select 
-- c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
-- from
-- (select ss_ticket_number
-- ,ss_customer_sk
-- ,store.s_city
-- ,sum(ss_coupon_amt) amt
-- ,sum(ss_net_profit) profit
-- from store_sales,date_dim,store,household_demographics
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_store_sk = store.s_store_sk 
-- and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
-- and (household_demographics.hd_dep_count = 8 or household_demographics.hd_vehicle_count > 0)
-- and date_dim.d_dow = 1
-- and date_dim.d_year in (1998,1998+1,1998+2) 
-- and store.s_number_employees between 200 and 295
-- group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
-- where ss_customer_sk = c_customer_sk
-- order by c_last_name,c_first_name,substr(s_city,1,30), profit
-- limit 100;

-- select i_item_id, 
-- avg(ss_quantity) agg1,
-- avg(ss_list_price) agg2,
-- avg(ss_coupon_amt) agg3,
-- avg(ss_sales_price) agg4 
-- from store_sales, customer_demographics, date_dim, item, promotion
-- where ss_sold_date_sk = d_date_sk and
-- ss_item_sk = i_item_sk and
-- ss_cdemo_sk = cd_demo_sk and
-- ss_promo_sk = p_promo_sk and
-- cd_gender = 'F' and 
-- cd_marital_status = 'M' and
-- cd_education_status = '4 yr Degree' and
-- (p_channel_email = 'N' or p_channel_event = 'N') and
-- d_year = 2002 
-- group by i_item_id
-- order by i_item_id
-- limit 100;
 
-- select ca_zip, ca_state, sum(ws_sales_price)
-- from web_sales, customer, customer_address, date_dim, item
-- where ws_bill_customer_sk = c_customer_sk
-- 	and c_current_addr_sk = ca_address_sk 
-- 	and ws_item_sk = i_item_sk 
-- 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
-- 	 or 
-- 	 i_item_id in (select i_item_id
-- from item
-- where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
-- )
-- 	 )
-- 	and ws_sold_date_sk = d_date_sk
-- 	and d_qoy = 1 and d_year = 2000
-- group by ca_zip, ca_state
-- order by ca_zip, ca_state
-- limit 100;
2024-02-28 14:15:14,675 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-02-28 14:15:14,679 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-02-28 14:15:14,686 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-02-28 14:15:14,686 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0, statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0]
2024-02-28 14:15:14,686 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0, statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0]
2024-02-28 14:15:14,703 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:15:14,872 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-28 14:15:14,873 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-28 14:15:14,887 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:15:14,898 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-28 14:15:14,899 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-28 14:15:14,899 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-28 14:15:14,899 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-28 14:15:14,899 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-28 14:15:14,899 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-28 14:15:14,899 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-28 14:15:14,899 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-28 14:15:14,899 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-28 14:15:14,899 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:15:14,913 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:15:14,937 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:15:14,938 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:15:14,938 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:15:14,938 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:15:14,938 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:15:14,938 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-28 14:15:14,938 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:15:14,938 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:15:14,938 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:15:14,938 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:15:14,943 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:15:14,952 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:15:14,952 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:14,952 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:15:14,952 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:14,952 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:15:14,952 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:15:14,953 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:15:14,953 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:15:14,953 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:15:14,953 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:15:14,960 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:15:14,969 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:15:14,969 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:14,969 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:15:14,970 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:14,970 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:15:14,970 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:15:14,970 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:15:14,970 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:15:14,970 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-28 14:15:15,045 - root - generate_query_placeholder_indexes - INFO - parsing query: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
;
2024-02-28 14:15:15,045 - root - generate_query_placeholder_indexes - INFO - found tables: store_sales store customer_demographics household_demographics customer_address date_dim, columns: s_store_sk ss_store_sk ss_sold_date_sk d_date_sk d_year ss_hdemo_sk hd_demo_sk cd_demo_sk ss_cdemo_sk cd_marital_status cd_education_status ss_sales_price hd_dep_count ss_addr_sk ca_address_sk ca_country ca_state ss_net_profit
2024-02-28 14:15:15,046 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:15:15,054 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='household_demographics', reltuples=7200, columns=['hd_demo_sk', 'hd_income_band_sk', 'hd_buy_potential', 'hd_dep_count', 'hd_vehicle_count'], n_distincts=[-1.0, 20.0, 6.0, 10.0, 6.0], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:15:15,060 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:15:15,060 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_net_profit index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_addr_sk index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sales_price index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.customer_address columns: ca_address_sk index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_year index_type:  storage: 0
2024-02-28 14:15:15,061 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:15:15,061 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:15:15,061 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sales_price) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_cdemo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_hdemo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_addr_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:15:15,074 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:15:15,081 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_store_sales_ss_sales_price)',), ('SELECT 1',), ('(13384,<13384>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13385,<13385>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13386,<13386>btree_store_sales_ss_cdemo_sk)',), ('SELECT 1',), ('(13387,<13387>btree_store_sales_ss_hdemo_sk)',), ('SELECT 1',), ('(13388,<13388>btree_store_sales_ss_addr_sk)',), ('SELECT 1',), ('(13389,<13389>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13390,<13390>btree_date_dim_d_date_sk)',), ('SELECT 1',), ('(13391,<13391>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13391>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13385>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13389>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - hypo_index_id :13391
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:15:15,081 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:15:15,082 - root - __add_valid_index - INFO - hypo_index_id :13389
2024-02-28 14:15:15,082 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:15:15,082 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:15:15,082 - root - query_index_check - INFO - query_index_check indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:15:15,082 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:15:15,086 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:15:15,088 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13383,<13383>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13384,<13384>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13385,<13385>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13385>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13383>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13384>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:15:15,088 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:15:15,089 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:15:15,089 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:15:15,089 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:15:15,089 - root - query_index_check - INFO - query_index_check indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:15:15,089 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:15:15,093 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:15:15,105 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13383,<13383>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13384,<13384>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13385,<13385>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13385>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13383>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13384>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:15:15,105 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:15,105 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:15:15,105 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:15,105 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:15:15,105 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:15:15,106 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:15:15,106 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:15:15,106 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:15:15,106 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:15:15,106 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:15:15,106 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:15:15,106 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:15:15,106 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:15:15,106 - root - generate_candidate_indexes - INFO - get valid indexes: [table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0] for the query statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0
2024-02-28 14:15:15,115 - root - index_advisor_workload - INFO - candidate_indexes : [table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_month_seq index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0, table: store_sales columns: ss_net_profit index_type:  storage: 0]
2024-02-28 14:15:15,142 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:15:15,142 - root - index_advisor_workload - INFO - Mcts started
2024-02-28 14:15:15,142 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-02-28 14:15:15,142 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0] benefit: 0
2024-02-28 14:15:15,142 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_month_seq index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: customer_demographics columns: cd_demo_sk index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0), (table: date_dim columns: d_year index_type:  storage: 0,), (table: store_sales columns: ss_net_profit index_type:  storage: 0,)],len==9
2024-02-28 14:15:17,271 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_net_profit index_type:  storage: 78.9375，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:15:17,272 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144376.22
2024-02-28 14:15:17,272 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:15:17,272 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-28 14:15:17,272 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_net_profit index_type:  storage: 78.9375，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:15:17,272 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :69970.02
2024-02-28 14:15:17,286 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-02-28 14:15:17,286 - root - filter_low_benefit_index - INFO - filter low benefit index for table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-02-28 14:15:17,286 - root - filter_low_benefit_index - INFO - table: store_sales columns: ss_net_profit index_type:  storage: 78.9375 has benefit of 32865.90000000002
2024-02-28 14:15:17,286 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:15:17,286 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :102835.92
2024-02-28 14:15:17,286 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-28 14:15:17,286 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-28 14:15:17,287 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-28 14:15:17,287 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:15:17,287 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :102794.7
2024-02-28 14:15:17,287 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-02-28 14:15:17,287 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-02-28 14:15:17,287 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 41.22000000003027
2024-02-28 14:15:17,287 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:15:17,287 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144376.22
2024-02-28 14:15:17,287 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:15:17,287 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :100921.08
2024-02-28 14:15:17,287 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-02-28 14:15:17,287 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-02-28 14:15:17,287 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 1914.8400000000256
2024-02-28 14:15:17,288 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:15:17,288 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-28 14:15:17,288 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-28 14:15:17,288 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-28 14:15:17,288 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 65.35000000003492
2024-02-28 14:15:17,328 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:15:17,574 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:15:17,574 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,574 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,575 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,575 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,575 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,575 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,575 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,575 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,575 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,576 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,576 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,576 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,577 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,577 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,577 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,577 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,577 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,577 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,577 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,577 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,577 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,578 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,578 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,578 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,578 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,578 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,578 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-02-28 14:15:17,578 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,578 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,579 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,579 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,579 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,579 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,579 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,579 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,579 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,579 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,579 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,580 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,580 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,580 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,580 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,580 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,580 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,580 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,580 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,580 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:15:17,580 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,581 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,581 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:15:17,581 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:15:17,581 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:15:17,581 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125]
2024-02-28 14:15:17,581 - root - filter_no_benefit_indexes - INFO - index : table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-02-28 14:15:17,581 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 34822.11]
2024-02-28 14:15:17,581 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-28 14:15:17,581 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-02-28 14:15:17,581 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-02-28 14:15:17,581 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 34822.11]
2024-02-28 14:15:17,581 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-02-28 14:15:17,581 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 34822.11]
2024-02-28 14:15:17,581 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-28 14:15:17,603 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-02-28 14:15:17,603 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125]
2024-02-28 14:15:17,603 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125]
2024-02-28 14:15:17,603 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-28 14:15:17,629 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:15:17,629 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-02-28 14:15:17,629 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-02-28 14:17:23,695 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:17:23,905 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:17:23,940 - root - __execute - INFO - error sql :prepare prepare_2 as -- select count(*) from (
-- select distinct c_last_name, c_first_name, d_date
-- from store_sales, date_dim, customer
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from catalog_sales, date_dim, customer
-- where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
-- and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from web_sales, date_dim, customer
-- where web_sales.ws_sold_date_sk = date_dim.d_date_sk
-- and web_sales.ws_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- ) hot_cust
-- limit 100;

-- select i_item_id
-- ,i_item_desc 
-- ,i_category 
-- ,i_class 
-- ,i_current_price
-- ,sum(cs_ext_sales_price) as itemrevenue 
-- ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from	catalog_sales
-- ,item 
-- ,date_dim
-- where cs_item_sk = i_item_sk 
-- and i_category in ('Children', 'Jewelry', 'Home')
-- and cs_sold_date_sk = d_date_sk
-- and d_date between cast('1998-04-22' as date) 
-- 				and (cast('1998-04-22' as date) + interval '30' day)
-- group by i_item_id
-- ,i_item_desc 
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio
-- limit 100;

-- select 
-- c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
-- from
-- (select ss_ticket_number
-- ,ss_customer_sk
-- ,store.s_city
-- ,sum(ss_coupon_amt) amt
-- ,sum(ss_net_profit) profit
-- from store_sales,date_dim,store,household_demographics
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_store_sk = store.s_store_sk 
-- and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
-- and (household_demographics.hd_dep_count = 8 or household_demographics.hd_vehicle_count > 0)
-- and date_dim.d_dow = 1
-- and date_dim.d_year in (1998,1998+1,1998+2) 
-- and store.s_number_employees between 200 and 295
-- group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
-- where ss_customer_sk = c_customer_sk
-- order by c_last_name,c_first_name,substr(s_city,1,30), profit
-- limit 100;

-- select i_item_id, 
-- avg(ss_quantity) agg1,
-- avg(ss_list_price) agg2,
-- avg(ss_coupon_amt) agg3,
-- avg(ss_sales_price) agg4 
-- from store_sales, customer_demographics, date_dim, item, promotion
-- where ss_sold_date_sk = d_date_sk and
-- ss_item_sk = i_item_sk and
-- ss_cdemo_sk = cd_demo_sk and
-- ss_promo_sk = p_promo_sk and
-- cd_gender = 'F' and 
-- cd_marital_status = 'M' and
-- cd_education_status = '4 yr Degree' and
-- (p_channel_email = 'N' or p_channel_event = 'N') and
-- d_year = 2002 
-- group by i_item_id
-- order by i_item_id
-- limit 100;
 
-- select ca_zip, ca_state, sum(ws_sales_price)
-- from web_sales, customer, customer_address, date_dim, item
-- where ws_bill_customer_sk = c_customer_sk
-- 	and c_current_addr_sk = ca_address_sk 
-- 	and ws_item_sk = i_item_sk 
-- 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
-- 	 or 
-- 	 i_item_id in (select i_item_id
-- from item
-- where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
-- )
-- 	 )
-- 	and ws_sold_date_sk = d_date_sk
-- 	and d_qoy = 1 and d_year = 2000
-- group by ca_zip, ca_state
-- order by ca_zip, ca_state
-- limit 100;
2024-02-28 14:17:23,940 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-02-28 14:17:23,941 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-02-28 14:17:23,941 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-02-28 14:17:23,941 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0, statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0]
2024-02-28 14:17:23,941 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0, statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0]
2024-02-28 14:17:23,951 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:17:24,078 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-28 14:17:24,078 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-28 14:17:24,098 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:17:24,115 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-28 14:17:24,115 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-28 14:17:24,115 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-28 14:17:24,115 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-28 14:17:24,115 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-28 14:17:24,115 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-28 14:17:24,115 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-28 14:17:24,115 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-28 14:17:24,115 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-28 14:17:24,115 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:17:24,118 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:17:24,140 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:17:24,140 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:17:24,140 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:17:24,140 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:17:24,140 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:17:24,140 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-28 14:17:24,140 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:17:24,140 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:17:24,141 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:17:24,141 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:17:24,149 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:17:24,162 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:17:24,162 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,162 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:17:24,162 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,162 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:17:24,162 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:17:24,162 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:17:24,162 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:17:24,162 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:17:24,162 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:17:24,166 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:17:24,176 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:17:24,176 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,176 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:17:24,176 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,176 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:17:24,176 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:17:24,176 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:17:24,176 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:17:24,177 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-28 14:17:24,196 - root - generate_query_placeholder_indexes - INFO - parsing query: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
;
2024-02-28 14:17:24,196 - root - generate_query_placeholder_indexes - INFO - found tables: store_sales store customer_demographics household_demographics customer_address date_dim, columns: s_store_sk ss_store_sk ss_sold_date_sk d_date_sk d_year ss_hdemo_sk hd_demo_sk cd_demo_sk ss_cdemo_sk cd_marital_status cd_education_status ss_sales_price hd_dep_count ss_addr_sk ca_address_sk ca_country ca_state ss_net_profit
2024-02-28 14:17:24,196 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:17:24,205 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='household_demographics', reltuples=7200, columns=['hd_demo_sk', 'hd_income_band_sk', 'hd_buy_potential', 'hd_dep_count', 'hd_vehicle_count'], n_distincts=[-1.0, 20.0, 6.0, 10.0, 6.0], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:17:24,207 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_net_profit index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_addr_sk index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sales_price index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.customer_address columns: ca_address_sk index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_year index_type:  storage: 0
2024-02-28 14:17:24,207 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:17:24,207 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:17:24,208 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sales_price) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_cdemo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_hdemo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_addr_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:17:24,211 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:17:24,214 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_store_sales_ss_sales_price)',), ('SELECT 1',), ('(13384,<13384>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13385,<13385>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13386,<13386>btree_store_sales_ss_cdemo_sk)',), ('SELECT 1',), ('(13387,<13387>btree_store_sales_ss_hdemo_sk)',), ('SELECT 1',), ('(13388,<13388>btree_store_sales_ss_addr_sk)',), ('SELECT 1',), ('(13389,<13389>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13390,<13390>btree_date_dim_d_date_sk)',), ('SELECT 1',), ('(13391,<13391>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13391>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13385>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13389>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - hypo_index_id :13391
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - hypo_index_id :13389
2024-02-28 14:17:24,215 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:17:24,215 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:17:24,215 - root - query_index_check - INFO - query_index_check indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:17:24,215 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:17:24,220 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:17:24,226 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13383,<13383>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13384,<13384>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13385,<13385>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13385>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13383>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13384>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:17:24,226 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:17:24,226 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:17:24,227 - root - query_index_check - INFO - query_index_check indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:17:24,227 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:17:24,235 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:17:24,237 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13383,<13383>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13384,<13384>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13385,<13385>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13385>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13383>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13384>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:17:24,237 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:17:24,237 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:17:24,237 - root - generate_candidate_indexes - INFO - get valid indexes: [table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0] for the query statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0
2024-02-28 14:17:24,243 - root - index_advisor_workload - INFO - candidate_indexes : [table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_month_seq index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0, table: store_sales columns: ss_net_profit index_type:  storage: 0]
2024-02-28 14:17:24,253 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:17:24,253 - root - index_advisor_workload - INFO - Mcts started
2024-02-28 14:17:24,253 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-02-28 14:17:24,253 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0] benefit: 0
2024-02-28 14:17:24,253 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_month_seq index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: customer_demographics columns: cd_demo_sk index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0), (table: date_dim columns: d_year index_type:  storage: 0,), (table: store_sales columns: ss_net_profit index_type:  storage: 0,)],len==9
2024-02-28 14:19:27,446 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:19:27,649 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:19:27,684 - root - __execute - INFO - error sql :prepare prepare_2 as -- select count(*) from (
-- select distinct c_last_name, c_first_name, d_date
-- from store_sales, date_dim, customer
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from catalog_sales, date_dim, customer
-- where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
-- and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from web_sales, date_dim, customer
-- where web_sales.ws_sold_date_sk = date_dim.d_date_sk
-- and web_sales.ws_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- ) hot_cust
-- limit 100;

-- select i_item_id
-- ,i_item_desc 
-- ,i_category 
-- ,i_class 
-- ,i_current_price
-- ,sum(cs_ext_sales_price) as itemrevenue 
-- ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from	catalog_sales
-- ,item 
-- ,date_dim
-- where cs_item_sk = i_item_sk 
-- and i_category in ('Children', 'Jewelry', 'Home')
-- and cs_sold_date_sk = d_date_sk
-- and d_date between cast('1998-04-22' as date) 
-- 				and (cast('1998-04-22' as date) + interval '30' day)
-- group by i_item_id
-- ,i_item_desc 
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio
-- limit 100;

-- select 
-- c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
-- from
-- (select ss_ticket_number
-- ,ss_customer_sk
-- ,store.s_city
-- ,sum(ss_coupon_amt) amt
-- ,sum(ss_net_profit) profit
-- from store_sales,date_dim,store,household_demographics
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_store_sk = store.s_store_sk 
-- and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
-- and (household_demographics.hd_dep_count = 8 or household_demographics.hd_vehicle_count > 0)
-- and date_dim.d_dow = 1
-- and date_dim.d_year in (1998,1998+1,1998+2) 
-- and store.s_number_employees between 200 and 295
-- group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
-- where ss_customer_sk = c_customer_sk
-- order by c_last_name,c_first_name,substr(s_city,1,30), profit
-- limit 100;

-- select i_item_id, 
-- avg(ss_quantity) agg1,
-- avg(ss_list_price) agg2,
-- avg(ss_coupon_amt) agg3,
-- avg(ss_sales_price) agg4 
-- from store_sales, customer_demographics, date_dim, item, promotion
-- where ss_sold_date_sk = d_date_sk and
-- ss_item_sk = i_item_sk and
-- ss_cdemo_sk = cd_demo_sk and
-- ss_promo_sk = p_promo_sk and
-- cd_gender = 'F' and 
-- cd_marital_status = 'M' and
-- cd_education_status = '4 yr Degree' and
-- (p_channel_email = 'N' or p_channel_event = 'N') and
-- d_year = 2002 
-- group by i_item_id
-- order by i_item_id
-- limit 100;
 
-- select ca_zip, ca_state, sum(ws_sales_price)
-- from web_sales, customer, customer_address, date_dim, item
-- where ws_bill_customer_sk = c_customer_sk
-- 	and c_current_addr_sk = ca_address_sk 
-- 	and ws_item_sk = i_item_sk 
-- 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
-- 	 or 
-- 	 i_item_id in (select i_item_id
-- from item
-- where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
-- )
-- 	 )
-- 	and ws_sold_date_sk = d_date_sk
-- 	and d_qoy = 1 and d_year = 2000
-- group by ca_zip, ca_state
-- order by ca_zip, ca_state
-- limit 100;
2024-02-28 14:19:27,688 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-02-28 14:19:27,692 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-02-28 14:19:27,692 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-02-28 14:19:27,692 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0, statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0]
2024-02-28 14:19:27,692 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0, statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0]
2024-02-28 14:19:27,704 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:19:27,746 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-28 14:19:27,746 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-28 14:19:27,759 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:19:27,766 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-28 14:19:27,766 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-28 14:19:27,766 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-28 14:19:27,766 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-28 14:19:27,766 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-28 14:19:27,767 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-28 14:19:27,767 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-28 14:19:27,767 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-28 14:19:27,767 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-28 14:19:27,767 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:19:27,771 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:19:27,792 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:19:27,792 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:19:27,792 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:19:27,793 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:19:27,793 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:19:27,793 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-28 14:19:27,793 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:19:27,793 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:19:27,793 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:19:27,793 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:19:27,793 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:19:27,799 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:19:27,800 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,800 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:19:27,800 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,800 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:19:27,800 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:19:27,800 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:19:27,800 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:19:27,800 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:19:27,800 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:19:27,801 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:19:27,810 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:19:27,810 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,810 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:19:27,810 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,810 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:19:27,810 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:19:27,810 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:19:27,810 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:19:27,810 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-28 14:19:27,867 - root - generate_query_placeholder_indexes - INFO - parsing query: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
;
2024-02-28 14:19:27,867 - root - generate_query_placeholder_indexes - INFO - found tables: store_sales store customer_demographics household_demographics customer_address date_dim, columns: s_store_sk ss_store_sk ss_sold_date_sk d_date_sk d_year ss_hdemo_sk hd_demo_sk cd_demo_sk ss_cdemo_sk cd_marital_status cd_education_status ss_sales_price hd_dep_count ss_addr_sk ca_address_sk ca_country ca_state ss_net_profit
2024-02-28 14:19:27,867 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:19:27,892 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='household_demographics', reltuples=7200, columns=['hd_demo_sk', 'hd_income_band_sk', 'hd_buy_potential', 'hd_dep_count', 'hd_vehicle_count'], n_distincts=[-1.0, 20.0, 6.0, 10.0, 6.0], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:19:27,895 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_net_profit index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_addr_sk index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sales_price index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.customer_address columns: ca_address_sk index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_year index_type:  storage: 0
2024-02-28 14:19:27,895 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:19:27,895 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:19:27,895 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sales_price) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_cdemo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_hdemo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_addr_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:19:27,899 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:19:27,903 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_store_sales_ss_sales_price)',), ('SELECT 1',), ('(13384,<13384>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13385,<13385>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13386,<13386>btree_store_sales_ss_cdemo_sk)',), ('SELECT 1',), ('(13387,<13387>btree_store_sales_ss_hdemo_sk)',), ('SELECT 1',), ('(13388,<13388>btree_store_sales_ss_addr_sk)',), ('SELECT 1',), ('(13389,<13389>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13390,<13390>btree_date_dim_d_date_sk)',), ('SELECT 1',), ('(13391,<13391>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13391>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13385>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13389>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - hypo_index_id :13391
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - hypo_index_id :13389
2024-02-28 14:19:27,903 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:19:27,903 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:19:27,903 - root - query_index_check - INFO - query_index_check indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:19:27,903 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:19:27,914 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:19:27,917 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13383,<13383>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13384,<13384>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13385,<13385>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13385>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13383>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13384>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:19:27,917 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:19:27,917 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:19:27,918 - root - query_index_check - INFO - query_index_check indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:19:27,918 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:19:27,918 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:19:27,923 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13383,<13383>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13384,<13384>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13385,<13385>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13385>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13383>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13384>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:19:27,923 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:19:27,923 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:19:27,923 - root - generate_candidate_indexes - INFO - get valid indexes: [table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0] for the query statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0
2024-02-28 14:19:27,939 - root - index_advisor_workload - INFO - candidate_indexes : [table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_month_seq index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0, table: store_sales columns: ss_net_profit index_type:  storage: 0]
2024-02-28 14:19:27,951 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:19:27,952 - root - index_advisor_workload - INFO - Mcts started
2024-02-28 14:19:27,952 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-02-28 14:19:27,952 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0] benefit: 0
2024-02-28 14:19:27,952 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_month_seq index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: customer_demographics columns: cd_demo_sk index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0), (table: date_dim columns: d_year index_type:  storage: 0,), (table: store_sales columns: ss_net_profit index_type:  storage: 0,)],len==9
2024-02-28 14:19:29,491 - root - MCTS - INFO - 100 >= 132.109375
2024-02-28 14:19:29,491 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:19:29,579 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:19:29,714 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:19:29,805 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:19:29,915 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:19:30,007 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:19:30,083 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_net_profit index_type:  storage: 78.9375，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:19:30,084 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144376.22
2024-02-28 14:19:30,084 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:19:30,084 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-28 14:19:30,084 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_net_profit index_type:  storage: 78.9375，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:19:30,084 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :69970.02
2024-02-28 14:19:30,098 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-02-28 14:19:30,098 - root - filter_low_benefit_index - INFO - filter low benefit index for table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-02-28 14:19:30,098 - root - filter_low_benefit_index - INFO - table: store_sales columns: ss_net_profit index_type:  storage: 78.9375 has benefit of 32865.90000000002
2024-02-28 14:19:30,098 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:19:30,098 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :102835.92
2024-02-28 14:19:30,098 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-28 14:19:30,098 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-28 14:19:30,099 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-28 14:19:30,099 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:19:30,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :102794.7
2024-02-28 14:19:30,099 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-02-28 14:19:30,099 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-02-28 14:19:30,099 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 41.22000000003027
2024-02-28 14:19:30,099 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:19:30,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144376.22
2024-02-28 14:19:30,099 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:19:30,099 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :100921.08
2024-02-28 14:19:30,099 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-02-28 14:19:30,099 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-02-28 14:19:30,099 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 1914.8400000000256
2024-02-28 14:19:30,100 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:19:30,100 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-28 14:19:30,100 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-28 14:19:30,100 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-28 14:19:30,100 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 65.35000000003492
2024-02-28 14:19:30,133 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:19:30,323 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:19:30,323 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,324 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,324 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,324 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,324 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,324 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,324 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,324 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13386>btree_item_i_item_sk"']
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13386>btree_item_i_item_sk
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,325 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,325 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,325 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,326 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,326 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,326 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,326 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,326 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,326 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,326 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,326 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,326 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,327 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,327 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,327 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,327 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,327 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,327 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,327 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,327 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,327 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,328 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,328 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,328 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,328 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,328 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,328 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,328 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,328 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,328 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,329 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,329 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13384>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,329 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,329 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,329 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :<13384>btree_customer_address_ca_address_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,329 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,329 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,329 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:19:30,329 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:19:30,329 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:19:30,330 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125]
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index : table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 34822.11]
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 34822.11]
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125] benefit: 34822.11]
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-28 14:19:30,330 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-02-28 14:19:30,330 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125]
2024-02-28 14:19:30,330 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_year index_type:  storage: 1.8125, table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125]
2024-02-28 14:19:30,330 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-28 14:19:30,336 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:19:30,337 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-02-28 14:19:30,337 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
2024-02-28 14:21:46,804 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:21:47,018 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:21:47,059 - root - __execute - INFO - error sql :prepare prepare_2 as -- select count(*) from (
-- select distinct c_last_name, c_first_name, d_date
-- from store_sales, date_dim, customer
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from catalog_sales, date_dim, customer
-- where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
-- and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- intersect
-- select distinct c_last_name, c_first_name, d_date
-- from web_sales, date_dim, customer
-- where web_sales.ws_sold_date_sk = date_dim.d_date_sk
-- and web_sales.ws_bill_customer_sk = customer.c_customer_sk
-- and d_month_seq between 1210 and 1210 + 11
-- ) hot_cust
-- limit 100;

-- select i_item_id
-- ,i_item_desc 
-- ,i_category 
-- ,i_class 
-- ,i_current_price
-- ,sum(cs_ext_sales_price) as itemrevenue 
-- ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
-- (partition by i_class) as revenueratio
-- from	catalog_sales
-- ,item 
-- ,date_dim
-- where cs_item_sk = i_item_sk 
-- and i_category in ('Children', 'Jewelry', 'Home')
-- and cs_sold_date_sk = d_date_sk
-- and d_date between cast('1998-04-22' as date) 
-- 				and (cast('1998-04-22' as date) + interval '30' day)
-- group by i_item_id
-- ,i_item_desc 
-- ,i_category
-- ,i_class
-- ,i_current_price
-- order by i_category
-- ,i_class
-- ,i_item_id
-- ,i_item_desc
-- ,revenueratio
-- limit 100;

-- select 
-- c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
-- from
-- (select ss_ticket_number
-- ,ss_customer_sk
-- ,store.s_city
-- ,sum(ss_coupon_amt) amt
-- ,sum(ss_net_profit) profit
-- from store_sales,date_dim,store,household_demographics
-- where store_sales.ss_sold_date_sk = date_dim.d_date_sk
-- and store_sales.ss_store_sk = store.s_store_sk 
-- and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
-- and (household_demographics.hd_dep_count = 8 or household_demographics.hd_vehicle_count > 0)
-- and date_dim.d_dow = 1
-- and date_dim.d_year in (1998,1998+1,1998+2) 
-- and store.s_number_employees between 200 and 295
-- group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
-- where ss_customer_sk = c_customer_sk
-- order by c_last_name,c_first_name,substr(s_city,1,30), profit
-- limit 100;

-- select i_item_id, 
-- avg(ss_quantity) agg1,
-- avg(ss_list_price) agg2,
-- avg(ss_coupon_amt) agg3,
-- avg(ss_sales_price) agg4 
-- from store_sales, customer_demographics, date_dim, item, promotion
-- where ss_sold_date_sk = d_date_sk and
-- ss_item_sk = i_item_sk and
-- ss_cdemo_sk = cd_demo_sk and
-- ss_promo_sk = p_promo_sk and
-- cd_gender = 'F' and 
-- cd_marital_status = 'M' and
-- cd_education_status = '4 yr Degree' and
-- (p_channel_email = 'N' or p_channel_event = 'N') and
-- d_year = 2002 
-- group by i_item_id
-- order by i_item_id
-- limit 100;
 
-- select ca_zip, ca_state, sum(ws_sales_price)
-- from web_sales, customer, customer_address, date_dim, item
-- where ws_bill_customer_sk = c_customer_sk
-- 	and c_current_addr_sk = ca_address_sk 
-- 	and ws_item_sk = i_item_sk 
-- 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
-- 	 or 
-- 	 i_item_id in (select i_item_id
-- from item
-- where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
-- )
-- 	 )
-- 	and ws_sold_date_sk = d_date_sk
-- 	and d_qoy = 1 and d_year = 2000
-- group by ca_zip, ca_state
-- order by ca_zip, ca_state
-- limit 100;
2024-02-28 14:21:47,059 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-02-28 14:21:47,060 - root - __execute - WARNING - Found prepared statement "prepare_2" does not exist
 while executing SQL statement.
2024-02-28 14:21:47,060 - root - is_valid_statement - INFO - _tuple :('ERROR',)
2024-02-28 14:21:47,060 - root - index_advisor_workload - INFO - after is_valid_statement queries :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0, statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0]
2024-02-28 14:21:47,060 - root - index_advisor_workload - INFO - workload queries : [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0, statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0]
2024-02-28 14:21:47,069 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:21:47,152 - root - generate_query_placeholder_indexes - INFO - parsing query: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;
2024-02-28 14:21:47,152 - root - generate_query_placeholder_indexes - INFO - found tables: store item store_sales date_dim, columns: ss_sold_date_sk d_date_sk d_month_seq sb.ss_store_sk sc.ss_store_sk sc.revenue sb.ave s_store_sk i_item_sk sc.ss_item_sk ss_store_sk ss_item_sk s_store_name i_item_desc
2024-02-28 14:21:47,180 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:21:47,187 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-28 14:21:47,187 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_sk index_type:  storage: 0
2024-02-28 14:21:47,188 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.item columns: i_item_desc index_type:  storage: 0
2024-02-28 14:21:47,188 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_item_sk index_type:  storage: 0
2024-02-28 14:21:47,188 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-28 14:21:47,188 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-28 14:21:47,188 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_month_seq index_type:  storage: 0
2024-02-28 14:21:47,188 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.item columns: i_item_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0]
2024-02-28 14:21:47,188 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.item columns: i_item_desc index_type:  storage: 0, table: public.date_dim columns: d_month_seq index_type:  storage: 0, table: public.store_sales columns: ss_item_sk index_type:  storage: 0, table: public.item columns: i_item_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0]
2024-02-28 14:21:47,188 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_desc) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.item(i_item_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:21:47,193 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:21:47,214 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_desc)',), ('SELECT 1',), ('(13384,<13384>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13385,<13385>btree_store_sales_ss_item_sk)',), ('SELECT 1',), ('(13386,<13386>btree_item_i_item_sk)',), ('SELECT 1',), ('(13387,<13387>btree_date_dim_d_date_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13384>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13386>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:21:47,214 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:21:47,214 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:21:47,214 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:21:47,214 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:21:47,214 - root - __add_valid_index - INFO - hypo_index_id :13386
2024-02-28 14:21:47,214 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:21:47,214 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:21:47,214 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:21:47,214 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:21:47,215 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:21:47,221 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:21:47,221 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,221 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:21:47,221 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,221 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:21:47,221 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:21:47,221 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:21:47,221 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:21:47,221 - root - query_index_check - INFO - query_index_check indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:21:47,222 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_month_seq) ')", "SELECT hypopg_create_index('CREATE INDEX ON item(i_item_sk) ')", 'SELECT hypopg_display_index()', 'prepare prepare_0 as select \n\ts_store_name,\n\ti_item_desc,\n\tsc.revenue,\n\ti_current_price,\n\ti_wholesale_cost,\n\ti_brand\n from store, item,\n (select ss_store_sk, avg(revenue) as ave\n \tfrom\n \t (select ss_store_sk, ss_item_sk, \n \t\t sum(ss_sales_price) as revenue\n \t\tfrom store_sales, date_dim\n \t\twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \t\tgroup by ss_store_sk, ss_item_sk) sa\n \tgroup by ss_store_sk) sb,\n (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue\n \tfrom store_sales, date_dim\n \twhere ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11\n \tgroup by ss_store_sk, ss_item_sk) sc\n where sb.ss_store_sk = sc.ss_store_sk and \n sc.revenue <= 0.1 * sb.ave and\n s_store_sk = sc.ss_store_sk and\n i_item_sk = sc.ss_item_sk\n order by s_store_name, i_item_desc\nlimit 100;', 'explain execute prepare_0', 'deallocate prepare prepare_0', 'SELECT hypopg_reset_index()']
2024-02-28 14:21:47,222 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:21:47,228 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_date_dim_d_month_seq)',), ('SELECT 1',), ('(13383,<13383>btree_item_i_item_sk)',), ('ERROR',), ('EXPLAIN',), ('Limit  (cost=140265.17..140265.42 rows=100 width=202)',), ('  ->  Sort  (cost=140265.17..140265.83 rows=263 width=202)',), ('        Sort Key: store.s_store_name, item.i_item_desc',), ('        ->  Nested Loop  (cost=136434.32..140255.12 rows=263 width=202)',), ('              ->  Merge Join  (cost=136434.28..140137.60 rows=263 width=41)',), ('                    Merge Cond: (store_sales.ss_store_sk = store_sales_1.ss_store_sk)',), ('                    Join Filter: ((sum(store_sales.ss_sales_price)) <= (0.1 * (avg((sum(store_sales_1.ss_sales_price))))))',), ('                    ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                          Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                          ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                Workers Planned: 2',), ('                                ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                      Group Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                      ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                            Sort Key: store_sales.ss_store_sk, store_sales.ss_item_sk',), ('                                            ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                  Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                                  ->  Parallel Seq Scan on store_sales  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                  ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                        ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim  (cost=0.04..25.02 rows=349 width=4)',), ('                                                              Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('                    ->  Materialize  (cost=68217.81..70080.63 rows=12 width=45)',), ('                          ->  Merge Join  (cost=68217.81..70080.60 rows=12 width=45)',), ('                                Merge Cond: (store.s_store_sk = store_sales_1.ss_store_sk)',), ('                                ->  Sort  (cost=1.34..1.37 rows=12 width=9)',), ('                                      Sort Key: store.s_store_sk',), ('                                      ->  Seq Scan on store  (cost=0.00..1.12 rows=12 width=9)',), ('                                ->  GroupAggregate  (cost=68216.47..70076.58 rows=200 width=36)',), ('                                      Group Key: store_sales_1.ss_store_sk',), ('                                      ->  Finalize GroupAggregate  (cost=68216.47..69877.01 rows=13138 width=40)',), ('                                            Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                            ->  Gather Merge  (cost=68216.47..69603.31 rows=10948 width=40)',), ('                                                  Workers Planned: 2',), ('                                                  ->  Partial GroupAggregate  (cost=67216.45..67339.61 rows=5474 width=40)',), ('                                                        Group Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                        ->  Sort  (cost=67216.45..67230.13 rows=5474 width=14)',), ('                                                              Sort Key: store_sales_1.ss_store_sk, store_sales_1.ss_item_sk',), ('                                                              ->  Hash Join  (cost=29.39..66876.56 rows=5474 width=14)',), ('                                                                    Hash Cond: (store_sales_1.ss_sold_date_sk = date_dim_1.d_date_sk)',), ('                                                                    ->  Parallel Seq Scan on store_sales store_sales_1  (cost=0.00..63696.79 rows=1200079 width=18)',), ('                                                                    ->  Hash  (cost=25.02..25.02 rows=349 width=4)',), ('                                                                          ->  Index Scan using "<13382>btree_date_dim_d_month_seq" on date_dim date_dim_1  (cost=0.04..25.02 rows=349 width=4)',), ('                                                                                Index Cond: ((d_month_seq >= 1180) AND (d_month_seq <= 1191))',), ('              ->  Index Scan using "<13383>btree_item_i_item_sk" on item  (cost=0.04..0.45 rows=1 width=169)',), ('                    Index Cond: (i_item_sk = store_sales.ss_item_sk)',), ('JIT:',), ('  Functions: 62',), ('  Options: Inlining false, Optimization false, Expressions true, Deforming true',), ('SELECT 1',), ('',)]
2024-02-28 14:21:47,228 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,228 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:21:47,228 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,228 - root - __add_valid_index - INFO - table_columns :date_dim:d_month_seq
2024-02-28 14:21:47,228 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:21:47,228 - root - __add_valid_index - INFO - table_columns :item:i_item_sk
2024-02-28 14:21:47,228 - root - query_index_check - INFO - valid_indexes :[table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0]
2024-02-28 14:21:47,228 - root - generate_candidate_indexes - INFO - get valid indexes: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] for the query statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [] benefit: 0
2024-02-28 14:21:47,249 - root - generate_query_placeholder_indexes - INFO - parsing query: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
;
2024-02-28 14:21:47,249 - root - generate_query_placeholder_indexes - INFO - found tables: store_sales store customer_demographics household_demographics customer_address date_dim, columns: s_store_sk ss_store_sk ss_sold_date_sk d_date_sk d_year ss_hdemo_sk hd_demo_sk cd_demo_sk ss_cdemo_sk cd_marital_status cd_education_status ss_sales_price hd_dep_count ss_addr_sk ca_address_sk ca_country ca_state ss_net_profit
2024-02-28 14:21:47,249 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='store', reltuples=12, columns=['s_store_sk', 's_store_id', 's_rec_start_date', 's_rec_end_date', 's_closed_date_sk', 's_store_name', 's_number_employees', 's_floor_space', 's_hours', 's_manager', 's_market_id', 's_geography_class', 's_market_desc', 's_market_manager', 's_division_id', 's_division_name', 's_company_id', 's_company_name', 's_street_number', 's_street_name', 's_street_type', 's_suite_number', 's_city', 's_county', 's_state', 's_zip', 's_country', 's_gmt_offset', 's_tax_precentage'], n_distincts=[-1.0, -0.5, -0.33333334, -0.25, -0.25, -0.6666667, -0.75, -0.8333333, -0.16666667, -0.5833333, -0.5833333, 1.0, -0.8333333, -0.5833333, 1.0, 1.0, 1.0, 1.0, -0.75, -1.0, -0.6666667, -0.9166667, -0.16666667, 1.0, 1.0, -0.16666667, 1.0, 1.0, -0.41666666], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:21:47,256 - root - generate_query_placeholder_indexes - INFO - filtered: table_context is TableContext(schema='public', table='household_demographics', reltuples=7200, columns=['hd_demo_sk', 'hd_income_band_sk', 'hd_buy_potential', 'hd_dep_count', 'hd_vehicle_count'], n_distincts=[-1.0, 20.0, 6.0, 10.0, 6.0], is_partitioned_table=False) and does not meet the requirements
2024-02-28 14:21:47,259 - root - generate_query_placeholder_indexes - INFO - related indexes: [table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_net_profit index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_addr_sk index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sales_price index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.customer_address columns: ca_address_sk index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_date_sk index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  generate_query_placeholder_indexes advised_index :table: public.date_dim columns: d_year index_type:  storage: 0
2024-02-28 14:21:47,259 - root - generate_candidate_indexes - INFO -  out advised_indexes :[table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:21:47,259 - root - query_index_check - INFO - query_index_check indexes :[table: public.store_sales columns: ss_sold_date_sk index_type:  storage: 0, table: public.store_sales columns: ss_sales_price index_type:  storage: 0, table: public.store_sales columns: ss_net_profit index_type:  storage: 0, table: public.customer_address columns: ca_address_sk index_type:  storage: 0, table: public.store_sales columns: ss_cdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_hdemo_sk index_type:  storage: 0, table: public.store_sales columns: ss_addr_sk index_type:  storage: 0, table: public.customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: public.date_dim columns: d_date_sk index_type:  storage: 0, table: public.date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:21:47,259 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sold_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_sales_price) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_cdemo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_hdemo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.store_sales(ss_addr_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_date_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON public.date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:21:47,263 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:21:47,266 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_sold_date_sk)',), ('SELECT 1',), ('(13383,<13383>btree_store_sales_ss_sales_price)',), ('SELECT 1',), ('(13384,<13384>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13385,<13385>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13386,<13386>btree_store_sales_ss_cdemo_sk)',), ('SELECT 1',), ('(13387,<13387>btree_store_sales_ss_hdemo_sk)',), ('SELECT 1',), ('(13388,<13388>btree_store_sales_ss_addr_sk)',), ('SELECT 1',), ('(13389,<13389>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13390,<13390>btree_date_dim_d_date_sk)',), ('SELECT 1',), ('(13391,<13391>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13384>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13391>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13385>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13389>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - hypo_index_id :13391
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - hypo_index_id :13389
2024-02-28 14:21:47,267 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:21:47,267 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:21:47,267 - root - query_index_check - INFO - query_index_check indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:21:47,267 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:21:47,270 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:21:47,272 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13383,<13383>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13384,<13384>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13385,<13385>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13385>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13383>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13384>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:21:47,273 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:21:47,273 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:21:47,273 - root - query_index_check - INFO - query_index_check indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0]
2024-02-28 14:21:47,273 - root - get_index_check_sqls - INFO - get_index_check_sqls :["SELECT hypopg_create_index('CREATE INDEX ON store_sales(ss_net_profit) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_address(ca_address_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON customer_demographics(cd_demo_sk) ')", "SELECT hypopg_create_index('CREATE INDEX ON date_dim(d_year) ')", 'SELECT hypopg_display_index()', "prepare prepare_1 as select avg(ss_quantity)\n ,avg(ss_ext_sales_price)\n ,avg(ss_ext_wholesale_cost)\n ,sum(ss_ext_wholesale_cost)\n from store_sales\n ,store\n ,customer_demographics\n ,household_demographics\n ,customer_address\n ,date_dim\n where s_store_sk = ss_store_sk\n and ss_sold_date_sk = d_date_sk and d_year = 2001\n and((ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'U'\n and cd_education_status = 'Secondary'\n and ss_sales_price between 100.00 and 150.00\n and hd_dep_count = 3 \n )or\n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'M'\n and cd_education_status = 'College'\n and ss_sales_price between 50.00 and 100.00 \n and hd_dep_count = 1\n ) or \n (ss_hdemo_sk=hd_demo_sk\n and cd_demo_sk = ss_cdemo_sk\n and cd_marital_status = 'S'\n and cd_education_status = 'Unknown'\n and ss_sales_price between 150.00 and 200.00 \n and hd_dep_count = 1 \n ))\n and((ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('LA', 'VA', 'KY')\n and ss_net_profit between 100 and 200 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('AR', 'MD', 'IN')\n and ss_net_profit between 150 and 300 \n ) or\n (ss_addr_sk = ca_address_sk\n and ca_country = 'United States'\n and ca_state in ('FL', 'MS', 'TX')\n and ss_net_profit between 50 and 250 \n ))\n;", 'explain execute prepare_1', 'deallocate prepare prepare_1', 'SELECT hypopg_reset_index()']
2024-02-28 14:21:47,274 - root - __execute - INFO - error sql :SELECT hypopg_display_index()
2024-02-28 14:21:47,276 - root - query_index_check - INFO - index_check_results :[('SELECT 1',), ('(13382,<13382>btree_store_sales_ss_net_profit)',), ('SELECT 1',), ('(13383,<13383>btree_customer_address_ca_address_sk)',), ('SELECT 1',), ('(13384,<13384>btree_customer_demographics_cd_demo_sk)',), ('SELECT 1',), ('(13385,<13385>btree_date_dim_d_year)',), ('ERROR',), ('EXPLAIN',), ('Aggregate  (cost=68012.10..68012.11 rows=1 width=128)',), ('  ->  Nested Loop  (cost=10002.36..68012.08 rows=1 width=16)',), ('        ->  Gather  (cost=10002.22..68011.93 rows=1 width=20)',), ('              Workers Planned: 2',), ('              ->  Nested Loop  (cost=9002.22..67011.83 rows=1 width=20)',), ("                    Join Filter: (((customer_demographics.cd_marital_status = 'U'::bpchar) AND (customer_demographics.cd_education_status = 'Secondary'::bpchar) AND (store_sales.ss_sales_price >= 100.00) AND (store_sales.ss_sales_price <= 150.00) AND (household_demographics.hd_dep_count = 3)) OR ((customer_demographics.cd_marital_status = 'M'::bpchar) AND (customer_demographics.cd_education_status = 'College'::bpchar) AND (store_sales.ss_sales_price >= 50.00) AND (store_sales.ss_sales_price <= 100.00) AND (household_demographics.hd_dep_count = 1)) OR ((customer_demographics.cd_marital_status = 'S'::bpchar) AND (customer_demographics.cd_education_status = 'Unknown'::bpchar) AND (store_sales.ss_sales_price >= 150.00) AND (store_sales.ss_sales_price <= 200.00) AND (household_demographics.hd_dep_count = 1)))",), ('                    ->  Nested Loop  (cost=9002.17..67005.38 rows=5 width=34)',), ('                          ->  Nested Loop  (cost=9001.89..66999.48 rows=19 width=34)',), ('                                ->  Hash Join  (cost=9001.85..66968.94 rows=192 width=44)',), ('                                      Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)',), ('                                      ->  Parallel Bitmap Heap Scan on store_sales  (cost=8971.88..66833.25 rows=40272 width=48)',), ("                                            Recheck Cond: (((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric)) OR ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric)) OR ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric)))",), ('                                            Filter: (((ss_sales_price >= 100.00) AND (ss_sales_price <= 150.00)) OR ((ss_sales_price >= 50.00) AND (ss_sales_price <= 100.00)) OR ((ss_sales_price >= 150.00) AND (ss_sales_price <= 200.00)))',), ('                                            ->  BitmapOr  (cost=8971.88..8971.88 rows=369922 width=0)',), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2108.61 rows=87656 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '100'::numeric) AND (ss_net_profit <= '200'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..2381.61 rows=98956 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '150'::numeric) AND (ss_net_profit <= '300'::numeric))",), ('                                                  ->  Bitmap Index Scan on "<13382>btree_store_sales_ss_net_profit"  (cost=0.00..4409.17 rows=183311 width=0)',), ("                                                        Index Cond: ((ss_net_profit >= '50'::numeric) AND (ss_net_profit <= '250'::numeric))",), ('                                      ->  Hash  (cost=25.41..25.41 rows=364 width=4)',), ('                                            ->  Index Scan using "<13385>btree_date_dim_d_year" on date_dim  (cost=0.04..25.41 rows=364 width=4)',), ('                                                  Index Cond: (d_year = 2001)',), ('                                ->  Index Scan using "<13383>btree_customer_address_ca_address_sk" on customer_address  (cost=0.04..0.15 rows=1 width=7)',), ('                                      Index Cond: (ca_address_sk = store_sales.ss_addr_sk)',), ("                                      Filter: (((ca_country)::text = 'United States'::text) AND ((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) OR (ca_state = ANY ('{AR,MD,IN}'::bpchar[])) OR (ca_state = ANY ('{FL,MS,TX}'::bpchar[]))) AND (((ca_state = ANY ('{LA,VA,KY}'::bpchar[])) AND (store_sales.ss_net_profit >= '100'::numeric) AND (store_sales.ss_net_profit <= '200'::numeric)) OR ((ca_state = ANY ('{AR,MD,IN}'::bpchar[])) AND (store_sales.ss_net_profit >= '150'::numeric) AND (store_sales.ss_net_profit <= '300'::numeric)) OR ((ca_state = ANY ('{FL,MS,TX}'::bpchar[])) AND (store_sales.ss_net_profit >= '50'::numeric) AND (store_sales.ss_net_profit <= '250'::numeric))))",), ('                          ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=8)',), ('                                Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)',), ('                                Filter: ((hd_dep_count = 3) OR (hd_dep_count = 1) OR (hd_dep_count = 1))',), ('                    ->  Index Scan using "<13384>btree_customer_demographics_cd_demo_sk" on customer_demographics  (cost=0.05..1.24 rows=1 width=27)',), ('                          Index Cond: (cd_demo_sk = store_sales.ss_cdemo_sk)',), ("                          Filter: (((cd_marital_status = 'U'::bpchar) AND (cd_education_status = 'Secondary'::bpchar)) OR ((cd_marital_status = 'M'::bpchar) AND (cd_education_status = 'College'::bpchar)) OR ((cd_marital_status = 'S'::bpchar) AND (cd_education_status = 'Unknown'::bpchar)))",), ('        ->  Index Only Scan using store_pkey on store  (cost=0.14..0.15 rows=1 width=4)',), ('              Index Cond: (s_store_sk = store_sales.ss_store_sk)',), ('SELECT 1',), ('',)]
2024-02-28 14:21:47,276 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,276 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:21:47,276 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,276 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:21:47,276 - root - __add_valid_index - INFO - hypo_index_id :13382
2024-02-28 14:21:47,276 - root - __add_valid_index - INFO - table_columns :store_sales:ss_net_profit
2024-02-28 14:21:47,276 - root - __add_valid_index - INFO - hypo_index_id :13385
2024-02-28 14:21:47,276 - root - __add_valid_index - INFO - table_columns :date_dim:d_year
2024-02-28 14:21:47,276 - root - __add_valid_index - INFO - hypo_index_id :13383
2024-02-28 14:21:47,277 - root - __add_valid_index - INFO - table_columns :customer_address:ca_address_sk
2024-02-28 14:21:47,277 - root - __add_valid_index - INFO - hypo_index_id :13384
2024-02-28 14:21:47,277 - root - __add_valid_index - INFO - table_columns :customer_demographics:cd_demo_sk
2024-02-28 14:21:47,277 - root - query_index_check - INFO - valid_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0]
2024-02-28 14:21:47,277 - root - generate_candidate_indexes - INFO - get valid indexes: [table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0] for the query statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [] benefit: 0
2024-02-28 14:21:47,283 - root - index_advisor_workload - INFO - candidate_indexes : [table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0, table: date_dim columns: d_month_seq index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0, table: store_sales columns: ss_net_profit index_type:  storage: 0]
2024-02-28 14:21:47,293 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:21:47,293 - root - index_advisor_workload - INFO - Mcts started
2024-02-28 14:21:47,293 - root - generate_sorted_atomic_config - INFO - cnt num 1 queries:statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0] benefit: 0
2024-02-28 14:21:47,293 - root - generate_sorted_atomic_config - INFO - cnt num 2 queries:statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 0, table: date_dim columns: d_year index_type:  storage: 0, table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0] benefit: 0
2024-02-28 14:21:47,293 - root - complex_index_advisor - INFO - atomic_config_total :[(), (table: date_dim columns: d_month_seq index_type:  storage: 0,), (table: item columns: i_item_sk index_type:  storage: 0,), (table: date_dim columns: d_month_seq index_type:  storage: 0, table: item columns: i_item_sk index_type:  storage: 0), (table: customer_address columns: ca_address_sk index_type:  storage: 0,), (table: customer_demographics columns: cd_demo_sk index_type:  storage: 0,), (table: customer_address columns: ca_address_sk index_type:  storage: 0, table: customer_demographics columns: cd_demo_sk index_type:  storage: 0), (table: date_dim columns: d_year index_type:  storage: 0,), (table: store_sales columns: ss_net_profit index_type:  storage: 0,)],len==9
2024-02-28 14:21:49,022 - root - MCTS - INFO - mcts 100 >= 132.109375
2024-02-28 14:21:49,022 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:21:49,138 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:21:49,287 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:21:49,392 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:21:49,549 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:21:49,638 - root - monte_carlo_tree_search - INFO - monte_carlo_tree_search computation_budget :227.08456534594913
2024-02-28 14:21:49,723 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_net_profit index_type:  storage: 78.9375，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:21:49,723 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144376.22
2024-02-28 14:21:49,723 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:21:49,723 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :140330.77
2024-02-28 14:21:49,723 - root - is_positive_query - INFO - index ：table: store_sales columns: ss_net_profit index_type:  storage: 78.9375，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:21:49,727 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :69970.02
2024-02-28 14:21:49,734 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-02-28 14:21:49,737 - root - filter_low_benefit_index - INFO - filter low benefit index for table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-02-28 14:21:49,737 - root - filter_low_benefit_index - INFO - table: store_sales columns: ss_net_profit index_type:  storage: 78.9375 has benefit of 32865.90000000002
2024-02-28 14:21:49,737 - root - is_positive_query - INFO - index ：table: date_dim columns: d_month_seq index_type:  storage: 1.8125，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:21:49,737 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :102835.92
2024-02-28 14:21:49,737 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-28 14:21:49,737 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-28 14:21:49,737 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_month_seq index_type:  storage: 1.8125 has benefit of 4045.4500000000116
2024-02-28 14:21:49,741 - root - is_positive_query - INFO - index ：table: item columns: i_item_sk index_type:  storage: 0.4453125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:21:49,741 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144310.87
2024-02-28 14:21:49,744 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0]
2024-02-28 14:21:49,744 - root - filter_low_benefit_index - INFO - filter low benefit index for table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-28 14:21:49,744 - root - filter_low_benefit_index - INFO - table: item columns: i_item_sk index_type:  storage: 0.4453125 has benefit of 65.35000000003492
2024-02-28 14:21:49,744 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 0
2024-02-28 14:21:49,744 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：144376.22，self.get_indexes_cost_of_query(query, tuple([index])) :144376.22
2024-02-28 14:21:49,744 - root - is_positive_query - INFO - index ：table: date_dim columns: d_year index_type:  storage: 1.8125，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:21:49,744 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :100921.08
2024-02-28 14:21:49,744 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-02-28 14:21:49,745 - root - filter_low_benefit_index - INFO - filter low benefit index for table: date_dim columns: d_year index_type:  storage: 1.8125
2024-02-28 14:21:49,745 - root - filter_low_benefit_index - INFO - table: date_dim columns: d_year index_type:  storage: 1.8125 has benefit of 1914.8400000000256
2024-02-28 14:21:49,745 - root - is_positive_query - INFO - index ：table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875，query :statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0
2024-02-28 14:21:49,748 - root - is_positive_query - INFO - self.get_origin_cost_of_query(query ：102835.92，self.get_indexes_cost_of_query(query, tuple([index])) :102794.7
2024-02-28 14:21:49,748 - root - filter_low_benefit_index - INFO - positive_queries for [statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: customer_demographics columns: cd_demo_sk index_type:  storage: 47.859375] benefit: 0]
2024-02-28 14:21:49,748 - root - filter_low_benefit_index - INFO - filter low benefit index for table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-02-28 14:21:49,748 - root - filter_low_benefit_index - INFO - table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875 has benefit of 41.22000000003027
2024-02-28 14:21:49,763 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:21:49,964 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-02-28 14:21:49,964 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,964 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,964 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,964 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,964 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,964 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,964 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,965 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,965 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13383>btree_date_dim_d_month_seq"', '"<13384>btree_item_i_item_sk"']
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13383>btree_date_dim_d_month_seq
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13384>btree_item_i_item_sk
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,966 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,966 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,966 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_store_sales_ss_net_profit
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,967 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,967 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,967 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,967 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_date_dim_d_month_seq
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,968 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,968 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,968 - root - match_index_name - INFO - match_index_name btree_item_i_item_sk
2024-02-28 14:21:49,968 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,968 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,969 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,969 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,969 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,969 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,969 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_date_dim_d_year
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,969 - root - recalculate_cost_for_opt_indexes - INFO - used_index_names :['"<13382>btree_store_sales_ss_net_profit"', '"<13385>btree_date_dim_d_year"', '"<13386>btree_customer_address_ca_address_sk"', 'household_demographics_pkey', 'customer_demographics_pkey', 'store_pkey']
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,969 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,969 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,969 - root - match_index_name - INFO - index_name :<13382>btree_store_sales_ss_net_profit
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,970 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :<13385>btree_date_dim_d_year
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):True
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :<13386>btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - recalculate_cost_for_opt_indexes - INFO - append_positive_query index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,970 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :ousehold_demographics_pke
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,970 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :ustomer_demographics_pke
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,970 - root - recalculate_cost_for_opt_indexes - INFO - index.match_index_name(index_name):False
2024-02-28 14:21:49,970 - root - match_index_name - INFO - match_index_name btree_customer_address_ca_address_sk
2024-02-28 14:21:49,970 - root - match_index_name - INFO - index_name :tore_pke
2024-02-28 14:21:49,970 - root - index_advisor_workload - INFO - 1 index_advisor.determine_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875]
2024-02-28 14:21:49,970 - root - filter_no_benefit_indexes - INFO - index : table: store_sales columns: ss_net_profit index_type:  storage: 78.9375
2024-02-28 14:21:49,970 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 34822.11]
2024-02-28 14:21:49,970 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_month_seq index_type:  storage: 1.8125
2024-02-28 14:21:49,970 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-02-28 14:21:49,970 - root - filter_no_benefit_indexes - INFO - index : table: item columns: i_item_sk index_type:  storage: 0.4453125
2024-02-28 14:21:49,970 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
 (select ss_store_sk, avg(revenue) as ave
 	from
 	 (select ss_store_sk, ss_item_sk, 
 		 sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
 (select ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1180 and 1180+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
 sc.revenue <= 0.1 * sb.ave and
 s_store_sk = sc.ss_store_sk and
 i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100; frequency: 1.0 index_list: [table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125] benefit: 4110.799999999988]
2024-02-28 14:21:49,971 - root - filter_no_benefit_indexes - INFO - index : table: date_dim columns: d_year index_type:  storage: 1.8125
2024-02-28 14:21:49,971 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 34822.11]
2024-02-28 14:21:49,971 - root - filter_no_benefit_indexes - INFO - index : table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875
2024-02-28 14:21:49,971 - root - filter_no_benefit_indexes - INFO - index.get_positive_queries() :[statement: select avg(ss_quantity)
 ,avg(ss_ext_sales_price)
 ,avg(ss_ext_wholesale_cost)
 ,sum(ss_ext_wholesale_cost)
 from store_sales
 ,store
 ,customer_demographics
 ,household_demographics
 ,customer_address
 ,date_dim
 where s_store_sk = ss_store_sk
 and ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'U'
 and cd_education_status = 'Secondary'
 and ss_sales_price between 100.00 and 150.00
 and hd_dep_count = 3 
 )or
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'M'
 and cd_education_status = 'College'
 and ss_sales_price between 50.00 and 100.00 
 and hd_dep_count = 1
 ) or 
 (ss_hdemo_sk=hd_demo_sk
 and cd_demo_sk = ss_cdemo_sk
 and cd_marital_status = 'S'
 and cd_education_status = 'Unknown'
 and ss_sales_price between 150.00 and 200.00 
 and hd_dep_count = 1 
 ))
 and((ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('LA', 'VA', 'KY')
 and ss_net_profit between 100 and 200 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('AR', 'MD', 'IN')
 and ss_net_profit between 150 and 300 
 ) or
 (ss_addr_sk = ca_address_sk
 and ca_country = 'United States'
 and ca_state in ('FL', 'MS', 'TX')
 and ss_net_profit between 50 and 250 
 ))
; frequency: 1.0 index_list: [table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875] benefit: 34822.11]
2024-02-28 14:21:49,971 - root - index_advisor_workload - INFO - 2 index_advisor.determine_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875]
2024-02-28 14:21:49,971 - root - index_advisor_workload - INFO - 3 index_advisor.determine_indexes :[table: store_sales columns: ss_net_profit index_type:  storage: 78.9375, table: date_dim columns: d_year index_type:  storage: 1.8125, table: customer_address columns: ca_address_sk index_type:  storage: 1.2421875, table: date_dim columns: d_month_seq index_type:  storage: 1.8125, table: item columns: i_item_sk index_type:  storage: 0.4453125]
2024-02-28 14:21:49,971 - root - display_advise_indexes_info - INFO - filter advised indexes by using max-index-storage and max-index-num.
2024-02-28 14:21:49,983 - root - __init_conn_handle - INFO - connection successful
2024-02-28 14:21:49,984 - root - generate_redundant_useless_indexes - INFO - len of created_indexes :24
2024-02-28 14:21:49,984 - root - generate_redundant_useless_indexes - INFO - created_indexes :[public, call_center, call_center_pkey, cc_call_center_sk, CREATE UNIQUE INDEX call_center_pkey ON public.call_center USING btree (cc_call_center_sk)), public, catalog_page, catalog_page_pkey, cp_catalog_page_sk, CREATE UNIQUE INDEX catalog_page_pkey ON public.catalog_page USING btree (cp_catalog_page_sk)), public, catalog_returns, catalog_returns_pkey, cr_item_sk, cr_order_number, CREATE UNIQUE INDEX catalog_returns_pkey ON public.catalog_returns USING btree (cr_item_sk, cr_order_number)), public, catalog_sales, catalog_sales_pkey, cs_item_sk, cs_order_number, CREATE UNIQUE INDEX catalog_sales_pkey ON public.catalog_sales USING btree (cs_item_sk, cs_order_number)), public, customer, customer_pkey, c_customer_sk, CREATE UNIQUE INDEX customer_pkey ON public.customer USING btree (c_customer_sk)), public, customer_address, customer_address_pkey, ca_address_sk, CREATE UNIQUE INDEX customer_address_pkey ON public.customer_address USING btree (ca_address_sk)), public, customer_demographics, customer_demographics_pkey, cd_demo_sk, CREATE UNIQUE INDEX customer_demographics_pkey ON public.customer_demographics USING btree (cd_demo_sk)), public, date_dim, date_dim_pkey, d_date_sk, CREATE UNIQUE INDEX date_dim_pkey ON public.date_dim USING btree (d_date_sk)), public, household_demographics, household_demographics_pkey, hd_demo_sk, CREATE UNIQUE INDEX household_demographics_pkey ON public.household_demographics USING btree (hd_demo_sk)), public, income_band, income_band_pkey, ib_income_band_sk, CREATE UNIQUE INDEX income_band_pkey ON public.income_band USING btree (ib_income_band_sk)), public, inventory, inventory_pkey, inv_date_sk, inv_item_sk, inv_warehouse_sk, CREATE UNIQUE INDEX inventory_pkey ON public.inventory USING btree (inv_date_sk, inv_item_sk, inv_warehouse_sk)), public, item, item_pkey, i_item_sk, CREATE UNIQUE INDEX item_pkey ON public.item USING btree (i_item_sk)), public, promotion, promotion_pkey, p_promo_sk, CREATE UNIQUE INDEX promotion_pkey ON public.promotion USING btree (p_promo_sk)), public, reason, reason_pkey, r_reason_sk, CREATE UNIQUE INDEX reason_pkey ON public.reason USING btree (r_reason_sk)), public, ship_mode, ship_mode_pkey, sm_ship_mode_sk, CREATE UNIQUE INDEX ship_mode_pkey ON public.ship_mode USING btree (sm_ship_mode_sk)), public, store, store_pkey, s_store_sk, CREATE UNIQUE INDEX store_pkey ON public.store USING btree (s_store_sk)), public, store_returns, store_returns_pkey, sr_item_sk, sr_ticket_number, CREATE UNIQUE INDEX store_returns_pkey ON public.store_returns USING btree (sr_item_sk, sr_ticket_number)), public, store_sales, store_sales_pkey, ss_item_sk, ss_ticket_number, CREATE UNIQUE INDEX store_sales_pkey ON public.store_sales USING btree (ss_item_sk, ss_ticket_number)), public, time_dim, time_dim_pkey, t_time_sk, CREATE UNIQUE INDEX time_dim_pkey ON public.time_dim USING btree (t_time_sk)), public, warehouse, warehouse_pkey, w_warehouse_sk, CREATE UNIQUE INDEX warehouse_pkey ON public.warehouse USING btree (w_warehouse_sk)), public, web_page, web_page_pkey, wp_web_page_sk, CREATE UNIQUE INDEX web_page_pkey ON public.web_page USING btree (wp_web_page_sk)), public, web_returns, web_returns_pkey, wr_item_sk, wr_order_number, CREATE UNIQUE INDEX web_returns_pkey ON public.web_returns USING btree (wr_item_sk, wr_order_number)), public, web_sales, web_sales_pkey, ws_item_sk, ws_order_number, CREATE UNIQUE INDEX web_sales_pkey ON public.web_sales USING btree (ws_item_sk, ws_order_number)), public, web_site, web_site_pkey, web_site_sk, CREATE UNIQUE INDEX web_site_pkey ON public.web_site USING btree (web_site_sk))]
