                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42630.54..42630.66 rows=49 width=170) (actual time=8.087..10.101 rows=0 loops=1)
   ->  Sort  (cost=42630.54..42630.66 rows=49 width=170) (actual time=8.085..10.100 rows=0 loops=1)
         Sort Key: customer.c_last_name, store_sales.ss_ticket_number
         Sort Method: quicksort  Memory: 25kB
         ->  Nested Loop  (cost=42210.05..42629.17 rows=49 width=170) (actual time=8.082..10.096 rows=0 loops=1)
               Join Filter: ((current_addr.ca_city)::text <> (customer_address.ca_city)::text)
               ->  Nested Loop  (cost=42209.76..42611.08 rows=49 width=165) (actual time=8.081..10.095 rows=0 loops=1)
                     ->  Finalize GroupAggregate  (cost=42209.47..42215.40 rows=49 width=117) (actual time=8.081..10.094 rows=0 loops=1)
                           Group Key: store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, customer_address.ca_city
                           ->  Gather Merge  (cost=42209.47..42213.82 rows=29 width=117) (actual time=8.080..10.092 rows=0 loops=1)
                                 Workers Planned: 1
                                 Workers Launched: 1
                                 ->  Partial GroupAggregate  (cost=41209.46..41210.55 rows=29 width=117) (actual time=5.816..5.819 rows=0 loops=2)
                                       Group Key: store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, customer_address.ca_city
                                       ->  Sort  (cost=41209.46..41209.53 rows=29 width=40) (actual time=5.815..5.818 rows=0 loops=2)
                                             Sort Key: store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, customer_address.ca_city
                                             Sort Method: quicksort  Memory: 25kB
                                             Worker 0:  Sort Method: quicksort  Memory: 25kB
                                             ->  Nested Loop  (cost=7.46..41208.76 rows=29 width=40) (actual time=5.796..5.798 rows=0 loops=2)
                                                   ->  Nested Loop  (cost=7.17..41199.48 rows=30 width=31) (actual time=5.795..5.797 rows=0 loops=2)
                                                         ->  Nested Loop  (cost=6.89..41160.73 rows=127 width=35) (actual time=5.794..5.796 rows=0 loops=2)
                                                               ->  Parallel Seq Scan on date_dim  (cost=0.00..2210.69 rows=42 width=4) (actual time=2.764..5.667 rows=36 loops=2)
                                                                     Filter: ((d_dom >= 1) AND (d_dom <= 2) AND (d_year = ANY ('{1998,1999,2000}'::integer[])))
                                                                     Rows Removed by Filter: 36488
                                                               ->  Nested Loop  (cost=6.89..924.98 rows=240 width=39) (actual time=0.003..0.003 rows=0 loops=72)
                                                                     ->  Seq Scan on store  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=72)
                                                                           Filter: ((s_city)::text = ANY ('{"Pleasant Hill",Riverside}'::text[]))
                                                                           Rows Removed by Filter: 12
                                                                     ->  Bitmap Heap Scan on store_sales  (cost=6.89..921.43 rows=240 width=43) (never executed)
                                                                           Recheck Cond: ((ss_store_sk = store.s_store_sk) AND (ss_sold_date_sk = date_dim.d_date_sk))
                                                                           ->  Bitmap Index Scan on store_sales_ss_store_sk_ss_sold_date_sk_idx  (cost=0.00..6.83 rows=240 width=0) (never executed)
                                                                                 Index Cond: ((ss_store_sk = store.s_store_sk) AND (ss_sold_date_sk = date_dim.d_date_sk))
                                                         ->  Index Scan using household_demographics_pkey on household_demographics  (cost=0.28..0.31 rows=1 width=4) (never executed)
                                                               Index Cond: (hd_demo_sk = store_sales.ss_hdemo_sk)
                                                               Filter: ((hd_dep_count = 6) OR (hd_vehicle_count = 1))
                                                   ->  Index Scan using customer_address_ca_address_sk_idx on customer_address  (cost=0.29..0.31 rows=1 width=13) (never executed)
                                                         Index Cond: (ca_address_sk = store_sales.ss_addr_sk)
                     ->  Index Scan using customer_pkey on customer  (cost=0.29..8.07 rows=1 width=60) (never executed)
                           Index Cond: (c_customer_sk = store_sales.ss_customer_sk)
               ->  Index Scan using customer_address_ca_address_sk_idx on customer_address current_addr  (cost=0.29..0.36 rows=1 width=13) (never executed)
                     Index Cond: (ca_address_sk = customer.c_current_addr_sk)
 Planning Time: 0.834 ms
 Execution Time: 10.226 ms
(43 rows)

